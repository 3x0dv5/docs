.. index::
   single: GEOMTRANSFORM Javascript

.. _geomtransformjs:

*****************************************************************************
 GEOMTRANSFORM Javascript
*****************************************************************************

:Author:        Alan Boudreault
:Contact:       aboudreault at mapgears.com
:Date: $Date$
:Revision: $Revision$
:Last Updated: 2013/16/12

.. contents:: Table of Contents
    :depth: 2
    :backlinks: top

Introduction
---------------------------------------------

Using GEOMTRANSFORM this way makes it possible to modify the geometry
programmatically in addition to the built-in geomtransform functions.

Usage
---------------------------------------------
Simply declare the javascript plugin this way:

.. code-block:: mapfile

  MAP
    ...
    LAYER
    ...
      GEOMTRANSFORM "javascript://transform.js" # relative path
      CLASS
      END
    END
  END

The path can also be absolute.

.. code-block:: mapfile

  MAP
    ...
    LAYER
    ...
      GEOMTRANSFORM "javascript:///home/user/transform.js" # absolute path
      CLASS
      END
    END
  END

The javascript plugin has to implement a function named **geomtransform** that
will be automatically called. This function has to return a new geometry.

Access to the feature attributes is made through the ``shape.attributes``
javascript object.

The following javascript functions are available:

- alert(str1, str2, ..., str)
    print some text in MapServer logs
- print(str1, str2, ..., str)
    print some text in MapServer logs
- require(path_to_lib1, path_to_lib2, ..., path_to_lib)
    include one or more javascript lib

Example 1. Simple Geomtransform
---------------------------------------------
This example does a simple vertical translation ...

.. code-block:: javascript

    function geomtransform() {
      new_shape = new shapeObj(); // if you want to preserve the, use clone() and setGeometry()
      new_shape.add(new lineObj());
      new_point = new pointObj();
      new_point.x = shape.line(0).point(0).x;
      new_point.y = shape.line(0).point(0).y+30000;
      new_shape.line(0).add(new_point);
      return new_shape;
    }

Example 3. Printing logs in MapServer logs
---------------------------------------------
This example prints some javascript logs in
MapServer logs.

.. code-block:: mapfile

  MAP
    ...
    CONFIG  "MS_ERRORFILE" "/tmp/mapserver.log"
    DEBUG 1
    LAYER
    ...
       GEOMTRANSFORM "javascript://transform.js"
    ...
    END
  END

.. code-block:: javascript

    function geomtransform() {
      new_shape = new shapeObj();
      new_shape.add(new lineObj());
      new_point = new pointObj();
      new_point.x = shape.line(0).point(0).x;
      new_point.y = shape.line(0).point(0).y+30000;
      print('Modified y value from: ' + shape.line(0).point(0).y + ' to: '+new_point.y);
      new_shape.line(0).add(new_point);
      return new_shape;
    }

Basic API
----------

A minimal API is currently available to create a new shape.

pointObj
^^^^^^^^

Constructor
...............................................................................

.. code-block:: javascript

   new pointObj()

Members
...............................................................................

=============== =========== ====================================================
Type                Name    Note
=============== =========== ====================================================
double          x
double          y
double          z
double          m
=============== =========== ====================================================

Methods
...............................................................................

void setXY(double x, double y[, double m])
     Set the x,y[,m] values.

void setXYZ(double x, double y, double Z[, double m])
     Set the x,y,z[,m] values.

lineObj
^^^^^^^^

Constructor
...............................................................................

.. code-block:: javascript

   new lineObj()

Members
...............................................................................

=============== =========== ====================================================
Type                Name    Note
=============== =========== ====================================================
int             numpoints   read-only
=============== =========== ====================================================

Methods
...............................................................................

pointObj point(int index)
        Returns the point at the `index` position.

void add(lineObj line)
     Add a point to the line.

void addXY(double x, double y[, double m])
     Add point to the line from a x,y[,m] values.

void addXYZ(double x, double y, double Z[, double m])
     Add point to the line from a x,y,z[,m] values.

shapeObj
^^^^^^^^

Constructor
...............................................................................

.. code-block:: javascript

   new shapeObj(int type)

'type' is one of shapeObj.Point, shapeObj.Line, shapeObj.Polygon or shapeObj.Null

Members
...............................................................................

=============== =========== ====================================================
Type                Name    Note
=============== =========== ====================================================
int             numvalues   read-only
int             numlines    read-only
int             index       read-only
int             type        read-only
int             tileindex   read-only
int             classindex  read-only
text            text
=============== =========== ====================================================

Methods
...............................................................................

shapeObj clone()
         Returns a clone of the shape.

lineObj line(int index)
        Returns the line at the `index` position.

void add(lineObj line)
     Add a line to the shape.

void setGeometry(shapeObj shape)
     Replace the geometry of the object with the `shape` geometry.

