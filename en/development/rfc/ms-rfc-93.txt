.. _rfc93:

=========================================================================
MS RFC 93: UTF Grid Support
=========================================================================

:Date:  2013/3/26
:Author: Steve Lime
:Contact: sdlime@comcast.net
:Author: Thomas Bonfort
:Contact: 
:Author: Daniel Morissette
:Contact:
:Author: Mike Smith
:Contact: 
:Status: Draft
:Version: MapServer 6.4

1. Overview
-------------

UTFGrid is a open solution for specifying raster interaction data. The goal being to provide highly scalable user
interaction with raster maps. The objective of this RFC is to enable MapServer to produce UTFGrid output. 

2. Proposed solution
--------------------

This work would add the ability to write UTFGrids (JSON) as output from a normal map draw operation, that is, via 
CGI mode=map or WMS GetMap requests.

2.1 Rendering the UTFGrid
-------------------------

New UTFGrid renderer that would utilize the AGG library using an unsigned int32 canvas to encode feature IDs as their
literal UTF-8 respresentation. Feature IDs (starting at 0) would be assigned sequentially as features are renderd  
and a reference to the feature's key would be maintained as part of the rendering process. The list of feature keys 
will be searched first to avoid duplication. It is certainly reasonable to define a key for feature that respresents a
thematic property, for example population age class, which would result far smaller output than keys that are unique 
to each feature. A layers key item is defined by the new UTFITEM attribute.

The UTFRenderer will draw points, lines and polygons based loosely on the underlying style definition.

  - Polygons: solid fill.
  - Lines: solid line with width. Patterns are not applied.
  - Points: rectangle based on the bounding box of the symbol will be used.

Labels can be rendered using their parent feature id (derived via features UTFITEM) where the labels bounding box is
drawn to the map. This is an optional capability which can be enabled through the output format:

::

  OUTPUTFORMAT
    NAME 'myUTFGrid'
    DRIVER UTFGRID
    FORMATOPTION 'ATTACHMENT=myUTFGrid.js' 
    FORMATOPTION 'labels=true'
    FORMATOPTION 'duplicates=false'
  END

It may be desireable NOT to remove duplicate feature id/key pairs since that process could be expensive depending
on the number of features in the map. The format option duplicates=false can be used to skip this step. The resulting
JSON file will be a bit larger.

2.2 Exposing Feature Properties
-----------------------------

A new layer element (UTFDATA) would be added to allow the creation of simple JSON templates using MapServer
expression syntax identical to what is used with classObj->text class text syntax. UTFDATA would be of type
expressionObj. If UTFITEMs is set the UTFDATA should expose those so that keys and data can be connected.

If a UTFITEM is not set the sequential id (based on rendering order) will be used. This value can be referenced in
the UTFDATA expression using the special tag !!sid!!.

Examples:

::

    UTFITEM "fid"
    UTFDATA "{id:'[fid]', name:'[name]', country:[country_code], area:[area]}"
      or
    UTFDATA ("{fid:'" + [fid] "', name:'" + escape([name], JSON) + "', area:'" + commify(tostring([area],'%.2f')) + "'}")

::
    
  # no UTFITEM    
  UTFDATA "{id:!!sid!!, name:'[name]', country:[country_code], area:[area]}"

If no UTFDATA is provided no data beyond the UTFITEM values will be exposed and sometimes this is all that
is required.

2.4 Discussion
--------------

It feels awkward to add output format specific attributes like UTFDATA and UTFITEM. Metadata would work for
the UTFITEM since it's just a string. That said UTFDATA is more complex base type and is subject to additional 
pre-processing (e.g. token building, parsing) so using a metadata key would be very inefficient. If there were
other needs for a structure with similar components (e.g. item name, expression) maybe something more generic
could be proposed.


3. Implementation Details
-------------------------


3.1 Overview
------------

- there are two new keywords (UTFDATA and UTFITEM) that exists at the layer-level
- one new renderer (UTFGRID) will be made available
- ...

3.2 Files affected
------------------

The following files will be modified by this RFC:

- mapserver.h: Add new output format defines, extend layerObj, etc... 
- mapfile.c/mapfile.h: Add new keywords: UTFITEM and UTFDATA.
- mapstring.h: Add a new function to encode a string for using in JSON output.
- mapoutput.c: Add appropriate entries for new UTFGRID driver.

The following files will be added by this RFC:

- maputfgrid.c/maputfgrid.h: Implementation of the new UTFGrid renderer.

3.3 MapScript
-------------

PHP MapScript will need get/set methods added to the layer class. Swig-based MapScript should need no changes.

3.4 Backwards Compatibilty Issues
---------------------------------

None anticipated.


4. Security implications
------------------------

None anticipated.


5. Performance implications
---------------------------

No impacts on core performance are anticipated.


6. Documentation needs
-----------------------

The layer object documentation will need to be updated to reflect the new parameters. The output section will need some
additions to talk about configuration options associated with the new output format.


7. Bug ID
---------

None assigned.


8. Voting history
-----------------

None


.. _4564: https://github.com/mapserver/mapserver/issues/4564
.. _UTFGrid Spec: https://github.com/mapbox/utfgrid-spec
.. _MapBox Description: http://mapbox.com/developers/utfgrid/
.. _OpenLayers Example: http://openlayers.org/dev/examples/utfgrid.html
