# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MapServer-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-16 12:10+0200\n"
"PO-Revision-Date: 2014-09-21 12:34+0000\n"
"Last-Translator: Jacolin <yjacolin@free.fr>\n"
"Language-Team: Japanese (http://www.transifex.com/projects/p/mapserver-doc/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 80602155aa5e419d984d48995e50689d
#: ../../../en/tutorial/background.txt:6
msgid "Tutorial background"
msgstr ""

# af2f6e38e3c14e1fa6f63067cb63239f
#: ../../../en/tutorial/background.txt:9
msgid "Tutorial Timeframe"
msgstr ""

# f199e92da14247f78105c50c2d44c7f5
#: ../../../en/tutorial/background.txt:11
msgid ""
"While some users can go through this tutorial in one day, those who work on "
"each example in detail can probably expect to finish in one week."
msgstr ""

# 7c92c132fe8041c7bebf72e5ddc1eaa8
#: ../../../en/tutorial/background.txt:15
msgid "Tutorial Data"
msgstr ""

# c0c8a5934da743ab80846435e3189883
#: ../../../en/tutorial/background.txt:17
msgid ""
"The dataset used in this tutorial was taken from the U.S. Department of the "
"Interior's National Atlas of the United States. You can visit their web site"
" at http://www.nationalatlas.gov. The dataset was clipped to the upper great"
" lakes region (Minnesota, Michigan, and Wisconsin) to reduce storage size. "
"Additional raster images were added courtesy of the TerraSIP project at the "
"University of Minnesota. When using this tutorial, you are encouraged to use"
" your own dataset."
msgstr ""

# 91e16b99656344d9aa274330bd97e383
#: ../../../en/tutorial/background.txt:25
msgid ""
"Like MapServer itself, this tutorial is open and customizable to anyone. "
"This was done in the hope that someone (or some folks) will help design and "
"develop it further."
msgstr ""

# cde8b48029dd4c5183f72663a5c33bd6
#: ../../../en/tutorial/background.txt:29
msgid ""
"Download the data (and all html files) for this tutorial at "
"http://download.osgeo.org/mapserver/docs/mapserver-tutorial.zip."
msgstr ""

# dc382dc0ae2a441f8e63bab32f44cb50
#: ../../../en/tutorial/background.txt:32
msgid "Before Using the Tutorial"
msgstr ""

# 43ceb892c0a54885add9b1696bf023a8
#: ../../../en/tutorial/background.txt:34
msgid "There are some prerequisites to using this tutorial:"
msgstr ""

# 700909367a68498886d1f78d0e74670f
#: ../../../en/tutorial/background.txt:36
msgid ""
"Users will need to have a web server installed and running on their "
"computer. This web server has to have support for common gateway interface "
"(CGI) programs."
msgstr ""

# 93bb24b5d7ae490db7e0421000dfb1d6
#: ../../../en/tutorial/background.txt:39
msgid ""
"Users should have a basic understanding of web servers and internet "
"security. A poorly configured web server can easily be attacked by malicious"
" people. At the very least your software installation will be corrupted and "
"you'll lose hours of productivity, at worst your computer can be used to "
"attack other computers on the internet."
msgstr ""

# b7c5ea27847a4732a5124908053d13b2
#: ../../../en/tutorial/background.txt:45
msgid ""
"It is recommended that users of this tutorial read the :ref:`Introduction to"
" MapServer <introduction>` before proceeding with this tutorial."
msgstr ""

# a6a86fe7427d49f09b753475e6ed1a4b
#: ../../../en/tutorial/background.txt:49
msgid ""
"To use this tutorial, users will need to have a MapServer CGI program "
"(mapserv or mapserv.exe) installed in their systems. MapServer source code "
"is available for download :ref:`here <download>`. Documentation exists on "
"how to compile and install MapServer:"
msgstr ""

# ed223b345c404bf2a2dfe95524107531
#: ../../../en/tutorial/background.txt:54
msgid ""
"for UNIX users, please read the :ref:`MapServer UNIX Compilation and "
"Installation HOWTO <unix>`."
msgstr ""

# 2ddc36248dad4063bea6a6552b7f7bfb
#: ../../../en/tutorial/background.txt:55
msgid ""
"Windows users should read the :ref:`MapServer Win32 Compilation and "
"Installation HOWTO <win32>`"
msgstr ""

# e4af769f766d4e8cb6cb9c527fa1d823
#: ../../../en/tutorial/background.txt:57
msgid ""
"In addition, precompiled binaries exist for a number of platform (see the "
":ref:`download page <download>`)."
msgstr ""

# a8aa986348bd47a39abc323f79d5a5ed
#: ../../../en/tutorial/background.txt:61
msgid "Windows, UNIX/Linux Issues"
msgstr ""

# b50d2f798a2a4c728dcb50bc510444e9
#: ../../../en/tutorial/background.txt:64
msgid "Paths"
msgstr ""

# 4e8dbcc943f84d86a458d2e1014c72eb
#: ../../../en/tutorial/background.txt:66
msgid ""
"This tutorial was created on Linux/UNIX but should work with minimal changes"
" on Windows platform. The main differences are the paths in the map files. "
"Windows users need to specify the drive letter of the hard disk where their "
"tutorial files reside. Here's an example:"
msgstr ""

# d8290d3fc6c847eead0372673f2b84ea
#: ../../../en/tutorial/background.txt:71
msgid "A UNIX map file might include a parameter like this:"
msgstr ""

# 0133727c61094756b11b37242dde530d
#: ../../../en/tutorial/background.txt:77
msgid "In Windows, the same parameters might look like this:"
msgstr ""

# fc757c8a18804a22a5a3f97005347133
#: ../../../en/tutorial/background.txt:83
msgid "or:"
msgstr ""

# f1f3637b7f424ec7a3dc4794477fedcc
#: ../../../en/tutorial/background.txt:89
msgid ""
"Notice that either slash or backslash works in Windows. The usual backslash "
"may work well for you if you want to make a distinction between virtual (as "
"in URLs or web addresses) and local paths in your map file. However, if you "
"plan to move your application to UNIX at some point, you'll have the tedious"
" task of switching all backslashes to slashes."
msgstr ""

# 917874b8cc52427cb11b736cce573c6d
#: ../../../en/tutorial/background.txt:96
msgid ""
"While we're on the subject of paths, keep in mind that paths in mapfiles are"
" typically relative to the system's root directory: the slash (\"/\") in "
"UNIX or some drive letter (\"C:\") in Windows. This is true except when "
"specifically asked to enter a URL or when referencing a URL. When working "
"with HTML template files, paths are relative to the web server's root "
"directory.  i.e., \"/tutorial/\" is relative to "
"\"http://demo.mapserver.org/\". Please read "
"http://www.alistapart.com/articles/slashforward/ for a few insights on URLs."
msgstr ""

# ccab04a8789c4349a92fb878cbbf830f
#: ../../../en/tutorial/background.txt:107
msgid "Executable"
msgstr ""

# e798cc724f4a479fb1e9dc4ec4027b12
#: ../../../en/tutorial/background.txt:109
msgid ""
"Another issue is that UNIX executable files don't require a .EXE or .COM "
"extensions, but they do in Windows. If you are using Windows, append .exe to"
" all instances of \"/cgi-bin/mapserv\" or \"/cgi-bin/mapserv50\" to make it "
"\"/cgi-bin/mapserv.exe\" or \"/cgi-bin/mapserv50.exe\"."
msgstr ""

# d2c69121f404422698cd235531a8e68d
#: ../../../en/tutorial/background.txt:116
msgid "Other Resources"
msgstr ""

# c02f8435210f43ed9b71c7d56bd85b14
#: ../../../en/tutorial/background.txt:118
msgid ""
"Other documentation exist to give you better understanding of the many "
"customizations MapServer offer. Please visit the MapServer documentation "
"page at http://www.mapserver.org. There you will find several HOWTO "
"documents, from getting started to using MapScript, a scripting interface "
"for MapServer."
msgstr ""

# e2b391fa3cd84d1ba4d56909820f46de
#: ../../../en/tutorial/background.txt:126
msgid ""
":ref:`Back to Tutorial home <tutorial>` | :ref:`Proceed to Section 1 "
"<tutorial_section1>`"
msgstr ""

# 93acb06b7e4948f38893d7bd275b80ae
#: ../../../en/tutorial/example1-1.txt:7
msgid "Example 1.1"
msgstr ""

# 95546b71809e433e982857733a8b7022
#: ../../../en/tutorial/example1-1.txt:9
msgid "Map With A Single Layer"
msgstr ""

# b3e7fe98ffc84825a6a3208bb5c5f3e7
#: ../../../en/tutorial/example1-1.txt:13
msgid ""
"MapServer can create an image and dump it to a local directory or send it "
"directly to the requesting web browser, as in this example. You can view it "
"without the need for an html page, just enter this URL: `<http://localhost"
"/cgi-"
"bin/mapserv?map=/ms4w/apps/tutorial/htdocs/example1-1.map&layer=states&mode=map>`_"
" .  This URL will work if you are on the web server (if not, \"localhost\" "
"must be replaced with your web server's name (e.g. \"demo.mapserver.org\") "
"or IP address (e.g. \"140.211.15.84\")."
msgstr ""

# 58aadbd99e864bce883e32f5cb4b807d
#: ../../../en/tutorial/example1-1.txt:21
msgid ""
"This URL can be broken into three parts: the first part, http://localhost"
"/cgi-bin/mapserv?, calls the MapServer CGI program. If you invoke it as is "
"you will get this familiar message:"
msgstr ""

# bebd0db3e3db439eb549c1a1981f4ed9
#: ../../../en/tutorial/example1-1.txt:29
msgid ""
"The next three parts make up the query string.  The query string contains "
"the CGI parameters (variables and their values), with each parameter "
"separated by an ampersand (\"&\"). So, looking at the query string:"
msgstr ""

# cc7cb362d0ca4abeb500656090829b73
#: ../../../en/tutorial/example1-1.txt:34
msgid ""
"The first parameter \"map\" has a value "
"\"/ms4w/apps/tutorial/htdocs/example1-1.map\".  This tells the MapServer CGI"
" program (**mapserv** or **mapserv.exe**) what mapfile to process/parse."
msgstr ""

# 91fe6ff1cc3243f0b9fed14215313276
#: ../../../en/tutorial/example1-1.txt:39
msgid ""
"The next parameter (*layer=states*) tells **mapserv** to \"turn on\" the "
"states layer.  Recall that we named our layer object \"states\"."
msgstr ""

# 887456acec1444529ce2e93d26218160
#: ../../../en/tutorial/example1-1.txt:43
msgid ""
"The last parameter (*mode=map*) tells **mapserv** what to do with the output"
" from the mapfile. In this case it tells **mapserv** to dump the image "
"directly to the web browser (the client), without first creating a temporary"
" image on the server."
msgstr ""

# 239c384c9ca847dd9edeb1da73ba6ca9
#: ../../../en/tutorial/example1-1.txt:48
msgid ""
"The MapServer *mode* CGI variable takes values other than *map*. For example"
" if you use *mode=browse*, MapServer will dump the image to a temporary "
"directory on the server. The browse mode will not work now but we'll come "
"back to it again later."
msgstr ""

# b6930e36308e42afbf8d12620804c32b
#: ../../../en/tutorial/example1-1.txt:55
msgid "Mapfile Structure"
msgstr ""

# df5aeb7149cb41e58e75c2f5c012dd61
#: ../../../en/tutorial/example1-1.txt:57
msgid ""
"This is what the mapfile looks like: :ref:`Example1-1.map <example1-1-map>`."
msgstr ""

# 282580c8f63d4df78f8e7d625ed61d83
#: ../../../en/tutorial/example1-1.txt:59
msgid ""
"The :ref:`MAPFILE <mapfile>` is MapServer's basic configuration mechanism. "
"It is made up of \"objects\" and each object can have keywords or other "
"objects. It has a hierarchical structure such that some objects fall under "
"other objects... on top of this hierarchy is the MAP object, all other "
"objects belong to it. This example shows a very straightforward heirarchy of"
" objects.  As you go through each example, the complexity of these "
"hierarchical trees will increase."
msgstr ""

# fd95bbb5fd554fc687c6b78d581ca081
#: ../../../en/tutorial/example1-1.txt:67
msgid ""
"A few quick notes about mapfiles: we define each object in the mapfile with "
"the object name and we close it with \"END\" and we precede comments with a "
"pound (#) sign."
msgstr ""

# fef3c963e3d547bc80267dde992f6747
#: ../../../en/tutorial/example1-1.txt:71
msgid ""
"Let's break \"example1-1.map\" down by objects. Its structure looks like "
"this:"
msgstr ""

# a0a52d76772d4b2082bdeeefcfd1eba2
#: ../../../en/tutorial/example1-1.txt:82
msgid "MAP Object"
msgstr ""

# 28ece2b34cf74a8e976f9f5a48dc5d8f
#: ../../../en/tutorial/example1-1.txt:84
msgid "Let's look at the keywords (parameters) within the MAP object:"
msgstr ""

# f4d549f51fc540b4a4fbdf5e50eb67b4
#: ../../../en/tutorial/example1-1.txt:88
msgid "**MAP**"
msgstr ""

# 13d2273f586943fbad6916dddd9cfce4
#: ../../../en/tutorial/example1-1.txt:87
msgid ""
"Every mapfile must start with the :ref:`MAP <map>` object--the entire "
"mapfile is the MAP object."
msgstr ""

# e9a3b59e13f24f2aade49d2d7b5d53c5
# 1c3f282d894b4e3eac6f915b7c769c37
#: ../../../en/tutorial/example1-1.txt:99
#: ../../../en/tutorial/example1-5.txt:87
msgid "**IMAGETYPE**"
msgstr ""

# b7b50466adc043eb927336c3eda51617
#: ../../../en/tutorial/example1-1.txt:91
msgid ""
"The keyword IMAGETYPE is used to define which image format the MapServer CGI"
" program should use for output. In this case we are using indexed color PNG "
"(similar to GIF). This could be GIF, if we compiled the GD library with GIF "
"support, WBMP, or JPEG. We can also specify other output options (PDF, SWF, "
"GeoTIFF) provided that we compiled support for them and specify them with "
"the OUTPUTFORMAT object. The OUTPUTFORMAT goes beyond the scope of this "
"tutorial but you can find out more about by reading through documentations "
"in the MapServer web site."
msgstr ""

# 4599eb451f02427e81fff6411478e024
#: ../../../en/tutorial/example1-1.txt:139
msgid "**EXTENT**"
msgstr ""

# f413d526558b46bc8e99a7bcdf110ec6
#: ../../../en/tutorial/example1-1.txt:102
msgid ""
"This parameter specifies the output extent of our map--the bounding box of "
"our initial map.  The EXTENT values are given in this format::"
msgstr ""

# 00fe2a1598fa440b918c39e1944c4a96
#: ../../../en/tutorial/example1-1.txt:108
msgid ""
"with spaces separating each value. This needs to be in the same units as the"
" data or, if specifying a different output projection, in the same units as "
"the output projection."
msgstr ""

# 6e7769bb03c5401d9c1ae52d9a452a21
#: ../../../en/tutorial/example1-1.txt:112
msgid ""
"In this example our data is in geographic projection so the units are in "
"decimal degrees.  You can use the utility `ogrinfo "
"<http://gdal.osgeo.org/ogr_utilities.html>`_, which is part of the GDAL/OGR "
"library package, to get the extent of a particular Shapefile dataset (or "
"other supported vector formats).  Here is the command I used to get the "
"extent for this example::"
msgstr ""

# 6d30fe7203b745c294222e107f023535
#: ../../../en/tutorial/example1-1.txt:121
msgid "This returned the following output::"
msgstr ""

# 4c3e1b7bd23c49aa96264209d5219b57
#: ../../../en/tutorial/example1-1.txt:135
msgid ""
"You can also use ArcView or an open source GIS packages--QGIS, Thuban, etc."
msgstr ""

# 8762c58768a349fb8cf113f961029a61
#: ../../../en/tutorial/example1-1.txt:138
msgid ""
"Feel free to change the values of EXTENT to get a better understanding of "
"how it changes your map."
msgstr ""

# 67db5d58f98d4b36a2dab16c32405585
# ee468c7129814a35ac842c1c914d52d5
#: ../../../en/tutorial/example1-1.txt:145
#: ../../../en/tutorial/example1-4.txt:90
msgid "**SIZE**"
msgstr ""

# 160466e9e4d74e8692a13dfd885c3cd1
#: ../../../en/tutorial/example1-1.txt:142
msgid ""
"This is the size of the image (the map) that MapServer will generate, in "
"pixels. So our map is 400 pixels wide by 300 pixels high.  Again, change "
"this to your heart's content and see how it affects your map."
msgstr ""

# 75abf46f0b194d76a81f234297a5a460
#: ../../../en/tutorial/example1-1.txt:156
msgid "**SHAPEPATH**"
msgstr ""

# dc48b31929dd488aa71eb8c1777def58
#: ../../../en/tutorial/example1-1.txt:148
msgid ""
"This is the path to your data layers. You can provide absolute paths (i.e. "
"\"/ms4w/apps/tutorial/data\" or \"C:/ms4w/apps/tutorial/data\") or paths "
"relative to your mapfile's location (in this example, you'd use "
"\"../data\"). This path doesn't have to be web accessible, and probably "
"shouldn't be unless you want anyone to download your raw data. It has "
"nothing directly to do with the web so don't even think of URLs here.  Just "
"make sure that the user running the web server (usually \"nobody\" or "
"\"apache\" in the \\*nix world) can READ the data in the SHAPEPATH."
msgstr ""

# 21bafb2ba15c4baea84f8dcd0cfa2f4d
#: ../../../en/tutorial/example1-1.txt:161
msgid "**IMAGECOLOR**"
msgstr ""

# c497d176035748d5ba71aebf1775e35f
#: ../../../en/tutorial/example1-1.txt:159
msgid ""
"This is the background color of your map. The values are RGB values so 255 "
"Red, 255 Green, and 255 Blue which results in a white background.  Go ahead "
"and play with this values."
msgstr ""

# a64d0663c4634430bf7b7e2f9ad10c90
#: ../../../en/tutorial/example1-1.txt:164
msgid "LAYER Object"
msgstr ""

# 3930a3b854e74dcd88ef2c65326b528f
#: ../../../en/tutorial/example1-1.txt:166
msgid "Now let's look at the LAYER object parameters:"
msgstr ""

# daefcc271f314f6fa26112d7adfe6728
#: ../../../en/tutorial/example1-1.txt:172
msgid "**LAYER**"
msgstr ""

# 41108e271e7e48ed851404b4b328f6b8
#: ../../../en/tutorial/example1-1.txt:169
msgid ""
"Marks the beginning of a :ref:`LAYER <layer>` within the MAP object.  You "
"can specify as many layers as you like (in MapServer versions < 5, there was"
" a limit that could be changed by editing the map.h header file and "
"recompileing MapServer)."
msgstr ""

# 73c6896b22184f0f9e6a6ef22c090a6c
# d7e388a4cb3a464d9e0424d7644f5fb0
#: ../../../en/tutorial/example1-1.txt:178
#: ../../../en/tutorial/example1-1.txt:218
msgid "**NAME**"
msgstr ""

# dde8ecb32a4a458caf8ba018d94e01fc
#: ../../../en/tutorial/example1-1.txt:175
msgid ""
"This is the layer identifier.  MapServer uses this name to toggle the layer "
"on and off.  It won't work in this example as we have the layer STATUS set "
"to default.  We will get back to this in later examples."
msgstr ""

# 85a411c3ad354430bc05f496cfae733f
#: ../../../en/tutorial/example1-1.txt:189
msgid "**DATA**"
msgstr ""

# 3f6ffbf0ec694382a1457d6d588b9fa8
#: ../../../en/tutorial/example1-1.txt:181
msgid ""
"The name of the data (Shapefile dataset in this case). MapServer supports "
"vector data formats other than ESRI's Shapefile format through the use of "
"OGR library (part of the GDAL software package). Please visit the GDAL "
"project web site at `<http://gdal.osgeo.org/>`_ and read "
"`<http://gdal.osgeo.org/ogr/>`_ to learn more about the different vector "
"formats MapServer supports.  In addition, Jeff McKenna and Tyler Mitchell "
"have written a detailed :ref:`guide to using vector data for MapServer "
"<vector>`."
msgstr ""

# 77bd1ccad4154bf79c0c18f6f356d442
# ab58e5f489b84910b6555dd7c33ff805
#: ../../../en/tutorial/example1-1.txt:195
#: ../../../en/tutorial/example1-4.txt:82
msgid "**TYPE**"
msgstr ""

# 5213bca4f52040999548560eb8fd3402
#: ../../../en/tutorial/example1-1.txt:192
msgid ""
"What type of data is it? If it's a vector data, you can specify whether it "
"is a POLYGON, LINE (you use LINE even if your data is technically a "
"POLYLINE), or a POINT. You can also specify RASTER or ANNOTATION data.  Here"
" we want to display POLYGON."
msgstr ""

# 8cbb8493049f4094847c70a5a7f719f0
#: ../../../en/tutorial/example1-1.txt:200
msgid "**STATUS**"
msgstr ""

# d783d810828447a7b44458f716abad48
#: ../../../en/tutorial/example1-1.txt:198
msgid ""
"Layers are turned on or off based on their STATUS. DEFAULT is always on.  ON"
" or OFF works when the LAYER name is passed as part of the query string."
msgstr ""

# b914db3a18304211b7318faf3e4e94d4
#: ../../../en/tutorial/example1-1.txt:203
msgid "CLASS Object"
msgstr ""

# 097603bcf84c48959c75bd4cc6d4646c
#: ../../../en/tutorial/example1-1.txt:205
msgid "Let's look at the CLASS object parameters:"
msgstr ""

# 45722eacb81244a7a6e7229f59170689
#: ../../../en/tutorial/example1-1.txt:211
msgid "**CLASS**"
msgstr ""

# 4d996808ccd645f19b120f3edb366008
#: ../../../en/tutorial/example1-1.txt:208
msgid ""
"Marks the beginning of a :ref:`CLASS <class>` object within the LAYER "
"object. You can specify as many classes within a layer (in MapServer  "
"versions < 5, there was a limit that could be changed by editing the map.h "
"header file and recompiling MapServer)."
msgstr ""

# 94bfbd266514498790f206c5b341171f
#: ../../../en/tutorial/example1-1.txt:214
msgid ""
"The descriptive identifier for this CLASS. LAYER objects can have multiple "
"classes, just like MAP objects can have multiple layers. CLASS names are "
"used by MapServer as labels for the legend so make sure to use an "
"appropriate descriptive name when naming classes. We will talk about legends"
" later in this tutorial."
msgstr ""

# 07cd521107504b48a4b87ea8f8d5c815
#: ../../../en/tutorial/example1-1.txt:221
msgid "STYLE Object"
msgstr ""

# 94ae86cdbcee4ff7a2d5fa3e28f4cf90
#: ../../../en/tutorial/example1-1.txt:223
msgid "And finally, let's look at the STYLE object parameters:"
msgstr ""

# c9ab1ea4f28b43878f48ddea7007adee
#: ../../../en/tutorial/example1-1.txt:228
msgid "**STYLE**"
msgstr ""

# 1f6349d1385d4646864925fa7c0ee346
#: ../../../en/tutorial/example1-1.txt:226
msgid ""
"Marks the beginning of the :ref:`STYLE <style>` object.  You can define "
"multiple styles within a class.  This is useful when you want to overlay a "
"style over another."
msgstr ""

# 09d261af33bf42939306055d0fc97824
# a57305fed87f491a99083e06d943f982
#: ../../../en/tutorial/example1-1.txt:232
#: ../../../en/tutorial/example1-4.txt:59
msgid "**COLOR**"
msgstr ""

# 7bfc9384666a4c6d9116328ca0f1a8dc
#: ../../../en/tutorial/example1-1.txt:231
msgid ""
"This is the fill color of the polygon. In case the TYPE is LINE, this is the"
" line color. The values are in RGB format."
msgstr ""

# 7e422194592c4bfd9b62c0ab88e4dbe9
#: ../../../en/tutorial/example1-1.txt:238
msgid "**OUTLINECOLOR**"
msgstr ""

# fbe9c30fe45842cdbd4491a8107ee79e
#: ../../../en/tutorial/example1-1.txt:235
msgid ""
"This is the outline color of the polygons. The values are in RGB format.  "
"MapServer doesn't draw polygon outlines by default, so if you want to see "
"polygon boundaries, you will want to define an OUTLINECOLOR."
msgstr ""

# e383be0f58394d8db1835ebf792da646
#: ../../../en/tutorial/example1-1.txt:240
msgid ""
"This ends the first example in this tutorial. You are encouraged to change "
"the values of the keywords in the mapfile. It will help you understand what "
"these keywords do."
msgstr ""

# d0085378367340808540294866090ee2
#: ../../../en/tutorial/example1-1.txt:246
msgid ""
":ref:`Back to Section 1 index <tutorial_section1>` | :ref:`Proceed to "
"Example 1.2 <example1-2>`"
msgstr ""

# 5ba31b95c7904aa19f30320870df3764
#: ../../../en/tutorial/example1-1-map.txt:6
msgid "Example1-1.map"
msgstr ""

# d7f1d94013c64f2b8339746226e25c84
#: ../../../en/tutorial/example1-2.txt:7
msgid "Example 1.2"
msgstr ""

# 862d68ae46cd4c2d82873dc42900b74c
#: ../../../en/tutorial/example1-2.txt:10
msgid "Static Map with Two Layers"
msgstr ""

# b97c2aea451747a5918e9951638d5a96
#: ../../../en/tutorial/example1-2.txt:14
msgid ""
"As in the first example, this image was generated by linking the source of "
"the <img> tag to this URL: `<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example1-2.map&layer=states_poly&layer=states_line&mode=map>`_."
" This is how most of the examples in this section work."
msgstr ""

# 69944a18fbe54ca9b3031efcb6912fe8
#: ../../../en/tutorial/example1-2.txt:19
msgid ""
"Anyway, you'll notice that the map here is the same as the first example.  "
"Yes, but the mapfile is different. Have a look."
msgstr ""

# e58fd7e75faa4a1f83eed61a8f23703b
#: ../../../en/tutorial/example1-2.txt:22
msgid ""
"This is what the mapfile looks like: :ref:`Example1-2.map <example1-2-map>`"
msgstr ""

# b2fcb1f8d6e04bea8e4de187a35baa09
# 48ac1fb6913646eebc9d4566cfbec61e
# c2c4cf0887ca4750a8bf83d1526030a8
# f67a492d593c415e805ca57a0536e31b
#: ../../../en/tutorial/example1-2.txt:25
#: ../../../en/tutorial/example1-3.txt:18
#: ../../../en/tutorial/example1-4.txt:26
#: ../../../en/tutorial/example1-5.txt:44
msgid "MapFile Structure"
msgstr ""

# 69829b5852cd401a9917df80b966fa16
# 3dc1e3f0d7b549b5a23b9b5448bfa7e5
# 606a86a181f04c8d91684eb97cec11c1
#: ../../../en/tutorial/example1-2.txt:27
#: ../../../en/tutorial/example1-3.txt:22
#: ../../../en/tutorial/example1-5.txt:48
msgid "The mapfile structure, by objects, looks like this::"
msgstr ""

# 9045027e2fd04378bebb52a9756443b4
#: ../../../en/tutorial/example1-2.txt:34
msgid ""
"Here we split the original layer into two layers. The first layer is still a"
" polygon layer but the :ref:`STYLE object <style>` no longer has "
"OUTLINECOLOR, such as:"
msgstr ""

# bb55683d57fd4bea9f45950a9fac4a65
#: ../../../en/tutorial/example1-2.txt:52
msgid ""
"The second layer is similar to the first except that the TYPE is changed to "
"LINE and the COLOR in the STYLE is changed to the same color as the "
"OUTLINECOLOR in the first example. This produces the same image as the first"
" one."
msgstr ""

# 741bef12e42f4bfca7161b47947005ab
#: ../../../en/tutorial/example1-2.txt:71
msgid "So, why do it this way?"
msgstr ""

# 976b9cf50fb14d79a318ee95f4c1d525
#: ../../../en/tutorial/example1-2.txt:73
msgid ""
"If we continue to add layers on top of the states layer, the outline will "
"most likely be covered up by these other layers.  To still see the state "
"boundaries after we add these other layers, we have to separate the states "
"boundary line layer from the states polygon layer and put it on top of the "
"other other layers.  There is order in how we define/add layers and you'll "
"see it clearly as we proceed in this section."
msgstr ""

# 6c87cf17b68c4c478b70365c10f3610e
#: ../../../en/tutorial/example1-2.txt:83
msgid ""
":ref:`Back to Example 1.1 <example1-1>` | :ref:`Proceed to Example 1.3 "
"<example1-3>`"
msgstr ""

# 8c0f554c0452400caa2da8a7bbf06552
#: ../../../en/tutorial/example1-2-map.txt:6
msgid "Example1-2.map"
msgstr ""

# 32c587922b964dacbcbc0e351256f75c
#: ../../../en/tutorial/example1-3.txt:7
msgid "Example 1.3"
msgstr ""

# ed623bde595d4238bde80519fda75d1d
#: ../../../en/tutorial/example1-3.txt:10
msgid "Displaying Classes in a Layer"
msgstr ""

# 26aa5bc0230b473182e4889472ad0778
#: ../../../en/tutorial/example1-3.txt:12
msgid ""
"By using non-spatial attribute information in the data, we can create a map "
"like this:"
msgstr ""

# 0ba30cb24d9949f5b0d3b002da421db3
#: ../../../en/tutorial/example1-3.txt:20
msgid ""
"This is what the mapfile looks like: :ref:`Example1-3.map <example1-3-map>`."
msgstr ""

# f9b166c9638b42efbbc1979bcaff21d1
#: ../../../en/tutorial/example1-3.txt:32
msgid "Keywords"
msgstr ""

# d6de9e37815f4d8fb0e1acb40effbd65
#: ../../../en/tutorial/example1-3.txt:34
msgid ""
"Our mapfile still only has two layers but the polygon layer has been broken "
"down into two classes.  Let's have a look at the additional parameters:"
msgstr ""

# 1369a5e78bf9400ba1d9463958b13c6f
#: ../../../en/tutorial/example1-3.txt:52
msgid "**CLASSITEM**"
msgstr ""

# c08b49166bdb4158997583c582a5afd1
#: ../../../en/tutorial/example1-3.txt:39
msgid ""
"This keyword is used to specify what attribute to use in separating the "
"class objects.  In this example that attribute is \"CLASS\".  If you open "
"the database file associated with this layer's shapefile, you'll see that "
"there's a column (attribute) called \"CLASS\"."
msgstr ""

# 215b449bc01e449abbfb0fd6051332c5
#: ../../../en/tutorial/example1-3.txt:44
msgid ""
"How do we know which attribute to use?  Well, database records in shapefiles"
" are stored in DBF files.  You can open it in a spreadsheet program such as "
"Openoffice.org's Calc, or in a desktop GIS software such as QGIS, Thuban, or"
" ArcView.  If your data came with a metadata (and it should!), you can skim "
"through through that metadata file for attribute information.  You can also "
"use \"ogrinfo\" to display basic attribute info in your shapefiles--look "
"back at example 1.1 (the last few lines after \"Layer SRS WKT:\" show the "
"attribute names and types)."
msgstr ""

# 98b1dcbe8bee42e6a9c8ef1394919c9d
#: ../../../en/tutorial/example1-3.txt:59
msgid "**EXPRESSION**"
msgstr ""

# 3d2ae7f8735d48c88847e5c0ca3e3db8
#: ../../../en/tutorial/example1-3.txt:55
msgid ""
"For each class, we specify what attribute value to use.  This is the "
"simplest form of EXPRESSION.  EXPRESSIONs can be even more complex than "
"this, allowing one to evaluate regular or logical expressions.  Please look "
"at :ref:`expressions` in the mapfile reference to see what you can do with "
"EXPRESSION."
msgstr ""

# f5583d8895034b679fe56c107a67f5a7
#: ../../../en/tutorial/example1-3.txt:63
msgid ""
":ref:`Back to Example 1.2 <example1-2>` | :ref:`Proceed to Example 1.4 "
"<example1-4>`"
msgstr ""

# d7623cede1d141c8abe52858a89f8290
#: ../../../en/tutorial/example1-3-map.txt:6
msgid "Example1-3.map"
msgstr ""

# 4c211644adc546aaba204cc08036a481
#: ../../../en/tutorial/example1-4.txt:7
msgid "Example 1.4"
msgstr ""

# f700def129c140379d10a944cea0f793
#: ../../../en/tutorial/example1-4.txt:10
msgid "Labeling the Map"
msgstr ""

# 9615fd534a534c5d9c1eb52ebef51fb3
#: ../../../en/tutorial/example1-4.txt:12
msgid "We can also add labels to our map..."
msgstr ""

# c23adedbddee45c19abb650bc7b9b444
#: ../../../en/tutorial/example1-4.txt:16
msgid ""
"MapServer has a very flexible labeling engine.  It supports native bitmap as"
" well as truetype fonts.  Font scaling is supported with truetype. The "
"labeling angles and placements can be customized...  If you take the time to"
" learn the many parameters involved in creating good labels, you will be "
"rewarded with informative and aesthetically pleasing maps."
msgstr ""

# 8fc247cd7db24170a578f7bf3a08b2b5
#: ../../../en/tutorial/example1-4.txt:23
msgid ""
"This is what the map file looks like: :ref:`Example1-4.map "
"<example1-4-map>`."
msgstr ""

# d8cdc96c776d407aabc34f5a3860eab5
#: ../../../en/tutorial/example1-4.txt:28
msgid "The map file structure, by objects, looks like this:"
msgstr ""

# 342ba1d2453846c49aef437886a254eb
#: ../../../en/tutorial/example1-4.txt:38
msgid "The LABEL Object and Keywords"
msgstr ""

# 88a71dbe8e3749fa8d6a745ec27e290f
#: ../../../en/tutorial/example1-4.txt:40
msgid "Here we introduce a few more parameters along with the LABEL object:"
msgstr ""

# a4c86015c4e74e2cb5001b13c3b61cce
#: ../../../en/tutorial/example1-4.txt:47
msgid "**FONTSET**"
msgstr ""

# 2ddfd718139448d9966124da4aeb4616
#: ../../../en/tutorial/example1-4.txt:43
msgid ""
"Here we specify the full path to our truetype fonts list (or fontset) file. "
"This file lists each of the available fonts. See the file itself and the "
":ref:`MapServer fontset documentation <fontset>` for more info.  FONTSET is "
"a parameter of the MAP object."
msgstr ""

# 993fb72199824d8098f56bd02f889259
#: ../../../en/tutorial/example1-4.txt:51
msgid "**LABELITEM**"
msgstr ""

# 15105abb5bc841eea845cc9481d787e6
#: ../../../en/tutorial/example1-4.txt:50
msgid ""
"This specifies which data attribute to use for labeling, in this case "
"\"STATE\". LABELITEM is a parameter of the LAYER object."
msgstr ""

# 15c068536352440c870253f02e198277
#: ../../../en/tutorial/example1-4.txt:55
msgid "**LABEL**"
msgstr ""

# 5a2bdc5d605c4a1aa087bd438932f8da
#: ../../../en/tutorial/example1-4.txt:54
msgid ""
"Marks the beginning of the LABEL object. The label object can be used under "
"other objects (i.e. the SCALEBAR object)."
msgstr ""

# 722fc631061e41a4bccb217e37d8696e
#: ../../../en/tutorial/example1-4.txt:58
msgid "Within the LABEL object, COLOR specifies the color of the label text."
msgstr ""

# 1a4e4aedb5484625837962ca7033bfb5
#: ../../../en/tutorial/example1-4.txt:67
msgid "**SHADOWCOLOR - deprecated**"
msgstr ""

# 25ca9b631c974261808941d1d06616aa
#: ../../../en/tutorial/example1-4.txt:62
msgid "This specifies the shadow color of the label text."
msgstr ""

# 5269343d009045968d903e7b9adbcee5
# 396f8ae8eb004e6984c75c4c633dd5fe
#: ../../../en/tutorial/example1-4.txt:66
#: ../../../en/tutorial/example1-4.txt:76
msgid ""
"Since MapServer  6, LABEL STYLE with GEOMTRANSFORM LABELPOLY must be used "
"instead.  The tutorial files have not been updated."
msgstr ""

# aa0c158bb5c147c584f805bd44041a69
#: ../../../en/tutorial/example1-4.txt:77
msgid "**SHADOWSIZE - deprecated**"
msgstr ""

# 50ba0c07463f4ed1830d3f472fda9794
#: ../../../en/tutorial/example1-4.txt:70
msgid ""
"Specifies the shadow size. The value corresponds to the X and the Y shifts "
"in pixels. So, \"2 2\" means two pixels wide by two pixels high."
msgstr ""

# 7bca90dc8a47479e89d8a0129be2f5e3
#: ../../../en/tutorial/example1-4.txt:80
msgid ""
"Within the LABEL object, TYPE specifies what type of font to use. We have "
"the choice of TRUETYPE or BITMAP (the built-in fonts). We choose TRUETYPE."
msgstr ""

# 13ef076658484d9b9d5bbff72f6323ad
#: ../../../en/tutorial/example1-4.txt:86
msgid "**FONT**"
msgstr ""

# 5f8a1bec891c4487b095483bfe3f16e1
#: ../../../en/tutorial/example1-4.txt:85
msgid ""
"If you specify TYPE as TRUETYPE, you need to specify what font to use.  The "
"value here is the \"alias\" in the font list file."
msgstr ""

# 2b42acc10abd422287f738b211f6effd
#: ../../../en/tutorial/example1-4.txt:89
msgid ""
"If using truetype fonts, the value is size in pixels. If bitmap, you can say"
" something like \"small\" or \"large\"."
msgstr ""

# 2b0f49dbc5e4413582e8cbc40036a2f8
#: ../../../en/tutorial/example1-4.txt:94
msgid "**ANTIALIAS**"
msgstr ""

# 4cfc3c24362641619244eca55ad937e2
#: ../../../en/tutorial/example1-4.txt:93
msgid ""
"This turns truetype antialiasing on or off. Remember the value isn't on or "
"off but TRUE or FALSE."
msgstr ""

# 582f74775991464d98f0f4a86af2e249
#: ../../../en/tutorial/example1-4.txt:106
msgid "**POSITION**"
msgstr ""

# 6d5271274e3f457b8c1b3f8d7aca6183
#: ../../../en/tutorial/example1-4.txt:97
msgid ""
"Where to position the label text in relation to the label points. The value "
"is a combination of vertical and horizontal positions. You have the "
"following choices for vertical alignment: C for center, U for upper, and L "
"for lower. For horizontal alignment you have the following choices: C for "
"center, L for left, and R for right. So, to align the label text to the "
"center of label ID you'd use the value \"CC\" (center-center). Or if you'd "
"like it to be on the lower left of the ID, you'd use LL. Another way is to "
"let MapServer decide the best position for your labels. For this you would "
"use the value \"AUTO\"."
msgstr ""

# 068df9db485848a6b734f0981b730d84
#: ../../../en/tutorial/example1-4.txt:111
msgid "**PARTIALS**"
msgstr ""

# a375784a41db49efaa791d5cbc704312
#: ../../../en/tutorial/example1-4.txt:109
msgid ""
"Tells MapServer whether to generate incomplete label texts or not. The "
"default here is not to generate fragments of a label text. The value is "
"either TRUE or FALSE."
msgstr ""

# e87277d721584d26a9c7a73cec5b33b2
#: ../../../en/tutorial/example1-4.txt:115
msgid "**MINDISTANCE**"
msgstr ""

# 2d274e9c25044bfdaf23e1131a20db6c
#: ../../../en/tutorial/example1-4.txt:114
msgid ""
"This is the minimum distance in pixels between duplicate labels. See what "
"happens if you increase or decrease this value."
msgstr ""

# ac8e497488844607aa08113ee1d0db5f
#: ../../../en/tutorial/example1-4.txt:117
msgid "**BUFFER**"
msgstr ""

# f56d3a14ada947509cbb0cf9c0807a1d
#: ../../../en/tutorial/example1-4.txt:119
msgid ""
"The padding (in pixels) for each label. This is used to enhance readability."
" A BUFFER of 4 pixels mean that no label will be drawn within four pixels of"
" each other. Again, change to see how it works."
msgstr ""

# bb63d8be35a44242b731a9d9a6fcb4e0
#: ../../../en/tutorial/example1-4.txt:124
msgid ""
"You can also create labels separate from a POLYGON layer. You do this with "
"the ANNOTATION data type. Have a look at the next example's map file to see "
"how you'd implement this kind of labeling.  You will notice that the CLASS "
"object within the \"label\" layer has a COLOR parameter value of \"-1 -1 "
"-1\". The negative number tells MapServer to give this CLASS a transparent "
"color (the label IDs don't show up). Once again, play with the values to "
"understand how it affects the map."
msgstr ""

# 4a86905a2b0743649ef18255d288a31e
#: ../../../en/tutorial/example1-4.txt:134
msgid ""
":ref:`Back to Example 1.3 <example1-3>` | :ref:`Proceed to Example 1.5 "
"<example1-5>`"
msgstr ""

# d2d1655a12f44d15978c909233cc4d9f
#: ../../../en/tutorial/example1-4-map.txt:6
msgid "Example1-4.map"
msgstr ""

# 1025fbbf30f84ee486aa523e80772198
#: ../../../en/tutorial/example1-5.txt:7
msgid "Example 1.5"
msgstr ""

# f89ec9b55a72440e93851048c0534132
#: ../../../en/tutorial/example1-5.txt:10
msgid "Adding a Raster Layer"
msgstr ""

# 0c7814e07b1b492b835ee5801e1adef0
#: ../../../en/tutorial/example1-5.txt:14
msgid ""
"In addition to vector data support (point, lines, polygons, and "
"annotations), MapServer can also display raster data. Through the use of "
"GDAL library, MapServer can input and output multiple raster formats. "
"Whereas in versions prior to 4.x raster input is limited to single layer, "
"grayscale or indexed color images, recent MapServer versions support RGB and"
" multispectral (multi-layer) images. This example shows how to select what "
"layers to display when using multispectral data."
msgstr ""

# e7ea52a4e06347c28c31804ee718a491
#: ../../../en/tutorial/example1-5.txt:25
msgid ""
"There might be a noticeable performance hit when using RGB and multispectral"
" images."
msgstr ""

# 04c7f9e378334654a210b98fa8002a85
#: ../../../en/tutorial/example1-5.txt:28
msgid ""
"Because MapServer 5.x uses AGG or GD version 2.0.x to generate output "
"images, it supports RGB (24-bit or true color) output as well. So, along "
"with 8-bit (indexed color or grayscale) PNG8, you can now also use PNG (true"
" color) for output. This example uses PNG as IMAGETYPE."
msgstr ""

# 56cf88894566428489338a20c5f6b51f
#: ../../../en/tutorial/example1-5.txt:36
msgid ""
"As with RGB input, there might be a noticeable performance hit when using "
"PNG compared to PNG8."
msgstr ""

# 7cb122ade29f4cd1a7d75347fc61421b
#: ../../../en/tutorial/example1-5.txt:39
msgid ""
"MapServer can actually use GDAL to generate output images as well, but "
"that's another topic. If you want to know more about it, look at the "
":ref:`OUTPUTFORMAT <outputformat>` object in the mapfile reference."
msgstr ""

# 480ffa8f07a943d9b4dbea1febc29376
#: ../../../en/tutorial/example1-5.txt:46
msgid ""
"This is what the mapfile looks like: :ref:`Example1-5.map <example1-5-map>`"
msgstr ""

# f6b0d6b76b06499d8978a779883fc1d4
#: ../../../en/tutorial/example1-5.txt:59
msgid ""
"When you look at the mapfile, you'll see that the new LAYER object is added "
"below (after) the state POLYGON layer. Why? MapServer displays layers in "
"reverse order: last in, first out (LIFO). The first layer defined in the "
"mapfile is drawn at the bottom of the map."
msgstr ""

# a2c661db3b0c490c8208c6910f48fdb0
#: ../../../en/tutorial/example1-5.txt:64
msgid ""
"So, if we have drawn the state POLYGON layer, it would be on the bottom. "
"Since the raster layer gets drawn on top of it, we won't see it. That's why "
"the first layer gets the STATUS value of OFF. The state LINE layer is "
"defined below the raster layer so it gets drawn on top (and you can see it)."
" This is why we separated the state LINE layer from the state POLYGON layer."
" Of course the labels get drawn on top of everything."
msgstr ""

# 13379992de2a4c5cb304978e8da744d3
#: ../../../en/tutorial/example1-5.txt:71
msgid ""
"MapServer can automatically turn layers on or off based on the status of "
"other layers (say you want the states polygon layer turned off when the "
"raster layer is turned on). This is done by using the REQUIRES parameter. "
"Keep this in mind as you might want to use it once you start creating your "
"own MapServer applications."
msgstr ""

# 30cbf5a002cb4426a97dccc1ed1355fe
#: ../../../en/tutorial/example1-5.txt:78
msgid "Parameters"
msgstr ""

# 8280c224698547e59124cf78b1b9b5f6
#: ../../../en/tutorial/example1-5.txt:80
msgid "Let's have a look at the new parameters introduced in the mapfile:"
msgstr ""

# b00ae65453d847f7bfa9a22f5dddb621
#: ../../../en/tutorial/example1-5.txt:83
msgid ""
"PNG is the 24-bit or true-color version of the PNG format.  By the way, try "
"changing this value to PNG8.  Notice the time it takes to generate the image"
" using either formats. In choosing between true color and indexed color, "
"take into account the time it takes to generate the image."
msgstr ""

# ab3dea7489e14d99b4874107880d429e
#: ../../../en/tutorial/example1-5.txt:94
msgid "**SYMBOLSET**"
msgstr ""

# d7e17cc59b10451ca5a51175edff76b0
#: ../../../en/tutorial/example1-5.txt:90
msgid ""
"Points to the path of the symbol definition file. The symbols in this file "
"are referenced by the SYMBOL parameter in the :ref:`CLASS <class>` object.  "
"It's not really needed at this point but I thought I'd throw this here now."
"  Please refer to the :ref:`Cartographic Symbol Reference "
"<sym_construction>` for further information."
msgstr ""

# c68c7a468191429ebbd280a244d9a5e7
#: ../../../en/tutorial/example1-5.txt:103
msgid "**DATA raster/mod09a12003161_ugl_ll_8bit.tif**"
msgstr ""

# 1777007b5be7453c8ee4b7ad350bc522
#: ../../../en/tutorial/example1-5.txt:97
msgid ""
"In the newly added LAYER object, the DATA parameter points to a GeoTIFF "
"image.  Like vector datasets, MapServer supports multiple raster file "
"formats. This support is accomplished through use of the GDAL library. For "
"more information on the different raster formats supported by MapServer and "
"for general discussion on the use of rasters in MapServer, please read the "
":ref:`Raster Data Reference <raster>`."
msgstr ""

# 266bbf870c7a4a86be3510ecb9b9b01b
# 8d9a867ccf5743d08c8c38aef17f0d21
#: ../../../en/tutorial/example1-5.txt:108
#: ../../../en/tutorial/example1-7.txt:51
msgid "**TYPE RASTER**"
msgstr ""

# 4e9304e972fe444ebec02f710e1197b6
#: ../../../en/tutorial/example1-5.txt:106
msgid ""
"When using raster data (images) we use the value RASTER for the parameter "
"TYPE, as opposed to the POLYGON, LINE, and POINT values for vector data and "
"ANNOTATION for label IDs."
msgstr ""

# c69930e639254a58a8300fcc4cd38fc2
#: ../../../en/tutorial/example1-5.txt:115
msgid "**PROCESSING \"BANDS=1,2,3\"**"
msgstr ""

# 8e15de4db755400091a800b641765693
#: ../../../en/tutorial/example1-5.txt:111
msgid ""
"This LAYER object parameter was added in MapServer 4.x. The :ref:`PROCESSING"
" <layer>` keyword has many values but in this case we are using it to select"
" which bands in a multispectral image to display. The values here are "
"strings that will be passed to the GDAL library."
msgstr ""

# 03d4fd782c5a47eab5341fb85a3f83f1
#: ../../../en/tutorial/example1-5.txt:121
msgid "**OFFSITE**"
msgstr ""

# 49e3470c9b3a45a3a87fba769899c0f5
#: ../../../en/tutorial/example1-5.txt:118
msgid ""
"This parameter tells MapServer what pixel values to render as background (or"
" ignore). You can get the pixel values using image processing or image "
"manipulation programs (i.e. Imagine, Photoshop, Gimp)."
msgstr ""

# 99eda4dd441b42f0a03736cdabc3ef0b
#: ../../../en/tutorial/example1-5.txt:124
msgid "RGB vs Indexed Color Image"
msgstr ""

# a29aeed9d504483d8754a5593e323d85
#: ../../../en/tutorial/example1-5.txt:126
msgid ""
"To compare map creation speed when using RGB image as opposed to indexed "
"color image, replace the following lines in the mapfile:"
msgstr ""

# 20e7bbaf80784f05b716b905563377d2
#: ../../../en/tutorial/example1-5.txt:137
msgid "with these:"
msgstr ""

# 2979d82bb7274621ad6c72ef0f1a521f
#: ../../../en/tutorial/example1-5.txt:147
msgid "Also, try changing the IMAGETYPE from PNG to PNG8."
msgstr ""

# ab5e94d63fcb40e6983eedac54e46b15
#: ../../../en/tutorial/example1-5.txt:151
msgid ""
":ref:`Back to Example 1.4 <example1-4>` | :ref:`Proceed to Example 1.6 "
"<example1-6>`"
msgstr ""

# bee6a2a11afc43d48d2fcf5eb8a05bad
#: ../../../en/tutorial/example1-5-map.txt:6
msgid "Example1-5.map"
msgstr ""

# 077171f415c949e68de751db6b9897ae
#: ../../../en/tutorial/example1-6.txt:7
msgid "Example 1.6"
msgstr ""

# d17c4e0c427e40e69a7d2ed3dedc2517
#: ../../../en/tutorial/example1-6.txt:10
msgid "Defining Projections and Extents"
msgstr ""

# bfd35cd73769437e901761f4e624b869
#: ../../../en/tutorial/example1-6.txt:14
msgid "Whoa! What happened here?"
msgstr ""

# 5ddb92874e8140bd861e254f5beae3f7
#: ../../../en/tutorial/example1-6.txt:16
msgid ""
"You've just experienced on-the-fly reprojection. When a PROJECTION object is"
" defined in the mapfile, MapServer passes the layer and projection info to "
"the Proj.4 library which does the reprojection.  For more information about "
"the Proj.4 library, please visit `<http://proj.maptools.org/>`_."
msgstr ""

# e8743202ed6747f2b5b9e9aff33544f6
#: ../../../en/tutorial/example1-6.txt:21
msgid ""
"This example attempts to shed some light on the projection support in "
"MapServer."
msgstr ""

# 63707befd9f34a9890c15172ec85acc9
#: ../../../en/tutorial/example1-6.txt:23
msgid ""
"This is what the mapfile looks like: :ref:`Example1-6.map <example1-6-map>`"
msgstr ""

# a5487ffb334f47ef98bbfa1202924d11
#: ../../../en/tutorial/example1-6.txt:25
msgid ""
"The first thing you might have noticed with our mapfile is the original "
"EXTENT has been commented out and the new EXTENT values don't look anything "
"like latitude and longitude values. Also, we have added a PROJECTION object "
"near the top and within each of our layers."
msgstr ""

# 47ded5a745984626876adfba6d8ed042
#: ../../../en/tutorial/example1-6.txt:30
msgid "Let's have a look at the new object and parameter::"
msgstr ""

# 6d65afac607f4db5b55225423829ff68
#: ../../../en/tutorial/example1-6.txt:34
msgid ""
"The extent we provide to MapServer needs to be in the same units as the "
"output projection.  Since Lambert Azimuthal Equal-Area's units are in "
"meters, we have to give the new extent in meters.  We can calculate the new "
"extent using ArcView or some other GIS package, or you can use Proj.4's "
"cs2cs utility.  The command below is what can be used to reproject the "
"original extent values::"
msgstr ""

# fb737b80a6394593abc46494879b15c3
#: ../../../en/tutorial/example1-6.txt:42
msgid ""
"After typing the command, enter the southwestern coordinate pair (the lower "
"left coordinates), separated by a space::"
msgstr ""

# b80a19e97a8743b18fe24d1c2602b97f
#: ../../../en/tutorial/example1-6.txt:47
msgid "to which the \"cs2cs\" utility gives the values::"
msgstr ""

# fb052f8c1d744e9db0a0b9d55e972337
#: ../../../en/tutorial/example1-6.txt:51
msgid ""
"I then type the northeastern coordinate pair (upper right corner "
"coordinates), again separated by space::"
msgstr ""

# 8b590d2d485a4f1f8d725f133b90dc3a
#: ../../../en/tutorial/example1-6.txt:56
msgid "and the following values are returned::"
msgstr ""

# 68c6bd387ae247dbbe8ad1912dfeb0b3
#: ../../../en/tutorial/example1-6.txt:60
msgid ""
"You will notice that \"cs2cs\" returns a set of three values.  You can "
"ignore the third value, 0.000, as it means to represent altitute (which "
"we're not using). Anyway, we can now present the EXTENT as::"
msgstr ""

# b40741e947294a40bf84f99eac8702f5
#: ../../../en/tutorial/example1-6.txt:66
msgid ""
"But it doesn't match up the extent above, you say.  Well, that's what "
"usually happens when you reproject -- the map doesn't necessarily get "
"centered as you'd expect.  You can fudge around it, taking a few thousand "
"meters off to the left and adding a few to the right.  Or, you can use a "
"graphical GIS package to give you the extent. `Here are the instructions "
"<http://biometry.gis.umn.edu/tutorial/arcview_extent.html>`_ for getting "
"`EXTENT` using ArcView."
msgstr ""

# 15277be5f06d4198afc1ebf18b862e09
#: ../../../en/tutorial/example1-6.txt:74
msgid ""
"MapServer can take projection definitions in two ways. The first is shown in"
" the mapfile's output PROJECTION object (the first PROJECTION block). This "
"is the traditional way of passing parameters to the Proj.4 library. The "
"other way is to use the EPSG codes. These codes are standard projection "
"codes (or spatial reference identifiers) as defined by the European "
"Petroleum Survey Group (EPSG). In the case of our Lambert Azimuthal Equal-"
"Area projection, it has a code of \"2163\". If you comment out the four "
"lines after PROJECTION and uncomment the line \"init=epsg:2163\", this will "
"provide the same information to Proj.4. If you want to learn more about EPSG"
" codes, have a look at \"/usr/local/share/proj/epsg\" or "
"\"C:/proj/nad/epsg\" (\"/ms4w/proj/nad\" in MS4W)."
msgstr ""

# 1ff6ab0566834351869d4c263dc72faa
#: ../../../en/tutorial/example1-6.txt:85
msgid "Also, check out the EPSG web site at `<http://www.epsg.org>`_."
msgstr ""

# fc9fd65292c749ed82b2fd32129f8ccd
#: ../../../en/tutorial/example1-6.txt:87
msgid ""
"If you need to learn more about projections, please look through some of the"
" links below:"
msgstr ""

# e569009fcc154f71ad131255184c4eca
#: ../../../en/tutorial/example1-6.txt:89
msgid ""
"`<http://www.colorado.edu/geography/gcraft/notes/mapproj/mapproj_f.html>`_"
msgstr ""

# df209b7f799743b183b672da97420639
#: ../../../en/tutorial/example1-6.txt:91
msgid "`<http://www.geography.hunter.cuny.edu/mp/>`_"
msgstr ""

# 7afa55630dfe4c4c9ebbeddf1f712daa
#: ../../../en/tutorial/example1-6.txt:93
msgid "`<http://www.nationalatlas.gov/articles/mapping/a_projections.html>`_"
msgstr ""

# 7aa05bd0de754f7ca80e09c4c15821d5
#: ../../../en/tutorial/example1-6.txt:95
msgid "`<http://en.wikipedia.org/wiki/Map_projection>`_"
msgstr ""

# be7f2c7830d446998a7528027dfd7211
#: ../../../en/tutorial/example1-6.txt:97
msgid "`<http://erg.usgs.gov/isb/pubs/MapProjections/projections.html>`_"
msgstr ""

# ce073a9ebe37464c9663f57cccb17504
#: ../../../en/tutorial/example1-6.txt:99
msgid "`<http://spatialreference.org/>`_"
msgstr ""

# 0f1fda16434a4b8fbcdcf7d31008404a
#: ../../../en/tutorial/example1-6.txt:101
msgid "You can find more by searching the web for \"map projection\"."
msgstr ""

# ceb7b10623964614afa88b2555bf6b39
#: ../../../en/tutorial/example1-6.txt:105
msgid ""
":ref:`Back to Example 1.5 <example1-5>` | :ref:`Proceed to Example 1.7 "
"<example1-7>`"
msgstr ""

# a103baee3f1843cc8ead656cc8904f2e
#: ../../../en/tutorial/example1-6-map.txt:6
msgid "Example1-6.map"
msgstr ""

# a67bf9195b4043c4931f4cd4f577e1d1
#: ../../../en/tutorial/example1-7.txt:7
msgid "Example 1.7"
msgstr ""

# fad2a06a1557434091276650d9ed2512
#: ../../../en/tutorial/example1-7.txt:10
msgid "Adding OGC WMS Layers"
msgstr ""

# c4708b3f37504d70adb54c09712c1c39
#: ../../../en/tutorial/example1-7.txt:14
msgid ""
"Another exciting feature of MapServer is its ability to use layers from "
"other map servers. In this case, a MapServer application becomes a WMS (or "
"WFS) client. MapServer can also share (or serve up) the layers in the "
"mapfile to other map servers. This makes an application a WMS (or WFS) "
"server. What is WMS or WFS? These are \"web-based interoperability service\""
" specifications published by the Open Geospatial Consortium (OGC). WMS "
"stands for Web Map Service and WFS for Web Feature Service. The difference "
"between these two specifications, in simple terms, is that WMS uses web "
"raster formats (PNG, GIF, JPEG) to share layers while WFS uses GML, the "
"Geography Markup Language. A third OGC interoperability specification is the"
" Web Coverage Services specification or WCS.  MapServer supports WCS at the "
"server level only. To find more information about WMS, WFS, and WCS go the "
"the `OGC's web site <http://www.opengeospatial.org>`_ and look for the `OGC "
"Implementation Specifications "
"<http://www.opengeospatial.org/specs/?page=specs>`_ or `OGC Abstract "
"Specifications <http://www.opengeospatial.org/specs/?page=abstract>`_. The "
"MapServer web site also has :ref:`documentation <documentation>` and `WIKI "
"pages <https://github.com/mapserver/mapserver/wiki>`_ for these "
"specifications."
msgstr ""

# 4165d4b28f64485bb6b38441e32c9386
#: ../../../en/tutorial/example1-7.txt:32
msgid "This example shows you how to add a WMS layer in your mapfile."
msgstr ""

# ab65eb8e4e404c56953e0100c908a610
# efc9af944a754ecd9be581cc0ce320a2
#: ../../../en/tutorial/example1-7.txt:35
#: ../../../en/tutorial/example1-8.txt:19
msgid "The MapFile"
msgstr ""

# 8b1e4ed31f6e424b99d4a2f0ba711d74
#: ../../../en/tutorial/example1-7.txt:37
msgid ""
"This is what the mapfile looks like: :ref:`Example1-7.map <example1-7-map>`"
msgstr ""

# 37be6cf903ec467294b5021739c0b99a
#: ../../../en/tutorial/example1-7.txt:40
msgid "LAYER Object and WMS Parameters"
msgstr ""

# af7a77f4442d46c9aab2a20dbd4df539
#: ../../../en/tutorial/example1-7.txt:42
msgid "Let's have a look at the WMS layer:"
msgstr ""

# abaee960af89402b85fc29851b128f62
#: ../../../en/tutorial/example1-7.txt:45
msgid "**LAYER # MODIS WMS map from JPL**"
msgstr ""

# f77eda6ab81742dba3b46dee3b86c5ac
#: ../../../en/tutorial/example1-7.txt:45
msgid "Marks the start of the WMS LAYER object."
msgstr ""

# 9be39296caa14a8885d0a89e6ea708c6
#: ../../../en/tutorial/example1-7.txt:48
msgid "**NAME modis_jpl**"
msgstr ""

# b16d3dc28550407b8f44edee40884946
#: ../../../en/tutorial/example1-7.txt:48
msgid "The LAYER identifier."
msgstr ""

# 16d00c7b10984b6bb797ba36e0065fb0
#: ../../../en/tutorial/example1-7.txt:51
msgid "Since this the WMS layer is an image, we use RASTER as LAYER TYPE."
msgstr ""

# 3ee49431b3de4a24a3b75ccd6e47ac0d
#: ../../../en/tutorial/example1-7.txt:54
msgid "**OFFSITE 0 0 0**"
msgstr ""

# 0fd19599b1584c4899abdcd8aff36245
#: ../../../en/tutorial/example1-7.txt:54
msgid "Ignore the black background color"
msgstr ""

# c8d7683832a64939805902edb7158aff
#: ../../../en/tutorial/example1-7.txt:57
msgid "**STATUS OFF**"
msgstr ""

# a6e6527e193c4ebe873265783e814670
#: ../../../en/tutorial/example1-7.txt:57
msgid "Turn this layer off by default."
msgstr ""

# 97da8ee49d9743df9b5e6e0de01edb8f
#: ../../../en/tutorial/example1-7.txt:67
msgid "**CONNECTIONTYPE WMS**"
msgstr ""

# 9ab9aef380b04d6591b9a8fd071683cc
#: ../../../en/tutorial/example1-7.txt:60
msgid "The type of LAYER connection to use. The default is LOCAL."
msgstr ""

# f9f814f60d1c4103bcec7811c3241201
#: ../../../en/tutorial/example1-7.txt:64
msgid ""
"If we have to be explicit, we would add CONNECTIONTYPE LOCAL to all othe "
"vector and raster layers in our mapfile. Instead we only define connection "
"types that are external. WMS is an external data layer, coming from another "
"map server."
msgstr ""

# 4077834769634a05855a63798cb0a76d
#: ../../../en/tutorial/example1-7.txt:73
msgid "**CONNECTION \"http://mapus.jpl.nasa.gov/wms.cgi?\"**"
msgstr ""

# f161cd3041c14b3c95350252af7a693f
#: ../../../en/tutorial/example1-7.txt:70
msgid ""
"The connection string that allows us to *get* the data from another server. "
"In the case of WMS connections, this is a URL.  If we were using a PostGIS "
"database, it would be an SQL statement.  Please note that the string has to "
"be in a single line in your mapfile."
msgstr ""

# e3d0cc0ae38548dbb8eb40811876fd80
#: ../../../en/tutorial/example1-7.txt:79
msgid "**METADATA**"
msgstr ""

# fd38d09d0a4447d1a1c8a85e3b1c433d
#: ../../../en/tutorial/example1-7.txt:76
msgid ""
"marks the beginning of the METADATA object for our WMS layer. MapServer uses"
" the parameters defined within this object along with the CONNECTION "
"parameter above to form a valid WMS request to the WMS server."
msgstr ""

# a13c50a4a77c441b97fe20494341e67c
#: ../../../en/tutorial/example1-7.txt:85
msgid "**\"wms_srs\" \"epsg:4326\"**"
msgstr ""

# 50e3ec8edbd944d8b520efc9458d93c2
#: ../../../en/tutorial/example1-7.txt:82
msgid ""
"The WMS projection.  Sometimes the WMS server supports more than one "
"projection.  If this is the case you might want to request the map in your "
"output projection (epsg:2163).  Unfortunately, the JPL server doesn't "
"support this projection."
msgstr ""

# 5e2b504a874d4f66b6083447493ed910
#: ../../../en/tutorial/example1-7.txt:88
msgid "**\"wms_name\" \"modis\"**"
msgstr ""

# 8fc7d55c81e94662bce7f330da3776f0
#: ../../../en/tutorial/example1-7.txt:88
msgid "The WMS layer name. This is like adding the parameter \"layers=modis\"."
msgstr ""

# c03a855fcbae4358b1d350aca99c7b73
#: ../../../en/tutorial/example1-7.txt:92
msgid "**\"wms_server_version\" \"1.1.1\"**"
msgstr ""

# 4f459dad5a404d21a5b8e10f0d914009
#: ../../../en/tutorial/example1-7.txt:91
msgid ""
"The WMS version the server complies to.  For more options, see "
":ref:`ogc_support`."
msgstr ""

# 4d42a59c75d343e3a79763d1f3d8643e
#: ../../../en/tutorial/example1-7.txt:96
msgid "**\"wms_format\" \"image/jpeg\"**"
msgstr ""

# 8565def0b7214597bf8465cf444ec11a
#: ../../../en/tutorial/example1-7.txt:95
msgid ""
"The image format we expect to be receiving from the WMS server. You can try "
"replacing the value with *image/png* or something else."
msgstr ""

# 47844b7649664d76a10e09b4c252e83a
#: ../../../en/tutorial/example1-7.txt:99
msgid "**END**"
msgstr ""

# 62bed5b76d574968a0098a055c415687
#: ../../../en/tutorial/example1-7.txt:99
msgid "marks the end of the METADATA object"
msgstr ""

# 56efa6ff5560404d8db7a8aaba9a3e7c
#: ../../../en/tutorial/example1-7.txt:101
msgid ""
"To know more about adding WMS layers to your applications, please visit the "
":ref:`MapServer WMS Client Howto <wms_client>`."
msgstr ""

# b98b50f3c611452184caadf42738a9af
#: ../../../en/tutorial/example1-7.txt:105
msgid "WEB Object Parameters"
msgstr ""

# feed77612b1b437ba3ce27bec4ded841
#: ../../../en/tutorial/example1-7.txt:107
msgid ""
"In addition to adding the WMS layer object, there's also a new object under "
"MAP. This is the WEB object. Within the WEB object are two parameters:"
msgstr ""

# 510d9777143b4d29b4f427676f44db09
#: ../../../en/tutorial/example1-7.txt:114
msgid "**IMAGEPATH '/data/tmp/'**"
msgstr ""

# 3b2da2c61918409daf95897fac2d735f
#: ../../../en/tutorial/example1-7.txt:110
msgid ""
"The absolute local path to a web accessible temporary directory. The user "
"running the web server processes should be able to write to this directory. "
"Make sure that the path includes a slash (/) at the end. (Your IMAGEPATH "
"might look something like this: \"/home/apache/htdocs/tmp/\" or "
"\"C:/Inetpub/wwwroot/tmp/\".)"
msgstr ""

# b32e3920cffc41aeb8f4023892dd8bb8
#: ../../../en/tutorial/example1-7.txt:120
msgid "**IMAGEURL '/tmp/'**"
msgstr ""

# 674d29e77c534abca60b8999139333fb
#: ../../../en/tutorial/example1-7.txt:117
msgid ""
"This is how IMAGEPATH will appear relative to the web server's root "
"directory. If we have to type the full URL for this, it will be "
"\"http://terrasip.gis.umn.edu/tmp/\". Make sure that the path includes a "
"slash (/) at the end."
msgstr ""

# bc2ca700f5b74efeb0972b7d04187f16
#: ../../../en/tutorial/example1-7.txt:124
msgid ""
"Finally, within the MAP object, I added a new parameter: NAME. This is the "
"identifier for the MAP object. MapServer uses this as prefix to all images "
"it creates and dumps to the *tmp* directory.  It's not needed at this point "
"but it also doesn't hurt to have it."
msgstr ""

# 029abe97a34a45879072f85df84807d9
#: ../../../en/tutorial/example1-7.txt:129
msgid ""
"If you would like to share your data layers to other map servers, you will "
"need to add METADATA objects within your MAP object and within each of the "
"LAYER objects you would like to share. All the WMS layers that you added "
"from another server will automatically be cascaded and will also become "
"available to others. To know more about how to make your MapServer "
"application become a WMS server, please read the :ref:`MapServer WMS Server "
"HowTo <wms_server>`.  Documentation also exists for configuring MapServer "
"applications to support the WFS standard, both as a :ref:`server "
"<wfs_server>` and as a :ref:`client <wfs_client>`."
msgstr ""

# 4ddff859ae0f422da2c0a337ea419a1b
#: ../../../en/tutorial/example1-7.txt:142
msgid ""
":ref:`Back to Example 1.6 <example1-6>` | :ref:`Proceed to Example 1.8 "
"<example1-8>`"
msgstr ""

# 5cdf15ff9d6e4ee9a0a9ba419539bab1
#: ../../../en/tutorial/example1-7-map.txt:6
msgid "Example1-7.map"
msgstr ""

# a6c85470a37b4495b759691d3ede42f4
#: ../../../en/tutorial/example1-8.txt:7
msgid "Example 1.8"
msgstr ""

# 199dde2d9c1b4d2982777b2d25c60fd6
#: ../../../en/tutorial/example1-8.txt:10
msgid "Changing the Map's Output Format"
msgstr ""

# 563e8956e83947c49990a889ecfafa63
#: ../../../en/tutorial/example1-8.txt:14
msgid ""
"Depending on the format you choose, the image may not display on your "
"browser. If the link fails to display on your browser, right click on the "
"graphic above and save the link as whatever format you specified on your "
"mapfile."
msgstr ""

# 4f2d8e7d031a45538515ce7cf2596177
#: ../../../en/tutorial/example1-8.txt:21
msgid "Here's the mapfile: :ref:`Example1-8.map <example1-8-map>`"
msgstr ""

# 871e7ffd31a04da093415862d47fb76c
#: ../../../en/tutorial/example1-8.txt:24
msgid "OUTPUTFORMAT Object"
msgstr ""

# 5a52f1923b204c078c1c0299ad4eb416
#: ../../../en/tutorial/example1-8.txt:26
msgid ""
"Our mapfile now contains a new object, OUTPUTFORMAT. This object is defined "
"within the MAP object and is used in conjunction with the IMAGETYPE keyword."
"  Depending on the libraries you compiled with MapServer, you can have "
"several output format choices.  The AGG library provides PNG, PNG8 and JPEG;"
" The GD library provides GIF; the GDAL library, a source for many of "
"MapServer's input formats, can also provide output to PNG, JPEG, "
"TIFF/GeoTIFF, and other raster formats; the Cairo library provides PDF, PNG "
"and SVG output.  Have a look at the OUTPUTFORMAT object and experiment by "
"changing the IMAGETYPE keyword on you mapfile. The NAME of your OUTPUT "
"format should be used as your IMAGETYPE value ex: IMAGETYPE png or IMAGETYPE"
" png24)."
msgstr ""

# 732dc5dc4d114c5ba566b094ebbc93a6
#: ../../../en/tutorial/example1-8.txt:38
msgid ""
"Please consult the :ref:`OUTPUTFORMAT object reference <outputformat>`."
msgstr ""

# 8f92d3381d7a4128b544b0fda1ea79f9
#: ../../../en/tutorial/example1-8.txt:42
msgid ""
":ref:`Back to Example 1.7 <example1-7>` | `Proceed to Example 1.9 "
"<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example1-9.map&layer=states&layer=modis>`_"
msgstr ""

# 90a86133c7b64dc5bb06271fb4160d93
#: ../../../en/tutorial/example1-8-map.txt:6
msgid "Example1-8.map"
msgstr ""

# e6887c1776a74836a25a31425021e79e
#: ../../../en/tutorial/index.txt:8
msgid "MapServer Tutorial"
msgstr ""

# 5ad89433b8614c0a9400f2c9d4f225f0
#: ../../../en/tutorial/index.txt:10
msgid "Pericles S. Nacionales"
msgstr ""

# c69104e3c46b49eb8b0f818a2b232269
#: ../../../en/tutorial/index.txt:11
msgid "pnaciona at gmail.com"
msgstr ""

# b2bcd2f0b8d949c7a26f53a43152154d
#: ../../../en/tutorial/index.txt:12
msgid "Jeff McKenna"
msgstr ""

# 005fba5f98d54acdb2e9be5914dfca47
#: ../../../en/tutorial/index.txt:13
msgid "jmckenna at gatewaygeomatics.com"
msgstr ""

# 6d34342741b94fd1a1aa081db1b60a5d
#: ../../../en/tutorial/index.txt:14
msgid "2010-04-07"
msgstr ""

# 04230000f72f449cb22a628ca63fdbe9
#: ../../../en/tutorial/index.txt:16
msgid ""
"This tutorial was designed to give new users a quick (relatively speaking) "
"introduction to the concepts behind MapServer. It is arranged into four "
"sections with each section having one or more examples and increasing in "
"complexity.  Users can jump to any section at any time although it is "
"recommended that absolute beginners work on the first three sections "
"sequentially."
msgstr ""

# 7a435c8ec2c947debcddfa0682eb5a2b
#: ../../../en/tutorial/index.txt:23
msgid ""
"Section one focuses on basic MapServer configuration concepts such as layer "
"and class ordering, using vector and raster data, projections and labeling."
"  Section two provides examples on how to use HTML templates to create a "
"simple interface for an interactive web mapping application. Section three "
"introduces the use of HTML templates to provide a \"query\" interface. "
"Finally, section four introduces some advanced user interface concepts."
msgstr ""

# bda568139b254f328960c50dd5e9304f
#: ../../../en/tutorial/index.txt:42
msgid ":ref:`Begin tutorial <tutorial_background>`"
msgstr ""

# 7299c3a242054abfbcbb063ae8fb5d0f
#: ../../../en/tutorial/index.txt:1
msgid "Tutorial"
msgstr ""

# e793ccf57ec4408abe359c10f0bb9bd9
#: ../../../en/tutorial/section1.txt:4
msgid "Section 1: Static Maps and the MapFile"
msgstr ""

# 6d69f71becec4604aeae478de31312a1
#: ../../../en/tutorial/section1.txt:6
msgid ""
"Take a Shapefile dataset. Any Shapefile dataset.  We can use MapServer to "
"display that Shapefile dataset in a web browser. Look..."
msgstr ""

# 91ab66f4de1145f8969004978f084a45
#: ../../../en/tutorial/section1.txt:10
msgid ":ref:`Example 1.1 - A map with a single layer <example1-1>`"
msgstr ""

# ada66685249b4a0eb16bb1476e80e7d3
#: ../../../en/tutorial/section1.txt:12
msgid ""
"We can display the same Shapefile dataset repeatedly. We can display the "
"polygon attributes in one LAYER and the line attributes in another..."
msgstr ""

# d1ccc6e25afe438c85c8a78f78fd8006
#: ../../../en/tutorial/section1.txt:16
msgid ":ref:`Example 1.2 - A map with two layers <example1-2>`"
msgstr ""

# f8161e4202024c4dabe939c3aa9880f6
#: ../../../en/tutorial/section1.txt:18
msgid ""
"And we can select which parts of the Shapefile dataset to display. We do "
"this using the CLASS object..."
msgstr ""

# d465cd134d4745a38655f3b1db5ee029
#: ../../../en/tutorial/section1.txt:21
msgid ":ref:`Example 1.3 - Using classes to make a \"useful\" map <example1-3>`"
msgstr ""

# 4c6e0c4c13f34f398145d54ee63cbd78
#: ../../../en/tutorial/section1.txt:23
msgid "We can also label our maps..."
msgstr ""

# f932a972d2864866991e78586bb42d2a
#: ../../../en/tutorial/section1.txt:25
msgid ":ref:`Example 1.4 - Labeling layers and label layers <example1-4>`"
msgstr ""

# f91026bd68dc4846ac1b626fd290ca79
#: ../../../en/tutorial/section1.txt:27
msgid ""
"Or add raster data such as satellite images, aerial photographs, or shaded "
"reliefs..."
msgstr ""

# bb5bbf609d204fd6b9640cf69d38ad2d
#: ../../../en/tutorial/section1.txt:30
msgid ":ref:`Example 1.5 - Adding a raster layer <example1-5>`"
msgstr ""

# e24b8a7d07fd49b09cc2e7cda8f0e561
#: ../../../en/tutorial/section1.txt:32
msgid ""
"We can reproject our data from just about any projection to just about "
"any... Yeah, check it out!"
msgstr ""

# 543dd3b30d164de49df157e35ad20a11
#: ../../../en/tutorial/section1.txt:35
msgid ":ref:`Example 1.6 - Projection/Reprojection <example1-6>`"
msgstr ""

# 409b02324bde41539f9977ec58bf897d
#: ../../../en/tutorial/section1.txt:37
msgid ""
"And we can use layers from other map servers on the Internet (for example "
"WMS servers)..."
msgstr ""

# 749c5f07fbae49faa9d9fd8ca931f4dc
#: ../../../en/tutorial/section1.txt:40
msgid ":ref:`Example 1.7 - Adding a WMS layer <example1-7>`"
msgstr ""

# f7eb917db9a646b39d197b9cf1e9a943
#: ../../../en/tutorial/section1.txt:42
msgid "MapServer can output to various formats such as PDF and GeoTIFF."
msgstr ""

# 22d5c1785ddc415bb4c68768f1f4f0d3
#: ../../../en/tutorial/section1.txt:44
msgid ":ref:`Example 1.8 - A different output format <example1-8>`"
msgstr ""

# c922270a47d04590be3f54f9dc6296db
#: ../../../en/tutorial/section1.txt:46
msgid ""
"MapServer not only generates static maps, it can also create interactive "
"maps..."
msgstr ""

# a75dee388262477fbc77d627cace8c4b
#: ../../../en/tutorial/section1.txt:49
msgid ""
"`Example 1.9 - The difference between map mode and browse mode "
"<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example1-9.map&layer=states&layer=modis>`_"
msgstr ""

# 2cd19bcb81c942f0a1eb43d5ef4dcc68
#: ../../../en/tutorial/section1.txt:53
msgid ""
":ref:`Back to Tutorial home <tutorial>` | :ref:`Proceed to Section 2 "
"<tutorial_section2>`"
msgstr ""

# 27d3875c40f2458fbf0cb67128373dda
#: ../../../en/tutorial/section2.txt:4
msgid "Section 2: CGI variables and the User Interface"
msgstr ""

# ad1e0a262cec4bb3931541409f8415e7
#: ../../../en/tutorial/section2.txt:6
msgid ""
"So far we have only looked at the mapfile when creating maps. In creating "
"web mapping applications, it is usually our intention to make maps that can "
"be changed by the user (of the application) interactively. That is, a user "
"should be able to change the content of (or the information in) the map. To "
"accomplish this interactivity, we use the MapServer HTML templates."
msgstr ""

# b2cf8752c14a4ee2901b6da1de0c5a81
#: ../../../en/tutorial/section2.txt:14
msgid "HTML Templates"
msgstr ""

# 5a526de367264a149cd37c82969dd253
#: ../../../en/tutorial/section2.txt:16
msgid ""
"A MapServer HTML template is essentially an HTML file with a few MapServer "
"specific tags.  These tags are the MapServer CGI variables and are enclosed "
"in square brackets \"[]\".  When the MapServer CGI program processes an "
"application, it first parses the query string and the mapfile, and produces "
"the necessary output. Some of this output will need to be written to the "
"HTML template file which you would have to also specify in the mapfile using"
" the web template keyword (or in a separate HTML initialization file). The "
"CGI program will replace all the variables in the HTML template with the "
"proper value before sending it back to the web browser. If you are to "
"directly view an HTML template in a web browser, there won't be any maps "
"rendered and you will instead get blank images and other junk."
msgstr ""

# a8b7f0f3eaf949049c4b47b84d0e6f04
#: ../../../en/tutorial/section2.txt:30
msgid "Variables"
msgstr ""

# 1314098b79bc4570b195fb6ab43febd7
#: ../../../en/tutorial/section2.txt:32
msgid ""
"MapServer provides several variables for web mapping: the \"img\" variable "
"which you've seen in Example 1.9 is but one example. There area few core CGI"
" variables originally designed as part of the mapping interface but "
"practically all the mapfile parameters can be defined as variables. The "
"definitive reference to the MapServer  CGI variables can be found :ref:`here"
" <cgi>`."
msgstr ""

# 89dddb6695514f94a97bc753b83d3908
#: ../../../en/tutorial/section2.txt:39
msgid ""
"We can also define our own variables, which MapServer will pass along to our"
" application.  For example, we can create a variable called \"root\" to "
"represent the root directory of this tutorial, the value for \"root\" will "
"then be \"/tutorial\". When the MapServer CGI program processes our HTML "
"template, it will replace every instance of he \"[root]\" tag with "
"\"/tutorial\". You will see this in action for each of the following "
"examples."
msgstr ""

# e98a8d325c864c1b8ba896cfc0962621
#: ../../../en/tutorial/section2.txt:48
msgid "Examples"
msgstr ""

# e60427a4267c4b6782ed29d6bbcc4073
#: ../../../en/tutorial/section2.txt:50
msgid "So, let's build an interactive interface for our application..."
msgstr ""

# 5ff666564a7347e0a8546007b06fa95b
#: ../../../en/tutorial/section2.txt:52
msgid ""
"Users of a web mapping application should be able to pan and zoom on the "
"map: `Example 2.1 - Pan and Zoom Controls <http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-1.html>`_"
msgstr ""

# 06e8b0ea61744b9c9dcc36900ba853b6
#: ../../../en/tutorial/section2.txt:55
msgid ""
"They also should be able to turn on and off layers on a map: `Example 2.2 - "
"Layer Control <http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-2.html>`_"
msgstr ""

# 6ee58a2ac54c40f0840b5026704cbd5c
#: ../../../en/tutorial/section2.txt:58
msgid ""
"A map should always include a scalebar. `Example 2.3 - Adding a Scalebar "
"<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-3.html>`_"
msgstr ""

# 7e3090ebdcf94d5299bda4ed6652276a
#: ../../../en/tutorial/section2.txt:61
msgid ""
"If users are to navigate through the map, a reference map should be "
"provided: `Example 2.4 - Adding a Reference Map <http://demo.mapserver.org"
"/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-4.html>`_"
msgstr ""

# b5d1a0c887dd418daef16ee3baa67c4c
#: ../../../en/tutorial/section2.txt:64
msgid ""
"The map should include a legend. `Example 2.5- Adding a Legend "
"<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-5.html>`_"
msgstr ""

# 6d1204df713247a6a14e220b64aed856
#: ../../../en/tutorial/section2.txt:69
msgid ""
":ref:`Back to Section 1 index <tutorial_section1>` | :ref:`Proceed to "
"Section 3 <tutorial_section3>`"
msgstr ""

# 0cac7aa074d74e46bd1db85472cb3b88
#: ../../../en/tutorial/section3.txt:4
msgid "Section 3: Query and more about HTML Templates"
msgstr ""

# 8174ffc172d342c1b83dd36b60b9c4e9
#: ../../../en/tutorial/section3.txt:6
msgid ""
"To learn more about query and HTML templates with MapServer, see examples "
"3.1 to 3.4 in the `Tutorial Viewer "
"<http://demo.mapserver.org/tutorial/section3.html>`_."
msgstr ""

# d23611babe7e4364af5fa01ba1f77c8d
#: ../../../en/tutorial/section3.txt:13
msgid ""
":ref:`Back to Section 2 index <tutorial_section2>` | :ref:`Proceed to "
"Section 4 <tutorial_section4>`"
msgstr ""

# 4398df17206f4954b3042d11b68e09d0
#: ../../../en/tutorial/section4.txt:4
msgid "Section 4: Advanced User Interfaces"
msgstr ""

# ddcd805df7af4cf1904b59208f28e1ec
#: ../../../en/tutorial/section4.txt:6
msgid ""
"To learn more about advanced navigation such as pan and rubber-band zoom "
"with Javascript and MapServer CGI, see examples 4.1 to 4.4 in the `Tutorial "
"Viewer <http://demo.mapserver.org/tutorial/section4.html>`_."
msgstr ""

# 463e51d388854485816befbcc7928327
#: ../../../en/tutorial/section4.txt:13
msgid ""
":ref:`Back to Section 3 index <tutorial_section3>` | :ref:`Tutorial home "
"<tutorial>`"
msgstr ""
