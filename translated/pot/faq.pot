# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MapServer 6.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-06 19:08+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../en/faq.txt:5
# 5f26436807474d4980499e3a596be193
msgid "FAQ"
msgstr ""

#: ../../../en/faq.txt:8
# db95bd724e4542d0a6caa5ee43be3b38
msgid "Where is the MapServer log file?"
msgstr ""

#: ../../../en/faq.txt:10
# c456c649e4e645b999ffde20516c9a70
msgid "See :ref:`rfc28`"
msgstr ""

#: ../../../en/faq.txt:13
# b19fc88be73d41a2b602166cd55a78c3
msgid "What books are available about MapServer?"
msgstr ""

#: ../../../en/faq.txt:15
# a5c0832b0aaf4130b2ae1063b50d82c2
msgid "`\"Mapping Hacks\" <http://www.oreilly.com/catalog/mappinghks/>`__ by Schuyler Erle, Rich Gibson, and Jo Walsh is available from O'Reilly."
msgstr ""

#: ../../../en/faq.txt:18
# c97033a463a84052b7c90d8fcc2b7803
msgid "`\"Web Mapping Illustrated\" <http://oreilly.com/catalog/webmapping>`__ by Tyler Mitchell is available from O'Reilly. Introduces MapServer and many other related technologies including, GDAL/OGR, MapScript, PostGIS, map projections, etc."
msgstr ""

#: ../../../en/faq.txt:23
# 6acc75392d1f4612b42dcc937b18f827
msgid "`\"MapServer: Open Source GIS Development\" <http://www.apress.com/book/bookDisplay.html?bID=443>`__ by Bill Kropla."
msgstr ""

#: ../../../en/faq.txt:28
# 4068269501f441bbae21bafbf338f6fc
msgid "How do I compile MapServer for Windows?"
msgstr ""

#: ../../../en/faq.txt:30
# 6f76e9a39c4541d5ab61b6305db1bffa
msgid "See :ref:`win32`. Also, you can use the development libraries in :ref:`OSGeo4W <windows>` as a starting point instead of building all of the dependent libraries yourself."
msgstr ""

#: ../../../en/faq.txt:35
# 1a840ede6f7d42df975b8d03bb73f129
msgid "What do MapServer version numbers mean?"
msgstr ""

#: ../../../en/faq.txt:37
# c31cd23b32ed4320930b23ca99f69f7a
msgid "MapServer's version numbering scheme is very similar to Linux's. For example, a MapServer version number of 4.2.5 can be decoded as such:"
msgstr ""

#: ../../../en/faq.txt:40
# c35b66a563bc4ca582f6729bf60a2469
msgid "4: Major version number. MapServer releases a major version every two to three years."
msgstr ""

#: ../../../en/faq.txt:42
# 95f7201cd0e940d98e808c7d8d7652f6
msgid "2: Minor version number. Increments in minor version number almost always relate to additions in functionality."
msgstr ""

#: ../../../en/faq.txt:44
# e0d4a18e152c4adb86e9709b9962b94f
msgid "5: Revision number. Revisions are bug fixes only. No new functionality is provided in revisions."
msgstr ""

#: ../../../en/faq.txt:47
# facf36606f074a03b1a0293b9cdeea2f
msgid "From a developer's standpoint, MapServer version numbering scheme is also like Linux. Even minor version numbers (0..2..4..6) relate to *release* versions, and odd minor versions (1..3..5..7) correspond to developmental versions."
msgstr ""

#: ../../../en/faq.txt:52
# 7c8b303bcfe8454f8e28ed12a052579c
msgid "Is MapServer Thread-safe?"
msgstr ""

#: ../../../en/faq.txt:54
# d57f4b10f5fc4e908b6461a349e2440d
msgid "**Q**: Is MapServer thread-safe?"
msgstr ""

#: ../../../en/faq.txt:56
# 5d153f1d6dea48a3881e348dd9dd45e5
msgid "**A**: Generally, no (but see the next question). Many components of MapServer use static or global data that could potentially be modified by another thread. Under heavy load these unlikely events become inevitable, and could result in sporadic errors."
msgstr ""

#: ../../../en/faq.txt:61
# a8c56180335b4ed08c7bc5a579f46588
msgid "**Q**: Is it possible to safely use any of MapServer in a multi-threaded application?"
msgstr ""

#: ../../../en/faq.txt:64
# 5c267bed2c9d4a2d8f2a83306dff7f43
msgid "**A**: Some of it, yes, with care. Or with Python :) Programmers must either avoid using the unsafe components of MapServer or carefully place locks around them. Python's global interpreter lock immunizes against MapServer threading problems; since no mapscript code ever releases the GIL all mapscript functions or methods are effectively atomic. Users of mapscript and Java, .NET, mod_perl, or mod_php do not have this extra layer of protection."
msgstr ""

#: ../../../en/faq.txt:71
# 70c0d228135744b1a99d58091cacc762
msgid "**A**: Which components are to be avoided?"
msgstr ""

#: ../../../en/faq.txt:73
# 47a16b588d8f4e1ea2b3e97693924825
msgid "**Q**: Below are lists of unsafe and unprotected components and unsafe but locked components."
msgstr ""

#: ../../../en/faq.txt:76
# edd6d6e6006947029f5432f92652f2f5
msgid "Unsafe:"
msgstr ""

#: ../../../en/faq.txt:78
# a5d57fa4f3bc46159835dc56b81873d5
msgid "OGR layers: use unsafe CPL services"
msgstr ""

#: ../../../en/faq.txt:79
# fcbb262cdf924233a745339b7da44ee1
msgid "Cartoline rendering: static data"
msgstr ""

#: ../../../en/faq.txt:80
# 6e589a338f8741629eed8b5e0259c111
msgid "Imagemap output: static data"
msgstr ""

#: ../../../en/faq.txt:81
# 9f16707ee39c4d17a01116ee189a74f7
msgid "SWF output: static data and use of unsafe msGetBasename()"
msgstr ""

#: ../../../en/faq.txt:82
# c520d36801e445d6961fd8b6b1082cc2
msgid "SVG output: static data"
msgstr ""

#: ../../../en/faq.txt:83
# a8e90eae20584a71a512bab5a3e708f2
msgid "WMS/WFS server: static data used for state of dispatcher"
msgstr ""

#: ../../../en/faq.txt:84
# c236c78417cb403d9556facdfd54efe5
msgid "Forcing a temporary file base (an obscure feature): static data"
msgstr ""

#: ../../../en/faq.txt:85
# 46a5139301074bb18e2f8430708e78b4
msgid "MyGIS: some static data"
msgstr ""

#: ../../../en/faq.txt:87
# fdd6e452767047d3b9618cda8afd06f7
msgid "Unsafe, but locked:"
msgstr ""

#: ../../../en/faq.txt:89
# a931d5e02dda4fa797d1a1a24407a8be
msgid "Map config file loading: global parser"
msgstr ""

#: ../../../en/faq.txt:90
# 0092bb15031b48a9a63ce48ae5936e90
msgid "Setting class and and layer filter expressions (global parser)"
msgstr ""

#: ../../../en/faq.txt:91
# 29c90e0d2f674115a265671e949312ab
msgid "Class expression evaluation (global parser)"
msgstr ""

#: ../../../en/faq.txt:92
# 82317ebdd7d0498197cc563e9bf4c644
msgid "Setting map and layer projections (PROJ)"
msgstr ""

#: ../../../en/faq.txt:93
# 7280cba4981046cebe686616a7c263f3
msgid "Raster layer rendering and querying (GDAL)"
msgstr ""

#: ../../../en/faq.txt:94
# 7e1e09d90a974089b374b1bf8a4a86a1
msgid "Database Connections (mappool.c)"
msgstr ""

#: ../../../en/faq.txt:95
# cf010a4e8cdf46678eaec033ac278d0b
msgid "PostGIS support"
msgstr ""

#: ../../../en/faq.txt:96
# feb886036e72465591334f52fae3f25f
msgid "Oracle Spatial (use a single environment handle for connection)"
msgstr ""

#: ../../../en/faq.txt:97
# 282fe1acb5a54e42812ccb056ec65939
msgid "SDE support (global layer cache)"
msgstr ""

#: ../../../en/faq.txt:98
# e4ba2cdad53b429591ce7fb57ee16ef4
msgid "Error handling (static repository of the error objects)"
msgstr ""

#: ../../../en/faq.txt:99
# ddde309145a848068e0e119d6c87f0f9
msgid "WMS/WFS client connections: potential race condition in Curl initialization"
msgstr ""

#: ../../../en/faq.txt:100
# 61c8d037f3b548918603b0685df15dac
msgid "Plugin layers (static repository of the loaded dll-s)"
msgstr ""

#: ../../../en/faq.txt:102
# 347b0725c8674aeaa0e0d209da865f97
msgid "Rather coarse locks are in place for the above. Only a single thread can use the global parser at a time, and only one thread can access GDAL raster data at a time. Performance is exchanged for safety."
msgstr ""

#: ../../../en/faq.txt:107
# 8a91af01ef80431ebc01a46152e37f10
msgid "What does STATUS mean in a LAYER?"
msgstr ""

#: ../../../en/faq.txt:109
# 8a878e7c53624f77b70618b21008b139
msgid "STATUS ON and STATUS OFF set the default status of the layer. If a map is requested, those layers will be ON/OFF unless otherwise specified via the layers parameter. This is particularly the case when using MapScript and MapServer's built-in template mechanism, but is also useful as a hint when writing your own apps and setting up the initial map view."
msgstr ""

#: ../../../en/faq.txt:115
# e621597131204f9ab0f0f1ceb555bc66
msgid "STATUS DEFAULT means that the layer is always on, even if not specified in the layers parameter. A layer's status can be changed from DEFAULT to OFF in MapScript, but other than that, it's always on."
msgstr ""

#: ../../../en/faq.txt:119
# 939a9984b5af493a9bbe6ba9f25bc8f1
msgid ":ref:`cgi` turns everything off that is not \"STATUS DEFAULT\" off so all layers start from the same state (e.g. off) and must be explicitly requested to be drawn or query. That common state made (at least in my mind) implementations easier. I mean, if a layer \"lakes\" started ON the doing layer=lakes would turn it OFF. So I wanted to remove the ambiguity of a starting state."
msgstr ""

#: ../../../en/faq.txt:126
# a736204e1e4f447abe9891b7b11d81c7
msgid "How can I make my maps run faster?"
msgstr ""

#: ../../../en/faq.txt:128
# 54caa42e5fbd49a29195f571f439b05d
msgid "There are a lot of different approaches to improving the performance of your maps, aside from the obvious and expensive step of buying faster hardware. Here are links to some individual howtos for various optimizations."
msgstr ""

#: ../../../en/faq.txt:132
# 93ff87ad2f754ccd86d46fcffbeaa8a4
msgid ":ref:`Tuning your mapfile for performance <mapfile_tuning>`"
msgstr ""

#: ../../../en/faq.txt:133
# 2871291eb2dd4d98b740c0e9985241fa
msgid ":ref:`Optimizing the performance of vector data sources <vector_optimization>`"
msgstr ""

#: ../../../en/faq.txt:134
# 566831a6496946488181774762fdc565
msgid ":ref:`Optimizing the performance of raster data sources <raster_optimization>`"
msgstr ""

#: ../../../en/faq.txt:135
# 338969025bf74c229ac7e70862fba3ce
msgid ":ref:`Tileindexes for mosaicing and performance <tileindex>`"
msgstr ""

#: ../../../en/faq.txt:137
# c4133ea98252468ab5ce829598165ba8
msgid "Some general tips for all cases:"
msgstr ""

#: ../../../en/faq.txt:139
# 12673a54da844e3daabebb295d74211e
msgid "First and foremost is hardware. An extra GB of RAM will give your map performance increases beyond anything you're likely to achieve by tweaking your data. With the price of RAM these days, it's cheap and easy to speed up every map with one inexpensive upgrade."
msgstr ""

#: ../../../en/faq.txt:144
# 10ad10cbdce54f878886a26a388cbcd3
msgid "Use the scientific method. Change one thing at a time, and see what effect it had. Try disabling all layers and enabling them one at a time until you discover which layer is being problematic."
msgstr ""

#: ../../../en/faq.txt:148
# 4d8a3b01419243d0842fba2b47de020e
msgid "Use :ref:`shp2img` program to time your results. This runs from the command line and draws an image of your entire map. Since it's run from the command line, it is immune to net lag and will give more consistent measurements that your web browser."
msgstr ""

#: ../../../en/faq.txt:154
# 842cdd2d1e1b4ee0bdcd75f0e1558021
msgid "What does Polyline mean in MapServer?"
msgstr ""

#: ../../../en/faq.txt:156
# 9a4031cecfa040e29946e608df3721df
msgid "There's confusion over what POLYLINE means in MapServer and via ESRI. In MapServer POLYLINE simply means a linear representation of POLYGON data. With ESRI polyline means multi-line. Old versions of the Shapefile techical description don't even refer to polyline shapefiles, just line. So, ESRI polyline shapefiles are just linework and can only be drawn and labeled as LINE layers. Those shapefiles don't have feature closure enforced as polygon shapefiles do which is why the distinction is so important. I suppose there is a better choice than POLYLINE but I don't know what it would be."
msgstr ""

#: ../../../en/faq.txt:166
# 3b2f6c5fd4764ecc9f0d19fd4363067b
msgid "The only difference between POLYLINE and LINE layers is how they are labeled."
msgstr ""

#: ../../../en/faq.txt:170
# d0191bdf328349749114c2e4b3e2b40c
msgid "What is MapScript?"
msgstr ""

#: ../../../en/faq.txt:172
# 683b61b289404e2184c83de3877ab19a
msgid "MapScript is the scripting interface to MapServer, usually generated by :term:`SWIG` (except in the case of :ref:`php_mapscript`). MapScript allows you to program with MapServer's objects directly instead of interacting with MapServer through its :ref:`cgi` and :ref:`mapfile`."
msgstr ""

#: ../../../en/faq.txt:180
# 4ed488f592f342e592678e8d223e28be
msgid "Does MapServer support reverse geocoding?"
msgstr ""

#: ../../../en/faq.txt:182
#: ../../../en/faq.txt:194
# c6c4313b8f9b42fdbfd92c736bd3229f
# ad694190e21a4aad93d0b2fd5e2b5119
msgid "No."
msgstr ""

#: ../../../en/faq.txt:184
# cf7d7740935948299c23901127c6badf
msgid "Reverse geocoding is an activity where you take a list of street features that you already have and generate postal addresses from them. This kind of spatial functionality is provided by proprietary packages such as the ESRI suite of tools, as well as services such as those provided by GDT. MapServer is for *map rendering*, and it does not provide for advanced spatial operations such as this."
msgstr ""

#: ../../../en/faq.txt:192
# f276c909b549415d92e10f9f768f5495
msgid "Does MapServer support geocoding?"
msgstr ""

#: ../../../en/faq.txt:196
# 12527b7aa2134d329e9919427d88f1b1
msgid "Geocoding is an activity where you take a list of addresses and generate lat/lon points for them. This kind of spatial functionality is provided by proprietary packages such as the ESRI suite of tools, as well as services such as those provided by GDT. MapServer is for *map rendering*, and it does not provide for advanced spatial operations such as this."
msgstr ""

#: ../../../en/faq.txt:202
# d66d9c7bfbd041079b0a0f379fe754c8
msgid "If you are using MapScript, there is a free geocder available through XMLRPC and SOAP at http://geocoder.us . You could hook you application up to use this service to provide lat/lon pairs for addresses, and then use MapServer to display those points."
msgstr ""

#: ../../../en/faq.txt:208
# 91bfe0175c4e4955b6670a1a2476fc3f
msgid "How do I set line width in my maps?"
msgstr ""

#: ../../../en/faq.txt:210
# 28f9aa78da3344ac9fa73c7ab45bc10f
msgid "In the current MapServer  version, line width is set using the STYLE parameter WIDTH.  For a LINE layer, lines can be made red and 3 pixels wide by using the following style in a CLASS."
msgstr ""

#: ../../../en/faq.txt:222
# 77006d2e56dd45028c5d7c70fdfdf393
msgid "In earlier versions of MapServer , you could set the symbol for the LAYER to 'circle' and then you can set the symbol SIZE to be the width you want. A 'circle' symbol can be defined as"
msgstr ""

#: ../../../en/faq.txt:236
# a51afd1d83db496b8d596c03306a1d1c
msgid "Why do my JPEG input images look crappy via MapServer?"
msgstr ""

#: ../../../en/faq.txt:238
# b5eb5a614c564f1688915673b2a93b6a
msgid "You must be using an old version of MapServer  (where GD was the default library for rendering)."
msgstr ""

#: ../../../en/faq.txt:241
# 7f39d5aa86734b0cb8934882e782f54a
msgid "Newer versions of MapServer  use AGG for rendering, and the default output formats is 24 bit colour, so there should not be a problem."
msgstr ""

#: ../../../en/faq.txt:244
# 86bea1a3b496447eb25d68b78a11a616
msgid "The default output format for MapServer with GD was 8bit pseudo-colored PNG or GIF.  Inherently there will be some color degradation in converting a 24bit image (16 million colors) image into 8bit (256 colors)."
msgstr ""

#: ../../../en/faq.txt:249
# 7bec5df03a324ef48e19e5b45601227e
msgid "With GD output, MapServer used quite a simple method to do the transformation, converting pixels to the nearest color in a 175 color colorcube. This would usually result in blotchy color in a fairly smoothly varying image."
msgstr ""

#: ../../../en/faq.txt:254
# 153dccb693bd4418833095cdbccdb1da
msgid "For GD, solutions used to be:"
msgstr ""

#: ../../../en/faq.txt:256
# e27b9bd63cc74dc595835f1e59315c5f
msgid "Select 24bit output.  This might be as easy as \"IMAGETYPE JPEG\" in your MAP section."
msgstr ""

#: ../../../en/faq.txt:258
# f939ff35b2d94a5f8fe6d5ea6dffcb94
msgid "Enable dithering (PROCESSING \"DITHER=YES\") to produce a better color appearance."
msgstr ""

#: ../../../en/faq.txt:260
# ae2729ce0b6640599c727306d681dd57
msgid "Preprocess your image to 8bit before using it in MapServer with an external application like the GDAL rgb2pct.py script."
msgstr ""

#: ../../../en/faq.txt:263
# 7b3f17c17d714b6682d4cb84749e6e34
msgid "For more information review the :ref:`raster`."
msgstr ""

#: ../../../en/faq.txt:266
# bb259fc59bf14dd88c95817f327abea0
msgid "Which image format should I use?"
msgstr ""

#: ../../../en/faq.txt:268
# a98184902deb4422886f40da17d93991
msgid "Although MapScript can generate the map in any desired image format it is sufficient to only consider the three most prevalent ones: JPEG, PNG, and GIF."
msgstr ""

#: ../../../en/faq.txt:271
# 7b6f8965d4eb4d9199eeae8ae14d0d79
msgid "JPEG is an image format that uses a lossy compression algorithm to reduce an image's file size and is mostly used when loss of detail through compression is either not noticeable or negligible, as in most photos. Maps on the other hand mainly consist of fine lines and areas solidly filled in one colour, which is something JPEG is not known for displaying very well. In addition, maps, unless they include some aerial or satellite imagery, generally only use very few different colours. JPEG with its 24bit colour depth capable of displaying around 16.7 million colours is simple not suitable for this purpose. GIF and PNG however use an indexed colour palette which can be optimized for any number (up to 256) of colours which makes them the perfect solution for icons, logos, charts or maps. The following comparison (generated file sizes only; not file generation duration) will therefore only include these two file formats:"
msgstr ""

#: ../../../en/faq.txt:0
# 834cdeb55a884276952c3a6a343160b9
msgid "GIF vs. PNG vs. PNG24 Generated Map File Sizes"
msgstr ""

#: ../../../en/faq.txt:288
# 5bcac21893f840d3b4bcb1d2dbf4f0a2
msgid "GIF"
msgstr ""

#: ../../../en/faq.txt:288
# e930df13ec74417faf123621d67dcd5d
msgid "PNG"
msgstr ""

#: ../../../en/faq.txt:288
# 1a46f8b98d2a41ac9ca8e0117e93f7c5
msgid "PNG24"
msgstr ""

#: ../../../en/faq.txt:290
# 682e542ab2294ba09989b209208ad947
msgid "Vector Data only"
msgstr ""

#: ../../../en/faq.txt:290
# 839467c88e244281b07c4493fba6285e
msgid "59kb"
msgstr ""

#: ../../../en/faq.txt:290
# 7ebbb6ebe99040feb23256e146ab90ff
msgid "26kb"
msgstr ""

#: ../../../en/faq.txt:290
# 4636254c861c4c8f9fb09cc8c867bfb9
msgid "69kb"
msgstr ""

#: ../../../en/faq.txt:292
# 9873d99ffb32455194630dbab3ac1cfa
msgid "Vector Data & Satellite Image coloured"
msgstr ""

#: ../../../en/faq.txt:292
# 39317b0e4ae04afc940d06b4ad4a2dc7
msgid "156kb"
msgstr ""

#: ../../../en/faq.txt:292
# b88711c61f774239839842893debf347
msgid "182kb"
msgstr ""

#: ../../../en/faq.txt:292
# 48ebcf657d5e4d059e6747e6bcf2c935
msgid "573kb"
msgstr ""

#: ../../../en/faq.txt:294
# 77613f9e7f3847fdb44f46ad836596c6
msgid "Vector Data & Satellite Image monochrome"
msgstr ""

#: ../../../en/faq.txt:294
# 7ebc998f7c654a2181c7faa89740f675
msgid "142kb"
msgstr ""

#: ../../../en/faq.txt:294
# 29754b8ac4d941b0a748901b1e763541
msgid "134kb"
msgstr ""

#: ../../../en/faq.txt:294
# c78718201dee4e7db577778f4112bec4
msgid "492kb"
msgstr ""

#: ../../../en/faq.txt:297
# e587fd59d2d34aa5892b68a0a69d29de
msgid "(results based on an average 630x396 map with various colours, symbols, labels/annotations etc.)"
msgstr ""

#: ../../../en/faq.txt:300
# 83f74a4a18a24a30a3f7de4c53176db9
msgid "Although GIF shows a quantitative as well as qualitative advantage over PNG when generating maps that contain full coloured remote sensing imagery, PNG is the clear quantitative winner in terms of generated file sizes for maps with or without additional monochrome imagery and should therefore be the preferred image format. If the mapping application however can also display fullcolour aerial or satellite imagery, the output file format can be changed dynamically to either GIF or even PNG24 to achieve the highest possible image quality."
msgstr ""

#: ../../../en/faq.txt:310
# 4d191d42fcf24e10afde9d582a182b8e
msgid "Why doesn't PIL (Python Imaging Library) open my PNGs?"
msgstr ""

#: ../../../en/faq.txt:312
# 84fdd37b4da74809a48793da342b414c
msgid "`PIL <http://www.pythonware.com/products/pil/>`__ does not support interlaced PNGs at this time (no timetable on when it actually will either). To be able to read PNGs in PIL, they must not be interlaced. Modify your OUTPUTFORMAT with a FORMATOPTION like so:"
msgstr ""

#: ../../../en/faq.txt:329
# 66197b14db154b888e0e96512f0e4600
msgid "Why do my symbols look poor in JPEG output?"
msgstr ""

#: ../../../en/faq.txt:331
# 1d4a9c173f3c4d90b45805880ff43622
msgid "When I render my symbols to an 8bit output (PNG, GIF) they look fine, but in 24bit jpeg output they look very blocky and gross."
msgstr ""

#: ../../../en/faq.txt:334
# 8e9f5c0157cc451d9af11d5c776e4507
msgid "You must be using an old version of MapServer .  This should not be problem with newer versions.  The following explains the old (GD) behaviour."
msgstr ""

#: ../../../en/faq.txt:338
# d2f1a88506ff498ea4a593c14d65ed0d
msgid "In order to render some classes of symbols properly in 24bit output, such as symbols from true type fonts, it is necessary to force rendering to occur in RGBA. This can be accomplished by including the \"TRANSPARENCY ALPHA\" line in the layer definition. Don't use this unnecessarily as there is a performance penalty."
msgstr ""

#: ../../../en/faq.txt:344
# b103d1d5f7da4f7ab39af54a18ca533b
msgid "This problem also affects PNG24 output or any RGB output format. 8bit (PC256) or RGBA output types are already ok."
msgstr ""

#: ../../../en/faq.txt:348
# c87d5caf9c3a45fcbc44c0d08c88df0b
msgid "How do I add a copyright notice on the corner of my map?"
msgstr ""

#: ../../../en/faq.txt:350
# 2e6ed249a8124415baad683b9cfbd92a
msgid "You can use an inline feature, with the :ref:`FEATURE` object, to make a point on your map. Use the TEXT parameter of the FEATURE object for the actual text of the notice, and a :ref:`LABEL` object to style the notice."
msgstr ""

#: ../../../en/faq.txt:356
# 801f633d5a21433cbff6aa58c520a773
msgid "Example Layer"
msgstr ""

#: ../../../en/faq.txt:391
# 507fe37ad13e4403aac8f7d8deebc6fb
msgid "Result"
msgstr ""

#: ../../../en/faq.txt:397
# 2b02e36284c64d508df5db5f444ac6f5
msgid "How do I have a polygon that has both a fill and an outline with a width?"
msgstr ""

#: ../../../en/faq.txt:399
# 88e914eb7b1547f58e2ff7305c6e74b1
msgid "How do I have a polygon that has both a fill and an outline with a width? Whenever I put both a color (fill) and an outlinecolor with a width on a polygon within a single STYLE, the outline width isn't respected."
msgstr ""

#: ../../../en/faq.txt:403
# 9975915ce818407ab8a4156983879cc5
msgid "For historical reasons, width has two meanings within the context of filling polygons and stroke widths for the outline. If a polygon is filled, then the width defines the width of the symbol *inside* the filled polygon. In this event, the outline width is disregarded, and it is always set to 1. To acheive the effect of *both* a fill and an outline width, you need to use two styles in your class."
msgstr ""

#: ../../../en/faq.txt:421
# 524006eda72142d3b2d6a74714e7f7b3
msgid "How can I create simple antialiased line features?"
msgstr ""

#: ../../../en/faq.txt:423
# 43cc3806661a4a439cea296dca8ab005
msgid "With AGG (used in recent MapServer  version), antialiased lines is the default, and can't be turned off."
msgstr ""

#: ../../../en/faq.txt:426
# f77690cbd6db4d74beb06d7e1e9c8e23
msgid "With GD, the easiest way to produce antialiased lines is to:"
msgstr ""

#: ../../../en/faq.txt:428
# bd219ae5e34445fc95c96ce0a78f0d91
msgid "use a 24-bit output image type (IMAGEMODE RGB (or RGBA))"
msgstr ""

#: ../../../en/faq.txt:429
# c995d7bc2346475b96e19b1795f3e0be
msgid "set TRANSPARENCY ALPHA in the layer using antialiased lines"
msgstr ""

#: ../../../en/faq.txt:430
# 6f130b0a850d41dea0f16e61219ed252
msgid "set ANTIALIAS TRUE in the STYLE element of the CLASS with antialiased lines"
msgstr ""

#: ../../../en/faq.txt:432
# 097953110e9a4e66a6ce12d6a177ea41
msgid "The following mapfile snippets enable antialiased county borders for GD:"
msgstr ""

#: ../../../en/faq.txt:466
# b8e7ac82c19b4c948f4d32446f4bcf61
msgid "The bdry_counln2 shapefile referenced in the counties layer is a line shapefile. A polygon shapefile could be substituted with roughly the same results, though owing to the nature of shapefiles each border would be rendered twice and the resulting output line would likely appear to be slightly thicker. Alternatively, one could use a polygon shapefile, set TYPE to POLYGON, and use OUTLINECOLOR in place of COLOR in the STYLE element."
msgstr ""

#: ../../../en/faq.txt:475
# 85b6854c32244f2288906f42360852f4
msgid "You can tweak the combination of STYLE->WIDTH and SYMBOLSCALE to modify line widths in your output images."
msgstr ""

#: ../../../en/faq.txt:479
# 4710041e22304f3497390e9eeaba1784
msgid ":ref:`Cartoline <sym_construction>` symbols can be used to achieve fancier effects."
msgstr ""

#: ../../../en/faq.txt:483
# ada7adf483d740bfb38640a8b0c60692
msgid "Which OGC Specifications does MapServer support?"
msgstr ""

#: ../../../en/faq.txt:485
# 72653ec65c214d489e08c488bd196f6e
msgid "See: :ref:`ogc_support`."
msgstr ""

#: ../../../en/faq.txt:488
# 852108a780684a5cbdc803336871735f
msgid "Why does my requested WMS layer not align correctly?"
msgstr ""

#: ../../../en/faq.txt:490
# ff5b5925ecbc4069b380b0f15d76ae55
msgid "Requesting a layer from some ArcIMS WMS connectors results in a map with misalgned data (the aspect ratio of the pixels looks wrong)."
msgstr ""

#: ../../../en/faq.txt:493
# 7546c22922014428b515c09dc17e2157
msgid "Some ArcIMS sites are not set up to stretch the returned image to fit the requested envelope by default. This results in a map with data layers that overlay well in the center of the map, but not towards the edges. This can be solved by adding \"*reaspect=false*\" to the request (by tacking it on to the connection string)."
msgstr ""

#: ../../../en/faq.txt:499
# 8e1fcb27ea774b058c46db118c41235f
msgid "For example, if your mapfile is in a projection other than EPSG:4326, the following layer will not render correctly:"
msgstr ""

#: ../../../en/faq.txt:523
# 1acbd9d770f44ac0b1dd6168a65f0c25
msgid "Adding \"reaspect=false\" to the connection string solves the problem:"
msgstr ""

#: ../../../en/faq.txt:547
# 09679730e7f44062924b64d1f5f0a011
msgid "When I do a GetCapabilities, why does my browser want to download mapserv.exe/mapserv?"
msgstr ""

#: ../../../en/faq.txt:549
# 66a371a1180c48a194068b5fcc710f14
msgid "A beginner question here... I'm new to MS and to Apache. I've got MS4W up and running with the Itasca demo. Now I want to enable it as a WMS server. mapserv -v at the command line tells me it supports WMS_SERVER. When I point my browser to it, my browser just wants to download mapserv.exe!"
msgstr ""

#: ../../../en/faq.txt:554
# f86917612dd7468eb8ee4cc4f15e5470
msgid "What am I missing?"
msgstr ""

#: ../../../en/faq.txt:556
# 94a2acbb71234b5ea4d0379f40cb4208
msgid "Here is the URL I'm using to issue a GetCapabilities WMS request: http://localhost/cgi-bin/mapserv.exe?map=../htdocs/itasca/demo.map&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities"
msgstr ""

#: ../../../en/faq.txt:559
# c6a7c1fac1ca45bda3472946d7e7d883
msgid "The OGC:WMS 1.1.0 and 1.1.1 specifications (which are both supported by MapServer) state that, for GetCapabilities responses, the OGC:WMS server returns a specific MIME type (i.e. application/vnd.ogc.xml (see subclause 6.5.3 of `OGC:WMS 1.1.1 <http://portal.opengeospatial.org/files/?artifact_id=1081&version=1&format=pdf>`__."
msgstr ""

#: ../../../en/faq.txt:565
# 19bd3ec3ecad4c51b01a70bd67a92455
msgid "A MIME type is passed from the web server to the client (in your case, a web browser), from which a client can decide how to process it."
msgstr ""

#: ../../../en/faq.txt:568
# 87043cd1966e4a3cb272cc9c39a946ac
msgid "Example 1: if using a web browser, if a web server returns an HTTP Header of \"Content-type:image/png\", then the web browser will know that this is a PNG image and display it accordingly."
msgstr ""

#: ../../../en/faq.txt:572
# 196b21df735140139caeac496b1d74f9
msgid "Example 2: if using a web browser, if a web server returns an HTTP Header of \"Content-type:text/html\", then the web browser will know that this is an HTML page and display it accordingly (i.e. tables, divs, etc.)"
msgstr ""

#: ../../../en/faq.txt:576
# 89b70d02fa524555830caf25206cdcce
msgid "Basically, what is happening is that the OGC:WMS is returning, in the headers of the HTTP response, a MIME type which your web browser does not understand, which usually prompts a dialog box on whether to open or download the content (i.e. Content-type:application/vnd.ogc.wms_xml)."
msgstr ""

#: ../../../en/faq.txt:581
# 1bdb42f0caf54e5da0ea90c7ace797eb
msgid "You could configure your web browser to handle the application/vnd.ogc.wms_xml MIME type a certain way (i.e. open in Notepad, etc.)."
msgstr ""

#: ../../../en/faq.txt:585
# 54c6f5167b984d1e841bbb28e9eb3262
msgid "Why do my WMS GetMap requests return exception using MapServer 5.0?"
msgstr ""

#: ../../../en/faq.txt:587
# f744c89e29474f1dab87e5b5c6bda4d0
msgid "Before upgrading to MapServer 5.0, I was able to do quick GetMap tests in the form of: http://wms.example.com/wms?service=WMS&version=1.1.1&request=GetMap&layers=foo"
msgstr ""

#: ../../../en/faq.txt:591
# a940127b3e344e748b178b4d62446cee
msgid "Now when I try the same test, MapServer WMS returns an XML document saying something about missing required parameters. What's going on here?"
msgstr ""

#: ../../../en/faq.txt:594
# 1379af024c354b9294afb060215dc364
msgid "This was a major change for WMS Server support in MapServer 5.0. MapServer WMS Server GetMap requests now require the following additional parameters:"
msgstr ""

#: ../../../en/faq.txt:597
# 2d0cd994faa34edbaed209da6c448ed4
msgid "srs"
msgstr ""

#: ../../../en/faq.txt:598
# 438222de67b1427fabb9ae38d211c903
msgid "bbox"
msgstr ""

#: ../../../en/faq.txt:599
# cf6408d704de404d94738f363fe481fe
msgid "width"
msgstr ""

#: ../../../en/faq.txt:600
# ee5901d251f448f2b15ef9a1700cd52a
msgid "height"
msgstr ""

#: ../../../en/faq.txt:601
# ba0a923010f546fcbab38202d2713da9
msgid "format"
msgstr ""

#: ../../../en/faq.txt:602
# 8927801148a64af0989c1276fa86e1fe
msgid "styles"
msgstr ""

#: ../../../en/faq.txt:605
# 38505fa5bc3e4d9583cdbd7526549509
msgid "These parameters were always required in all versions of the WMS specification, but MapServer previously had not required them in a client request (even though most OGC WMS clients would issue them anyway to be consistent with the WMS spec)."
msgstr ""

#: ../../../en/faq.txt:610
# ff70e7af57eb4d5ca16992e76c5d5090
msgid "The request below now constitutes a valid GetMap request:"
msgstr ""

#: ../../../en/faq.txt:616
# efefefcd896c4dd2adc35321abe01591
msgid "Which is consistent with the WMS specification."
msgstr ""

#: ../../../en/faq.txt:618
# f1935108dcd849959a9d6d3fc90450bb
msgid "More information on these parameters can be found in the :ref:`wms_server` and the `OGC WMS 1.1.1 specification <http://portal.opengeospatial.org/files/?artifact_id=1081&version=1&format=pdf>`__"
msgstr ""

#: ../../../en/faq.txt:622
# e6a72c37816d41dd9012edb7aa41ed16
msgid "For more detailed information, see `ticket 1088 <http://trac.osgeo.org/mapserver/ticket/1088>`__"
msgstr ""

#: ../../../en/faq.txt:626
# 023d4c4258ef438fba36b57ff2fac8a8
msgid "STYLES, though a required WMS parameter, is now optional again in MapServer. For more detailed information, see `ticket 2427 <http://trac.osgeo.org/mapserver/ticket/2427#comment:2>`__"
msgstr ""

#: ../../../en/faq.txt:631
# 19ed1217424a4af397b673e180208888
msgid "Using MapServer 6.0, why don't my layers show up in GetCapabilities responses or are not found anymore?"
msgstr ""

#: ../../../en/faq.txt:633
# 3b1d5ca283f5477da3437de387e20bd4
msgid "MapServer 6.0 introduces the option of hiding layers against OGC Web Service requests.  OGC Web Services can provide powerful access to your geospatial data.  It was decided to disable layer level request access as a default.  See :ref:`rfc67` provides a full explanation of the changes and implications."
msgstr ""

#: ../../../en/faq.txt:638
# 8715eae8ab4d4ea295060c803ab04fff
msgid "To enable pre-6.0 behaviour, you can add the following to the :ref:`WEB` object's METADATA section in your mapfile:"
msgstr ""

#: ../../../en/faq.txt:645
# 3e6f77d90a3749d5ac1ae5981cc97d47
msgid "This will enable access of all layers to all OGC Web Service requests."
msgstr ""

#: ../../../en/faq.txt:648
# ec03674d7e0f4a30a3498dd284021eac
msgid "Where do I find my :term:`EPSG` code?"
msgstr ""

#: ../../../en/faq.txt:650
# d843533abddc4af9bb2be6b6a8159fd8
msgid "There is a text file \"epsg\" in your PROJ4 installation (e.g. \"/usr/local/share/proj/epsg\") which contain the EPSG information used by PROJ4. In Windows, this is often located in C:\\\\proj\\\\nad or is found with an environment variable called PROJ_LIB."
msgstr ""

#: ../../../en/faq.txt:655
# 79e3961abffb4b98b7c718d757c0305e
msgid "http://spatialreference.org allows you to search for EPSG codes."
msgstr ""

#: ../../../en/faq.txt:657
# 30264d68e02e4c2f8e4dba32f5151141
msgid "You can also have a look at: http://ocean.csl.co.uk"
msgstr ""

#: ../../../en/faq.txt:660
# c22b8a126720489985c98f1d9f87fab5
msgid "More information to EPSG: http://www.epsg.org"
msgstr ""

#: ../../../en/faq.txt:663
# 1f0ea6310a134b4db5eee4f01d241de8
msgid "More information to PROJ4: http://trac.osgeo.org/proj"
msgstr ""

#: ../../../en/faq.txt:667
# feb31534384840208121537733dd9eaa
msgid "How can I reproject my data using ogr2ogr?"
msgstr ""

#: ../../../en/faq.txt:669
# d574d2b6de3c4f97868ebaefc32ae2ad
msgid "With ogr2ogr of course! ogr2ogr is a powerful utility that will transform the projections of your shapefiles when passed the appropriate parameters. In my case, I was using MapServer to serve data in RI State Plane Feet. In order to do so, the data had to first be converted to meters. Here is the command I used:"
msgstr ""

#: ../../../en/faq.txt:679
# f0ce7b4ede5e468d86a50fd5e200fac7
msgid "Since my data already had a projection defined, I did not need to explicitly state a source projection. This command uses the EPSG definition for NAD83 Rhode Island (32130) and performs the feet to meters conversion."
msgstr ""

#: ../../../en/faq.txt:683
# 7a056c4a3bff42b38204647915f1273f
msgid "Now say my data wasn't already projected? Here's how we deal with that:"
msgstr ""

#: ../../../en/faq.txt:689
# 17ad8ba280c14f3590131573ea8ec768
msgid "Let's examine what is going on here:"
msgstr ""

#: ../../../en/faq.txt:691
# 9d02eb2a2d6f4136abd3a572a163ec56
msgid "The -s_srs parameter explicitly defines a projection for the data. The parameters used here were taken out of the EPSG definition (in this case, 32130) in the epsg file(see the `projection FAQ <epsg_codes>`__ for more details on locating EPSG definitions). The entry for RI in the epsg file is as follows:"
msgstr ""

#: ../../../en/faq.txt:702
# 0479aff4047340fe97e12127757f89fe
msgid "You can see how the definition in the initial command is formulated. Notice that the \"+units=m\" parameter has been changed to “+to_meter=0.3408”. This is important for the conversion. Where did the value of 0.3408 come from you ask? From the EPSG file! It has many goodies buried in it so by simply running 'grep \"to_meter\" epsg’ you can refresh your memory if you need to."
msgstr ""

#: ../../../en/faq.txt:708
# 2adbdd9ecc7e45c190fce3d95093b66e
msgid "The next parameter in the command is \"-t_srs EPSG:32130\". This command tells ogr2ogr to transform the data to the EPSG code of 32130. After this is declared, all you need to do is declare a file name for your new shape file and to set which file is being used as the input (note: make sure you don’t confuse the order of these two)."
msgstr ""

#: ../../../en/faq.txt:714
# f26cecbbd78644ec9bad63a70fc2320b
msgid "Hit enter, bombs away, and enjoy your new data in meters!"
msgstr ""

#: ../../../en/faq.txt:718
# 60f6de2c54044f0ea67a182b16577323
msgid "How can I help improve the documentation on this site?"
msgstr ""

#: ../../../en/faq.txt:720
# 863d556d0c1d44d1afbdc611665d3693
msgid "New documentation material and corrections to existing documentation are definitely very welcome. These contributions are handled through the same issue tracker used to track software bugs and enhancements."
msgstr ""

#: ../../../en/faq.txt:724
# 78e1da81ff394ff9a2a44209af757303
msgid "Follow the directions for submitting bugs at: http://www.mapserver.org/development/bugs.html. When creating a ticket, in the Component field, select `MapServer Documentation`. If our ticket pertains to a specific web page, please include the URL to that page."
msgstr ""

#: ../../../en/faq.txt:730
# d6f6aa2b1b954a318f32e9863674166b
msgid "If you have tips or examples that don't really fit the definition of documentation, a good place to put them is the MapServer wiki at: https://github.com/mapserver/mapserver/wiki"
msgstr ""

#: ../../../en/faq.txt:736
# 221c499bbf8b433fb4166cc796e509a7
msgid "What's with MapServer's logo?"
msgstr ""

#: ../../../en/faq.txt:738
# 52e92b959fdc4fd3ad61b17041b13022
msgid "The MapServer logo illustrates the confluence of the `Minnesota`_ and `Mississippi`_ rivers, quite near to the home of the `St. Paul Campus`_ of the `University of Minnesota`_, which was the `birthplace of MapServer`_."
msgstr ""

