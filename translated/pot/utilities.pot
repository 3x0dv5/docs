# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MapServer 5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-05-11 22:18\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../en/utilities/batch_utilities.txt:8
# 5c2ca20b5ebb430c9b25cb507edf811a
msgid "Batch Scripting"
msgstr ""

#: ../../en/utilities/batch_utilities.txt:10
# 3e3f5159e04841948238660337c8e0a7
msgid "If you need to run the utilities on multiple files/folders, here are some commands that will help you:"
msgstr ""

#: ../../en/utilities/batch_utilities.txt:14
#: ../../en/utilities/manage.txt:56
# 094b85cd54334fd38c81fdc6b573b9cb
# eb6aa4afbaee49caa1119631bb7bd5c6
msgid "Windows"
msgstr ""

#: ../../en/utilities/batch_utilities.txt:16
# 20d2fa65dfb64400a48fcfd0de78f5b8
msgid "type the following at the command prompt:"
msgstr ""

#: ../../en/utilities/batch_utilities.txt:22
# f8ba81aa9bcf4a64b34ef6fdb5e84add
msgid "or to run recursively (throughout all subfolders):"
msgstr ""

#: ../../en/utilities/batch_utilities.txt:29
# fdb61dab38c442f5aa65363ae3c1515a
msgid "Linux"
msgstr ""

#: ../../en/utilities/index.txt:5
# 80424283b2af4d3d9924bf29f4463b39
msgid "Utilities"
msgstr ""

#: ../../en/utilities/legend.txt:9
# 3adba6a3f9ce42d4a126cfffd233825d
msgid "legend"
msgstr ""

#: ../../en/utilities/legend.txt:12
#: ../../en/utilities/msencrypt.txt:18
#: ../../en/utilities/scalebar.txt:11
#: ../../en/utilities/shp2img.txt:12
#: ../../en/utilities/shptree.txt:12
#: ../../en/utilities/shptreetst.txt:12
#: ../../en/utilities/shptreevis.txt:12
#: ../../en/utilities/sym2img.txt:11
#: ../../en/utilities/tile4ms.txt:11
# 149e8e6b3f03476ca2a4c450f3829adc
# 356a5389445a4a7faee12f5a151d5a78
# b8edb374c5204afc8b4871574e2cdfb4
# 5e96fd38e9964727a88862718388ffc6
# 44499cef0c1f4463a5e6e149f0671058
# 22b7e7f4fd9945fa953b7da16cb3d12b
# 23f6c11d3b674e35bceb66d7f9687654
# 5503837b841645178c518a849feb7b80
# b8000b6c74f5444f81db9e5e9e7c0a70
msgid "Purpose"
msgstr ""

#: ../../en/utilities/legend.txt:14
# fc13c42a15fd44bf93bc9aafb5d7d5ed
msgid "Creates a legend from a mapfile. Output format depends on the graphics library used for rendering."
msgstr ""

#: ../../en/utilities/legend.txt:18
#: ../../en/utilities/msencrypt.txt:34
#: ../../en/utilities/scalebar.txt:17
#: ../../en/utilities/shp2img.txt:21
#: ../../en/utilities/shptree.txt:36
#: ../../en/utilities/shptreetst.txt:20
#: ../../en/utilities/shptreevis.txt:18
#: ../../en/utilities/sym2img.txt:18
#: ../../en/utilities/tile4ms.txt:27
# 128a97d58baa43d5adb0ebff3d795eff
# 3f57a3ba2ca64d91861bed9a846f1a3c
# dd24d16a7b79487c9c89a0df757ec9ec
# 53cb97379877437e8cc552248c5d5754
# 49bc715c0da94364bad585f62c8c2709
# 35ef1265e66b4f18b1ad2a25378a28d1
# 9d570346c4614478a7f443cd0cfcf3ba
# 138f5e40db4343f2bfd603dc31987d57
# 36b6643c81a34b91be222c6e589db881
msgid "Syntax"
msgstr ""

#: ../../en/utilities/manage.txt:8
# daae0cf6e5874778950c6cc896ca19f7
msgid "File Management"
msgstr ""

#: ../../en/utilities/manage.txt:17
# d93cbfd07a9547bf939178313a6d1b14
msgid "File Placement"
msgstr ""

#: ../../en/utilities/manage.txt:19
# 63f942fd03be4fda8a2a853ff28cd154
msgid "MapServer requires a number of different files to execute. Except for graphics that are referenced in output templates (i.e. web pages) none of the data or configuration files need be accessible via a web server. File naming for MapServer follows two rules:"
msgstr ""

#: ../../en/utilities/manage.txt:24
# 8a4546a8adea4cd88f6033715f5bc50e
msgid "Files may be given using their full system path. *or*"
msgstr ""

#: ../../en/utilities/manage.txt:25
# ed2388968d57424a9db8219bf7e7bdf5
msgid "Files may be given using a relative path where the path is relative to the location of the file they are being referenced from."
msgstr ""

#: ../../en/utilities/manage.txt:28
# 03f4590ac3064744b700deeda6bc8918
msgid "So, for files referenced in the Mapfile they can be given relative to the location of the Mapfile. Same holds true for symbol sets and font sets."
msgstr ""

#: ../../en/utilities/manage.txt:35
# 1ff8913885db49a8a973ff9128660252
msgid "Temporary  Files"
msgstr ""

#: ../../en/utilities/manage.txt:37
# 3974fc20da03441e848c33c9f5c53a82
msgid "MapServer also can produce a number of files (i.e. maps, legends, scalebars, etc...). These files **must** be accessible using a web server. To accomplish this MapServer creates these files in a scratch directory. The location of that directory is given using the IMAGEPATH and IMAGEURL parameters in the web section of a Mapfile. The scratch directory must be writable by the user that the web server runs under, usually *nobody*. It is recommended for security reasons that the web user own the scratch directory rather than making it world writable. The scratch area will need to be cleaned periodically. On busy sites this may need to happen several times an hour. Here's an example shell script that could be run using *cron*:"
msgstr ""

#: ../../en/utilities/manage.txt:58
# a3da76fd5e004fc28ebfbebae4ea7c6b
msgid "The following *.bat* file can be used in 'Scheduled Tasks' to remove these temporary images daily:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:14
# 9c8a43bd0c6b4c7c8b32345b010aea48
msgid "msencrypt"
msgstr ""

#: ../../en/utilities/msencrypt.txt:20
# 3c4bf507c61a403c8fc26481e64d5ce8
msgid "Used to create an encryption key or to encrypt portions of connection strings for use in mapfiles (added in v4.10).  Typically you might want to encrypt portions of the CONNECTION parameter for a database connection.  The following CONNECTIONTYPEs are supported for using this encryption method:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:36
# 45c7ff4f5b3b4b978f50ba8abcb169df
msgid "To create a new encryption key:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:42
# 79f767692a1a4b9092f396628bcf0e79
msgid "To encrypt a string:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:49
# fc5b905f2ae446f6959d633c8458b351
msgid "Use in Mapfile"
msgstr ""

#: ../../en/utilities/msencrypt.txt:51
# 6274b868631d40fbb7e1011161f1a649
msgid "The location of the encryption key can be specified by two mechanisms, either by setting the environment variable MS_ENCRYPTION_KEY or using a CONFIG directive in the MAP object of your mapfile.  For example:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:59
# 50c5ec3699504afea8036f168c95d6c6
msgid "Use the { and } characters as delimiters for encrypted strings inside database CONNECTIONs in your mapfile.  For example:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:68
#: ../../en/utilities/shptree.txt:54
#: ../../en/utilities/shptreetst.txt:25
#: ../../en/utilities/shptreevis.txt:25
# 5f9e5674f2144fe995710a4c6a95fa70
# 25aaaff4252d42008357589f0b28f1e2
# 762c5b2a948847f8a8c66d59e9adf5c3
# 8358f16d0ecb417eb00b01d3f59969de
msgid "Example"
msgstr ""

#: ../../en/utilities/msencrypt.txt:90
# 585703faf73446a5907eed3258941eb3
msgid "Here are the steps to encrypt the password in the above connection:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:92
# 822e683fd0be415fb5c141b4a6d43f48
msgid "Generate an encryption key (note that this key should not be stored anywhere within your web server's accessible directories):"
msgstr ""

#: ../../en/utilities/msencrypt.txt:99
# 435bc00739434831bab12edcfbe8e780
msgid "And this generated key file might contain something like:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:105
# 58fbd07dca224118a9f79f511701d2e3
msgid "Encrypt the connection's password using that generated key:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:111
# e9c7ba46db0948d8ba194f02fac48a15
msgid "Which returns the password encrypted, at the commandline (you'll use it in a second):"
msgstr ""

#: ../../en/utilities/msencrypt.txt:118
# 2bc7e0ab3ef44f14af80e65cdf309d78
msgid "Edit the mapfile to make sure the 'mykey.txt' can be found, using the \"MS_ENCRYPTION_KEY\" environment variable.  The CONFIG parameter inside the MAP object can be used to set an environment variable inside a mapfile:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:131
# de08a37b21484ea1ac81cda47b0f13bb
msgid "Modify the layer's CONNECTION to use the generated password key, making sure to use the “{}” brackets around the key:"
msgstr ""

#: ../../en/utilities/msencrypt.txt:139
# a006bf83935b4b69b93fa8730859f226
msgid "Done!  Give your new encrypted mapfile a try with the :ref:`shp2img` utility!"
msgstr ""

#: ../../en/utilities/scalebar.txt:8
# 4df75aad57894f93b3b57fadaca03bf0
msgid "scalebar"
msgstr ""

#: ../../en/utilities/scalebar.txt:13
# cfabca814e6f4ea8bd5c86fd5b84635a
msgid "Creates a scalebar from a mapfile. Output is either PNG or GIF depending on what version of the GD library used."
msgstr ""

#: ../../en/utilities/shp2img.txt:8
# 81979bfb0fc3486c85c6446f4cd0c106
msgid "shp2img"
msgstr ""

#: ../../en/utilities/shp2img.txt:14
# 0e3f879fd08049e5830ec17d9cc953db
msgid "Creates a map image from a mapfile. Output is either PNG or GIF depending on what version of the GD library is used.  This is a useful utility to test your mapfile. You can simply provide the path to your mapfile and the name of an output image, and an image should be returned. If an image cannot be created an error will be displayed at the command line that should refer to a line number in the mapfile."
msgstr ""

#: ../../en/utilities/shp2img.txt:44
# aaa065b0bc6e42c4b9b6656bb3c283a4
msgid "Example #1"
msgstr ""

#: ../../en/utilities/shp2img.txt:51
# 4b105544034c4eb78d8be5bfa2b77821
msgid "A file named 'test.png' is created, that you can drag into your browser to view."
msgstr ""

#: ../../en/utilities/shp2img.txt:54
# c573d17185e44724b031dd1d6a7c7fea
msgid "Example #2"
msgstr ""

#: ../../en/utilities/shp2img.txt:61
# 207995905d3046fc88312775e84a5157
msgid "A file named 'test2.png' is created, and layer draw speeds are returned such as:"
msgstr ""

#: ../../en/utilities/shp2img.txt:77
# 2bb1eda83a5b478686b7d0ec8c3e769b
msgid "Example #3"
msgstr ""

#: ../../en/utilities/shp2img.txt:84
# d552b7c88b8c4c55b36907ff3d2436ee
msgid "A file named 'test3.png' is created, layer draw speeds are returned, and some warnings that index qix files are not found, such as:"
msgstr ""

#: ../../en/utilities/shptree.txt:8
# f241455da46d4453bc74de54e57b7190
msgid "shptree"
msgstr ""

#: ../../en/utilities/shptree.txt:13
# 1cb343793e6b4ebba44b3823664f52cd
msgid "Creates a quadtree-based spatial index for a Shape data set.  The default tree depth is calculated so that each tree node (quadtree cell) contains 8 shapes.  Do not use the default with point files, a value between 6 and 10 seems to work ok.  Your millage may vary and you'll need to do some experimenting."
msgstr ""

#: ../../en/utilities/shptree.txt:19
# d46a386645d54d71926789719de4709e
msgid "The `shptree wiki page <https://github.com/mapserver/mapserver/wiki/ShpTree>`__ may also contain information on this utility."
msgstr ""

#: ../../en/utilities/shptree.txt:24
#: ../../en/utilities/tile4ms.txt:19
# 6b862d0f2f6f44ce8fff14bb68a075a0
# 6c024c59ae64408b8719153a41ada33f
msgid "Description"
msgstr ""

#: ../../en/utilities/shptree.txt:25
# 059dd2441ff34b96b240f9e0f9f7f3da
msgid "This utility is a must for any MapServer application that uses Shape data sets.  Shptree creates a spatial index of your Shape data set, using a quadtree method.  This means that MapServer will use this index to quickly find the appropriate shapes to draw.  It creates a file of the same name as your Shape data set, with a *.qix* file extension.  The quadtree method breaks the file into 4 quadrants, recursively until only a few shapes are contained in each quadrant. This minimum number can be set with the <depth> parameter of the command."
msgstr ""

#: ../../en/utilities/shptree.txt:62
# ebc1d061701245358ceea1fb73688ff5
msgid "A file named 'us_states.qix' is created in the same location.  (note that you can use the shptreevis utility, described next, to view the actual quadtree quadrants that are used by MapServer in this qix file)"
msgstr ""

#: ../../en/utilities/shptree.txt:68
# 4f8baee2152c40a1805510afb3cda57c
msgid "Mapfile Notes"
msgstr ""

#: ../../en/utilities/shptree.txt:70
# 64aabb50193a4f9fa15ee3bdd13c0ae9
msgid "Shape data sets are native to MapServer, and therefore do not require the *.shp* extension in the DATA path of the LAYER.  In fact, in order for MapServer to use the *.qix* extension you MUST NOT specify the extension, for example:"
msgstr ""

#: ../../en/utilities/shptree.txt:90
# fe621816e9634176a470ed809a25847b
msgid "As of MapServer 5.2 the qix will be used even when the .shp extension is specified"
msgstr ""

#: ../../en/utilities/shptreetst.txt:8
# 24025eb5d45e4662835f7503ce79eb98
msgid "shptreetst"
msgstr ""

#: ../../en/utilities/shptreetst.txt:14
# d370c3fa0cf54e97a5d8b8390ebfde01
msgid "Executes a spatial query on an existing spatial index (.qix), that was created by the :ref:`shptree` utility.  This utility is useful to understand how a search of a Shape data set and its *qix* index works."
msgstr ""

#: ../../en/utilities/shptreetst.txt:57
# 4364a9c590554ac1b1fc7c28b1a938ab
msgid "The above output from the shptreetst command tells us that the existing *.qix* index is for a Shape data set that contains 48 shapes; indeed the Shape data set used in this example, *esp.shp*, contains 48 polygons of Spain.  The command also tells us that *qix* file has a quadtree depth of 4."
msgstr ""

#: ../../en/utilities/shptreetst.txt:63
# 85dd4a244ceb4041aae38c227ae853e3
msgid "Most importantly, the resulting shape IDs (or feature IDs) that were contained in the bounding box that we passed in our example were returned at the bottom of the output: \"8, 10, 36, 37, 38, 39, 42, 46\".  You can use a tool such as QGIS to view those feature IDs and check what shapes MapServer is querying when a user clicks within that bounding box."
msgstr ""

#: ../../en/utilities/shptreevis.txt:2
# 4d690a98c73c4272a7a08a9eefd660e8
msgid "pair: Utility; shptreevis"
msgstr ""

#: ../../en/utilities/shptreevis.txt:8
# 6750c4e20fa14570bec01f48ed0af6fc
msgid "shptreevis"
msgstr ""

#: ../../en/utilities/shptreevis.txt:14
# ee42d9454c234a2bb450a2c9423e90bf
msgid "This utility can be used to view the quadtree quadrants that are part of a .qix file (that was created with the shptree utility)."
msgstr ""

#: ../../en/utilities/shptreevis.txt:33
# 0902a92f66e344ec9a2e64ad67f721ef
msgid "A Shape data set named 'quad.shp' is created.  You can now view this Shape data set in a desktop GIS (such as `QGIS`_ for example) to see the quadtrees that were created with the shptree command, as shown below."
msgstr ""

#: ../../en/utilities/shptreevis.txt:38
# a5a3f26c64c245a1bbb9990b707da8ec
msgid "**Figure: shptreevis result displayed in QGIS**"
msgstr ""

#: ../../en/utilities/sortshp.txt:8
# 29321ad7ccdf492a82c919c82d575a20
msgid "sortshp"
msgstr ""

#: ../../en/utilities/sortshp.txt:11
# 56cc5194c3114859b1b88682400624ff
msgid "Sorts a Shape data set based on a single column in ascending or descending order.  Supports INTEGER, DOUBLE and STRING column types. Useful for prioritizing shapes for rendering and/or labeling."
msgstr ""

#: ../../en/utilities/sortshp.txt:15
# 3faf2fd3f8114f3b9f3f37fbc0037887
msgid "The idea here is that if you know that you need to display a certain attribute classed by a certain value, it will be faster for MapServer to access that value if it is at the beginning of the attribute file."
msgstr ""

#: ../../en/utilities/sortshp.txt:26
# 4647d0b4244f40b0a5eb51792434db02
msgid "This example uses a roads file ('roads_ugl') that has a field with road classes in integer format ('class1')."
msgstr ""

#: ../../en/utilities/sortshp.txt:34
# 90eab75475db4a65acc65d4958689c34
msgid "A new Shape data set named 'roads-sort.shp' is created with shapes sorted in ascending order, according to the values in the 'class1' field, as shown below."
msgstr ""

#: ../../en/utilities/sortshp.txt:38
# 55334760ccc5408d9913120cfcc58d5e
msgid "**Figure1: Attributes Before sortshp**"
msgstr ""

#: ../../en/utilities/sortshp.txt:42
# fd9a6ed86c3144ae8db031cca3975429
msgid "**Figure2: Attributes After sortshp**"
msgstr ""

#: ../../en/utilities/sym2img.txt:8
# 7cdbbd90a3d645bba2037e3d9d728eaf
msgid "sym2img"
msgstr ""

#: ../../en/utilities/sym2img.txt:13
# bacc500162d24a138fea2cde9a18a6b8
msgid "Creates a graphic dump of a symbol file. Output is either PNG or GIF depending on what version of the GD library used. (this utility is not currently included in pre-compiled packages, due to issues mentioned in `bug#506`_)"
msgstr ""

#: ../../en/utilities/tile4ms.txt:8
# 40093bd0d11c455e96843a011bdb4578
msgid "tile4ms"
msgstr ""

#: ../../en/utilities/tile4ms.txt:12
# 84343aa6a33f4d80921abdd7e7b6e88d
msgid "Creates a tile index Shape data set for use with MapServer's TILEINDEX feature.  The program creates a Shape data set of rectangles from extents of all the Shape data sets listed in [metafile] (one Shape data set name per line) and the associated DBF with the filename for each shape tile in a column called LOCATION as required by mapserv."
msgstr ""

#: ../../en/utilities/tile4ms.txt:20
# 37f64f9243c14ec491060cda9d0a787d
msgid "This utility creates a Shape data set containing the MBR (minimum bounding rectangle) of all shapes in the files provided, which can then be used in the LAYER object's TILEINDEX parameter of the mapfile. The new filed created with this command is used by MapServer to only load the files assocated with that extent (or tile)."
msgstr ""

#: ../../en/utilities/tile4ms.txt:42
# 01d69f7165ca4927a77b6e581dc8e828
msgid "Short Example"
msgstr ""

#: ../../en/utilities/tile4ms.txt:44
# d0ef7786440d4a35a3b79f98e2e617a3
msgid "Create tileindex.shp for all tiles under the /path/to/data directory:"
msgstr ""

#: ../../en/utilities/tile4ms.txt:60
# d1c21ff4d4a64891bfaf88e1c56fc13c
msgid "Long Example"
msgstr ""

#: ../../en/utilities/tile4ms.txt:62
# 837ec622b45c45ca994d60cfc6ff9734
msgid "This example uses TIGER Census data, where the data contains files divided up by county (in fact there are over 3200 counties, a very large dataset indeed).  In this example we will show how to display all lakes for the state of Minnesota.  (note that here we have already converted the TIGER data into Shape format, but you could keep the data in TIGER format and use the ogrtindex utility instead) The TIGER Census data for Minnesota is made up of 87 different counties, each containing its own lakes file ('wp.shp')."
msgstr ""

#: ../../en/utilities/tile4ms.txt:71
# 71c419a059634c7f9d4cc38e7960d044
msgid "We need to create the 'meta-file' for the tile4ms command.  This is a text file of the paths to all 'wp.shp' files for the MN state. To create this file we can use a few simple commands:"
msgstr ""

#: ../../en/utilities/tile4ms.txt:81
# d034bf10ffc54fd28781627e7542e746
msgid "UNIX: find -name *wp.shp -print > wp_list.txt"
msgstr ""

#: ../../en/utilities/tile4ms.txt:83
# f2ae8e22f43b4f69a9a51eecd658dd50
msgid "The newly created file might look like the following (after removing the full path):"
msgstr ""

#: ../../en/utilities/tile4ms.txt:100
# c0e9922c287a4a13969214ed151151bf
msgid "Execute the tile4ms command with the newly created meta-file to create the index file:"
msgstr ""

#: ../../en/utilities/tile4ms.txt:108
# 9c4f5516c65e4fad97052f0445e80884
msgid "A new file named 'index.shp' is created.  This is the index file with the MBRs of all 'wp.shp' files for the entire state, as shown in Figure1.  The attribute table of this file contains a field named 'LOCATION', that contains the path to each 'wp.shp file', as shown in Figure2."
msgstr ""

#: ../../en/utilities/tile4ms.txt:113
# b693cc59e88f404bacb168e8d8a97f39
msgid "**Figure 1: Index file created by tile4ms utility**"
msgstr ""

#: ../../en/utilities/tile4ms.txt:118
# d8718fe112014a05b3fcebe17b6ca80a
msgid "**Figure 2: Attributes of index file created by tile4ms utility**"
msgstr ""

#: ../../en/utilities/tile4ms.txt:122
# ea90c888cd504ab390c8d1cfcdd1bfd9
msgid "The final step is to use this in your mapfile."
msgstr ""

#: ../../en/utilities/tile4ms.txt:124
# 7efb321d077b47ce8ec92ec0d76b3e7f
msgid "LAYER object's TILEINDEX - must point to the location of the index file"
msgstr ""

#: ../../en/utilities/tile4ms.txt:126
# 7153475ef2d34f859b68b983a654185a
msgid "LAYER object's TILEITEM - specify the name of the field in the index file containing the paths (default is 'location')"
msgstr ""

#: ../../en/utilities/tile4ms.txt:128
# bd9f18620c14499c85562449601d89af
msgid "do not need to use the LAYER's DATA parameter"
msgstr ""

#: ../../en/utilities/tile4ms.txt:130
# 5c4f61e29d1641bfad1a6459ac227a87
msgid "For example:"
msgstr ""

#: ../../en/utilities/tile4ms.txt:148
# 87230be4804c4da1a621c6c5b81a5714
msgid "When you view the layer in a MapServer application, you will notice that when you are zoomed into a small area of the state only those lakes layers are loaded, which speeds up the application."
msgstr ""

