# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MapServer 6.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-06 19:08+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../en/optimization/debugging.txt:8
# 845b3e5110a54ffd9e2accd2e6b80d0a
msgid "Debugging MapServer"
msgstr ""

#: ../../../en/optimization/debugging.txt:10
# 580c11fc64ee45099d369bd1c6b34162
msgid "Jeff McKenna"
msgstr ""

#: ../../../en/optimization/debugging.txt:11
# bf9ed98222974e50b17003c81eb4dfaa
msgid "jmckenna at gatewaygeomatics.com"
msgstr ""

#: ../../../en/optimization/debugging.txt:12
# 22c09c185797465a961b14912458d2be
msgid "2013-07-02"
msgstr ""

#: ../../../en/optimization/debugging.txt:0
#: ../../../en/optimization/fastcgi.txt:0
#: ../../../en/optimization/mapfile.txt:0
#: ../../../en/optimization/raster.txt:0
#: ../../../en/optimization/tileindex.txt:0
#: ../../../en/optimization/vector.txt:0
# fb522000e3294f31b28c1935ee81ce94
# 0cfb971723c2471fbdc33d69537074c0
# ac7169101b5a4dc090b70c63af380b79
# 000a1357b98f447a8c873fdf95fd246c
# cd4a6224619c41beb79d1c9046c0cbd6
# f30e9091c94144a8bda532f7aa36d148
msgid "Table of Contents"
msgstr ""

#: ../../../en/optimization/debugging.txt:19
#: ../../../en/optimization/fastcgi.txt:24
#: ../../../en/optimization/mapfile.txt:21
#: ../../../en/optimization/tileindex.txt:20
# 58d0c50ac0fe45e8ae93ac126ed013e9
# bdb3a638fcd84ed88cd4292f1e94d71f
# 67d962a5a0b54f7eb365e9534d13c294
# 310511b3538f446f92ffaecd3ab7ad22
msgid "Introduction"
msgstr ""

#: ../../../en/optimization/debugging.txt:21
# ce32975e77c74fce8bae5da5e1910426
msgid "When developing an application for the Internet, you will inevitably across problems many problems in your environment.  The goal of this guide is to assist you with locating the problem with your MapServer application."
msgstr ""

#: ../../../en/optimization/debugging.txt:27
# ad22c43b5171419fbd208628d73c2be6
msgid "Links to Related Information"
msgstr ""

#: ../../../en/optimization/debugging.txt:29
# 45867119ab554b7aa3c6d56d44aad867
msgid ":ref:`RFC 28: Redesign of LOG/DEBUG output mechanisms <rfc28>`"
msgstr ""

#: ../../../en/optimization/debugging.txt:30
# 3257c8ffc393407eb7e1f5f1f93002ff
msgid ":ref:`MapServer Errors <errors>`"
msgstr ""

#: ../../../en/optimization/debugging.txt:33
# 31a95beaaf8f4ef0a48f2d86c801ad35
msgid "Steps to Enable MapServer Debugging"
msgstr ""

#: ../../../en/optimization/debugging.txt:35
# 6e98675d9350493cb2f677c94dfbb38e
msgid "Starting with MapServer 5.0, you are able to control the levels of debugging/logging information returned to you by MapServer, and also control the location of the output log file."
msgstr ""

#: ../../../en/optimization/debugging.txt:39
# f74924fc45564f8e8275a90f7ee4852d
msgid "In technical terms, there are msDebug() calls in various areas of the MapServer code that generate information that may be useful in tuning and troubleshooting applications."
msgstr ""

#: ../../../en/optimization/debugging.txt:47
# 54faaf045b264470a5545a5627e43ba6
msgid "Step 1: Set the MS_ERRORFILE Variable"
msgstr ""

#: ../../../en/optimization/debugging.txt:49
# 39a9e05fa2a3438a9e41a5bc76b18488
msgid "The **MS_ERRORFILE** variable is used to specify the output of debug messages from MapServer.  You can pass the following values to **MS_ERRORFILE**:"
msgstr ""

#: ../../../en/optimization/debugging.txt:63
# e53f57aa99db4074a59926a5d7c73ec9
msgid "**[filename]**"
msgstr ""

#: ../../../en/optimization/debugging.txt:54
# 29600bb181b74882b3e8048736166959
msgid "Full path and filename of a log file, to contain MapServer's debug messages.  Any file extension can be used, but *.log* or *.txt* is recommended.  The file will be created, if it does not already exist."
msgstr ""

#: ../../../en/optimization/debugging.txt:59
# 2dbb55e5d546446da94d30c661505577
msgid "Starting with MapServer 6.0, a filename with relative path can be passed via the CONFIG MS_ERRORFILE directive, in which case the filename is relative to the mapfile location. Note that setting MS_ERRORFILE via an environment variable always requires an absolute path since there would be no mapfile to make the path relative to."
msgstr ""

#: ../../../en/optimization/debugging.txt:71
# b6e91714a637422d827d189ca64d1285
msgid "**stderr**"
msgstr ""

#: ../../../en/optimization/debugging.txt:66
# 57c6f0e74bad4f32b7676d860874e851
msgid "Use this to send MapServer's debug messages to the Web server's log file (i.e. \"standard error\").  If you are using Apache, your debug messages will be placed in the Apache *error_log* file.  If you are using Microsoft IIS, your debug messages will be sent to *stdout* (i.e. the browser), so its use is discouraged. With IIS it is recommended to direct output to a file instead."
msgstr ""

#: ../../../en/optimization/debugging.txt:75
# 70e3219653c84e858f9400a2621a39b3
msgid "**stdout**"
msgstr ""

#: ../../../en/optimization/debugging.txt:74
# 45bb68c7e5fd480b8e44bbbb5fb98405
msgid "Use this to send MapServer's debug messages to the standard output (i.e. the browser), combined with the rest of MapServer's output."
msgstr ""

#: ../../../en/optimization/debugging.txt:81
# ecab044adf124da4aaf26a821b0b18ec
msgid "**windowsdebug**"
msgstr ""

#: ../../../en/optimization/debugging.txt:78
# 1e0193cbfbdf4e96814492037dfa6d9c
msgid "Use this to send MapServer's debug messages to the Windows OutputDebugString API, allowing the use of external programs like SysInternals debugview to display the debug output."
msgstr ""

#: ../../../en/optimization/debugging.txt:84
# 62852e6c70154bc9b2c88b67f77905ae
msgid "Through the Mapfile"
msgstr ""

#: ../../../en/optimization/debugging.txt:86
# af5a554e05004a039bb49176518076dd
msgid "The recommended way to set the **MS_ERRORFILE** variable is in your mapfile, within the :ref:`MAP` object, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:101
# 4bb6270fa769443fa9f465eeb9cf12b6
msgid "Through an Environment Variable"
msgstr ""

#: ../../../en/optimization/debugging.txt:103
# 901e6f0264104883bb1c4dff276d12b1
msgid "You can also set the **MS_ERRORFILE** variable as an environment variable on your system.  Apache users can set the environment variable in Apache's *httpd.conf* file, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:111
#: ../../../en/optimization/debugging.txt:243
# 3cf6885f8b1a494aa6e94bfdcdb259bc
# e0e9877e9f6e4eb696906cabbda2eaee
msgid "Windows users can alternatively set the environment variable through the Windows System Properties; but make sure to set a SYSTEM environment variable."
msgstr ""

#: ../../../en/optimization/debugging.txt:116
# a4e6c7c6df1d4c55bbc0539bbd79548b
msgid "If both the *MS_ERRORFILE* environment variable is set and a *CONFIG MS_ERRORFILE* is also set, then the CONFIG directive takes precedence."
msgstr ""

#: ../../../en/optimization/debugging.txt:124
# 7281b071d3ef42d1a0b9483d514a35a4
msgid "Step 2: Set the DEBUG Level"
msgstr ""

#: ../../../en/optimization/debugging.txt:126
# e8869e622db44d97a366f93bd1936e72
msgid "You can retrieve varying types of debug messages by setting the *DEBUG* parameter in the :ref:`mapfile`.  You can place the *DEBUG* parameter in any LAYER in the mapfile for layer-specific debug information, or instead, set it once in the MAP object to get general debug information. Use the value of the *DEBUG* parameter to set the type of information returned, as follows:"
msgstr ""

#: ../../../en/optimization/debugging.txt:134
# e2ab05dc68c842ebab3639f6b005ca8d
msgid "DEBUG Levels"
msgstr ""

#: ../../../en/optimization/debugging.txt:141
# 1fb9c20f1f70430ab770b08110445771
msgid "**Level 0**"
msgstr ""

#: ../../../en/optimization/debugging.txt:137
# 2eee240e04b7463fb7a053eaf8329618
msgid "Errors only (DEBUG OFF, or DEBUG 0)"
msgstr ""

#: ../../../en/optimization/debugging.txt:139
# b9a4aaff12364d04a227d3d62f89a2bd
msgid "In level 0, only msSetError() calls are logged to MS_ERORFILE. No msDebug() output at all.  This is the default and corresponds to the original behavior of MS_ERRORFILE in MapServer 4.x"
msgstr ""

#: ../../../en/optimization/debugging.txt:150
# ab83e86e3a994d609e7e1fee5d84e9bf
msgid "**Level 1**"
msgstr ""

#: ../../../en/optimization/debugging.txt:144
# a17aa23779224c959a12cb5bd5380ba8
msgid "Errors and Notices (DEBUG ON, or DEBUG 1)"
msgstr ""

#: ../../../en/optimization/debugging.txt:146
# 9d46cf87fbee40e5b0d9a804afe6c8c2
msgid "Level 1 includes all output from Level 0 plus msDebug() warnings about common pitfalls, failed assertions or non-fatal error situations (e.g. missing or invalid values for some parameters, missing shapefiles in tileindex, timeout error from remote WMS/WFS servers, etc.)"
msgstr ""

#: ../../../en/optimization/debugging.txt:157
# f22b45c3ef564d4ca7f379617251bafe
msgid "**Level 2**"
msgstr ""

#: ../../../en/optimization/debugging.txt:153
# db41089db18d4646ad2e048dcbe133e3
msgid "Map Tuning (DEBUG 2)"
msgstr ""

#: ../../../en/optimization/debugging.txt:155
# 626102a53f5144b3b82f6fe9882055ec
msgid "Level 2 includes all output from Level 1 plus notices and timing information useful for tuning mapfiles and applications.  *this is the recommended minimal debugging level*"
msgstr ""

#: ../../../en/optimization/debugging.txt:164
# 8cd639d7688146d3b4745d5b22c0e135
msgid "**Level 3**"
msgstr ""

#: ../../../en/optimization/debugging.txt:160
# 6b852ae27a894fccb2d9850273870d36
msgid "Verbose Debug (DEBUG 3)"
msgstr ""

#: ../../../en/optimization/debugging.txt:162
# efa6b2eb23ec4905be840b0a5d4ec20c
msgid "All of Level 2 plus some debug output useful in troubleshooting problems such as WMS connection URLs being called, database connection calls, etc."
msgstr ""

#: ../../../en/optimization/debugging.txt:169
# a3c79c0d96a14ee6835166370966671a
msgid "**Level 4**"
msgstr ""

#: ../../../en/optimization/debugging.txt:167
# cb209e87942c46b084bc354ccdc6b776
msgid "Very Verbose Debug (DEBUG 4)"
msgstr ""

#: ../../../en/optimization/debugging.txt:169
# 85236d17bc3e47958d9e74ee73a9f7c4
msgid "Level 3 plus even more details..."
msgstr ""

#: ../../../en/optimization/debugging.txt:176
# c679047205b640ca8f35749cf2f80a20
msgid "**Level 5**"
msgstr ""

#: ../../../en/optimization/debugging.txt:172
# 02b5490417a24504b71c36ee389bdf11
msgid "Very Very Verbose Debug (DEBUG 5)"
msgstr ""

#: ../../../en/optimization/debugging.txt:174
# 6e79ea412b35442488081856c33c47f4
msgid "Level 4 plus any msDebug() output that might be more useful to developers than to users."
msgstr ""

#: ../../../en/optimization/debugging.txt:179
# 12408bf8b90249cabce394ec86e5eba5
msgid "Mapfile Example: Map-Level Debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:181
# 28576f7ff2324350b7a64bedcb939881
msgid "The following example is the recommended method to set the *DEBUG* parameter for the map-level:"
msgstr ""

#: ../../../en/optimization/debugging.txt:200
# 4e25a50ea3654859a57983939407f480
msgid "Mapfile Example: Layer-Level Debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:202
# aa1c245b24c044fbb18147a4b164a3f5
msgid "The following example is the recommended method to set the *DEBUG* parameter for a layer:"
msgstr ""

#: ../../../en/optimization/debugging.txt:221
# d8e49cc6057f4907a2db69a03128381e
msgid "The MS_DEBUGLEVEL Environment Variable"
msgstr ""

#: ../../../en/optimization/debugging.txt:223
# 1609a4c8e81e4f7c98fe67d252029ef1
msgid "Instead of setting the *DEBUG* Debug level in each of your mapfiles, you can also be set the level globally by using the *MS_DEBUGLEVEL* environment variable."
msgstr ""

#: ../../../en/optimization/debugging.txt:227
# 18a1fb9ac17f4d9194116d4c303838e0
msgid "When set, this value is used as the default debug level value for all map and layer objects as they are loaded by the mapfile parser. This option also sets the debug level for any msDebug() call located outside of the context of a map or layer object, for instance for debug statements relating to initialization before a map is loaded. If a DEBUG value is also specified in the mapfile in some map or layer objects then the local value (in the mapfile) takes precedence over the value of the environment variable."
msgstr ""

#: ../../../en/optimization/debugging.txt:236
# 755fd127d6234fbc9ebdc6091989bdce
msgid "Apache users can set the environment variable in Apache's *httpd.conf* file, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:251
# f9137cbab25948fcb1708d58b3519eff
msgid "Step 3: Turn on CPL_DEBUG (optional)"
msgstr ""

#: ../../../en/optimization/debugging.txt:253
# 691c47ba29274fddbe549addde750701
msgid "MapServer relies on the `GDAL <http://www.gdal.org/>`__ library to access most data layers, so you may wish to turn on GDAL debugging, to hopefully get more information on how GDAL is accessing your data file.  This could be very helpful for problems with accessing raster files and PostGIS tables.  You can trigger this GDAL output by setting the **CPL_DEBUG** variable in your mapfile, within the :ref:`MAP` object, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:276
# 16b13083384545f28c8f57957e8cc08b
msgid "Step 4: Turn on PROJ_DEBUG (optional)"
msgstr ""

#: ../../../en/optimization/debugging.txt:278
# 68059e0bf4f448efa4955c0ae4d30d75
msgid "MapServer relies on the `PROJ.4 <http://trac.osgeo.org/proj/>`__ library to handle data projections, so you may wish to turn on PROJ debugging, to hopefully get more information back from the PROJ library.  You can trigger this PROJ output by setting the **PROJ_DEBUG** variable in your mapfile, within the :ref:`MAP` object, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:297
# eb6e98cf8c9d44ea810c3875fa650cc0
msgid "Step 5: Test your Mapfile"
msgstr ""

#: ../../../en/optimization/debugging.txt:299
# 48826f75ccd342d6abc5a4e182c88c49
msgid "Once you have set the *MS_ERRORFILE* and *DEBUG* level in your mapfile, you should now test your mapfile and read your generated log file."
msgstr ""

#: ../../../en/optimization/debugging.txt:307
# 75aa3263ae964f09a5f9e0ed66bb8821
msgid "Using shp2img"
msgstr ""

#: ../../../en/optimization/debugging.txt:309
# 9eb42f11462043619d4c156dd4d6b539
msgid "The recommended way to test your mapfile is to use the MapServer commandline utility :ref:`shp2img`, to verify that your mapfile creates a valid map image. :ref:`shp2img` should be included in your MapServer installation (`MS4W <http://www.maptools.org/ms4w>`__ users need to execute *setenv.bat* before using the utility)."
msgstr ""

#: ../../../en/optimization/debugging.txt:315
# e16892f390ef49c48d04c75d5db8e4a6
msgid "You can set the *DEBUG* level by passing the :ref:`shp2img` following parameters to your commandline call:"
msgstr ""

#: ../../../en/optimization/debugging.txt:319
# 52e7c202e5434a139f0666145a2a1c00
msgid "If you have already set *MS_ERRORFILE* in your mapfile, you must comment this out in order to use these :ref:`shp2img` options"
msgstr ""

#: ../../../en/optimization/debugging.txt:323
# 15b9d42b1e9341da838922d120e3ba2f
msgid "When using :ref:`shp2img` to debug, your layer's STATUS should be set to ON or DEFAULT.  If the layer's STATUS is set to OFF, you must additionally pass the layer name to :ref:`shp2img` by using the \"``-l layername``\" syntax"
msgstr ""

#: ../../../en/optimization/debugging.txt:329
# bf47165058b74e74b5b30fd94862930d
msgid "-all_debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:331
# 8e34c63f70cc449693bc969eac36cff6
msgid "Use this setting to set the debug level for the MAP object and all layers. *this is the recommended switch to use*"
msgstr ""

#: ../../../en/optimization/debugging.txt:360
# 1923b93ed5624312bc6d773af76483e4
msgid "-map_debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:362
# 53219d30b7c748babf784a70c0e99cab
msgid "Use this setting to set the debug level for the MAP object only."
msgstr ""

#: ../../../en/optimization/debugging.txt:380
# d0940b7bd79f48898b2fd19067bb6e2b
msgid "-layer_debug"
msgstr ""

#: ../../../en/optimization/debugging.txt:382
# 8c659490438e4ab6ae0a669d7d9aeb01
msgid "Use this setting to set the debug level for one layer object only."
msgstr ""

#: ../../../en/optimization/debugging.txt:396
# cb3218424391449e9d393bece3cc9e25
msgid "Set CPL_DEBUG"
msgstr ""

#: ../../../en/optimization/debugging.txt:398
# 9b216abe7e4f4860adc4b39304cf7b76
msgid "At the commandline execute the following:"
msgstr ""

#: ../../../en/optimization/debugging.txt:418
# 50ccd33bf57e4328a8ffbe25bd3e4bba
msgid "Reading Errors Returned by shp2img"
msgstr ""

#: ../../../en/optimization/debugging.txt:420
# 1f5698b5095142328bd215ec2848186f
msgid "If there is a problem with your mapfile, :ref:`shp2img` should output the line number in your mapfile that is causing the trouble.  The following tells us that there is a problem on line 85 of my mapfile:"
msgstr ""

#: ../../../en/optimization/debugging.txt:428
# 24b94ca3123a4da1931943698bd8f73c
msgid "If you are using mapfile :ref:`INCLUDEs <include>`, it may be tricky to track down this line number, but most of the time the line number is useful."
msgstr ""

#: ../../../en/optimization/debugging.txt:433
# a5978dff4f8143f8801c7a64c48b100e
msgid "Using mapserv CGI"
msgstr ""

#: ../../../en/optimization/debugging.txt:435
# b0cafb943ec04763bfa4bf32b2afdb00
msgid "Another handy way to test your mapfile is to call the mapserv CGI executable at the :ref:`commandline <mapserv>`, such as the following:"
msgstr ""

#: ../../../en/optimization/debugging.txt:446
#: ../../../en/optimization/debugging.txt:442
# 8244ac1389624b959d41ef74f9758cc7
# 60a7dbe1cef448cdbcfb020f66e23adc
msgid "ON_MISSING_DATA"
msgstr ""

#: ../../../en/optimization/debugging.txt:448
# 17e6ea76239f4883ad55cacf0f5ab731
msgid "If you are using tile indexes to access your data, you should also be aware of the configuration settings added in MapServer 5.4 that allow you to tell MapServer how to handle missing data in tile indexes. Please see the *CONFIG* parameter's *ON_MISSING_DATA* setting in the :ref:`map` object for more information."
msgstr ""

#: ../../../en/optimization/debugging.txt:455
# 1de7fc024816461e944001b9021a30ff
msgid "You can check the attributes in the tileindex by executing \"*ogrinfo -al*\" on your data file"
msgstr ""

#: ../../../en/optimization/debugging.txt:459
# c1f9260310554c6dbfe691d828ebd3fd
msgid "Step 6: Check your Web Server Logs"
msgstr ""

#: ../../../en/optimization/debugging.txt:461
# 8fd6c2fe0f4a4fb6b5884ffca3a84f0e
msgid "Once you have verified that there are no problems with you mapfile, next you should check your Web server log files, for any related information that may help you narrow down your problem."
msgstr ""

#: ../../../en/optimization/debugging.txt:466
# 99a9003f48db446a86ad1662ea44d3fa
msgid "Apache"
msgstr ""

#: ../../../en/optimization/debugging.txt:468
# fb2d6c95258a4527b0245d65b9339b46
msgid "Unix users will usually find Apache's *error_log* file in a path similar to:"
msgstr ""

#: ../../../en/optimization/debugging.txt:475
# e081ac1b1c71462fa402cbca89127689
msgid "Windows users will usually find Apache's log files in a path similar to:"
msgstr ""

#: ../../../en/optimization/debugging.txt:481
# 6be2f2a43ef94050abb20a2485d297ac
msgid "MapServer for Windows (`MS4W <http://www.maptools.org/ms4w>`__) users will find Apache's log files at:"
msgstr ""

#: ../../../en/optimization/debugging.txt:489
# 35f2ce4ad3f34f8bb204fa0449f000e9
msgid "Microsoft IIS"
msgstr ""

#: ../../../en/optimization/debugging.txt:491
# c7d91c39d72c46dfbae9c133ab9c063b
msgid "IIS log files can be located by:"
msgstr ""

#: ../../../en/optimization/debugging.txt:493
#: ../../../en/optimization/debugging.txt:511
# 60810f30baa0474d9b7e03a8bf3bec0c
# 5d52675103f946bc8a63da5f3121e5e2
msgid "Go to Start -> Control Panel -> Administrative Tools"
msgstr ""

#: ../../../en/optimization/debugging.txt:494
# 486b952bb2b64e84b9aeb2b7a14eb715
msgid "Open the Internet Information Services (IIS) Manager."
msgstr ""

#: ../../../en/optimization/debugging.txt:495
# 12f701bbcd38408bbb4278455cb41237
msgid "Find your Web site under the tree on the left."
msgstr ""

#: ../../../en/optimization/debugging.txt:496
# b205d7ab055a4a848d9abc6bdd2c3c51
msgid "Right-click on it and choose Properties."
msgstr ""

#: ../../../en/optimization/debugging.txt:497
# 2af3881266b843d582faf8257d24a611
msgid "On the Web site tab, you will see an option near the bottom that says \"Active Log Format.\" Click on the Properties button."
msgstr ""

#: ../../../en/optimization/debugging.txt:502
# b616c775acc54598a66ece9b9e21ed70
msgid "At the bottom of the General Properties tab, you will see a box that contains the log file directory and the log file name. The full log path is comprised of the log file directory plus the first part of the log file name, for example::"
msgstr ""

#: ../../../en/optimization/debugging.txt:509
# ffb3f407bdc14dbab3b8bd417457ce2a
msgid "You may also want to check the Windows Event Viewer logs, which is located at:"
msgstr ""

#: ../../../en/optimization/debugging.txt:512
# 25b0af5a5c7844ef8df5b5ec16654bfd
msgid "Computer Management"
msgstr ""

#: ../../../en/optimization/debugging.txt:513
# 0a6c24161d5443d49a49d4e5ca6906a1
msgid "Event Viewer"
msgstr ""

#: ../../../en/optimization/debugging.txt:516
# f3ace7f6199a4adb8aac95e139619d16
msgid "As mentioned previously, in IIS the MapServer *stderr* debug output is returned to the client instead of routed to the Web Server logs, so be sure to log the output to a file, using:"
msgstr ""

#: ../../../en/optimization/debugging.txt:525
# 842a8c47fbcc4c529dca34de80907b97
msgid "CGI Error - The specified CGI application misbehaved by not returning a complete set of HTTP headers"
msgstr ""

#: ../../../en/optimization/debugging.txt:527
# e6ebbe94cce846f98767b38713500de1
msgid "This error is often caused by missing DLL files.  You should try to execute \"*mapserv -v* at the commandline, to make sure that MapServer loads properly."
msgstr ""

#: ../../../en/optimization/debugging.txt:533
# 89686552069044bbbcffa79cce601227
msgid "Step 7: Verify your Application Settings"
msgstr ""

#: ../../../en/optimization/debugging.txt:535
# 335e7e685c6c4b9a911b6c2cdba957ec
msgid "If you have verified that MapServer creates a valid map image through :ref:`shp2img`, you've checked your MapServer log files, and there are no problems noted in your Web server logs, then you should focus your attention on possible application configuration problems. \"Application\" here means how you are displaying your map images on the Web page, such as with `OpenLayers <http://www.openlayers.org>`__."
msgstr ""

#: ../../../en/optimization/debugging.txt:546
# c02d44da5e9645f4ba5937b8edbbd76f
msgid "PHP MapScript"
msgstr ""

#: ../../../en/optimization/debugging.txt:548
# 7fa17a420b994095a041a54d820de515
msgid "If you are using PHP MapScript in your application, here are some important notes for debugging:"
msgstr ""

#: ../../../en/optimization/debugging.txt:551
# 3f81c083b8a649598d15786342a25822
msgid "1. Make sure your *php.ini* file is configured to show all errors, by setting:"
msgstr ""

#: ../../../en/optimization/debugging.txt:559
# 8a1ac0b9cda84077835c2355cb393cd9
msgid "To enable debugging in PHP MapScript, if you are using MapServer 5.6.0 or more recent, make sure to define *ZEND_DEBUG* in the PHP source."
msgstr ""

#: ../../../en/optimization/debugging.txt:563
# cc639cdd91214cd3aaeb079e09b03616
msgid "If you are using MapServer < 5.6.0, then:"
msgstr ""

#: ../../../en/optimization/debugging.txt:565
# 6b7137ea46e64deebedd33717256ce99
msgid "open the file */mapscript/php3/php_mapscript.c*"
msgstr ""

#: ../../../en/optimization/debugging.txt:567
# 7af118380b20434f9a5f616c9caa33f4
msgid "change the following:"
msgstr ""

#: ../../../en/optimization/debugging.txt:578
# df57a5c9926549aabad40d0363091d9b
msgid "Debugging MapServer using Compiler Debugging Tools"
msgstr ""

#: ../../../en/optimization/debugging.txt:584
# 23e38aaeb2a4419da78270469a05e1bc
msgid "Running MapServer in GDB (Linux/Unix)"
msgstr ""

#: ../../../en/optimization/debugging.txt:589
# 90a1f446d8704b5c8e9fbdaaeff0e9d0
msgid "Building with Symbolic Debug Info"
msgstr ""

#: ../../../en/optimization/debugging.txt:591
# 86d2ad2aa5a94c93b1c3343a64167cd5
msgid "It is not strictly necessary to build MapServer with debugging enabled in order to use `GDB <http://www.gnu.org/software/gdb/>`__ on linux, but it does ensure that more meaningful information is reported within GDB.  To enable full symbolic information use the *--enable-debug* configure switch.  Note that use of this switch disables optimization and so it should not normally be used for production builds where performance is important."
msgstr ""

#: ../../../en/optimization/debugging.txt:606
# 27181e4d7a9f4d6db625301da7596d70
msgid "Running in the Debugger"
msgstr ""

#: ../../../en/optimization/debugging.txt:608
# 4f9b8d47efc54099931c6798c2bc1049
msgid "To run either mapserv or shp2img, give the name of the executable as an argument to the \"gdb\" command.  If it is not in the path, you will need to provide the full path to the executable."
msgstr ""

#: ../../../en/optimization/debugging.txt:627
# 9dce271df3a548b19ff6d2064987a24d
msgid "Once you are at the \"(gdb)\" prompt you can use the run command with the arguments you would normally have passed to the mapserv or shp2img executable."
msgstr ""

#: ../../../en/optimization/debugging.txt:645
# 48a4d68d7b344fdeac938c98b08c0bf0
msgid "If the program is crashing, you will generally get a report like the above indicating the function the crash occurred in, and some minimal information on why.  It is often useful to request a traceback to see what functions led to the function that crashed.  For this use the \"where\" command."
msgstr ""

#: ../../../en/optimization/debugging.txt:674
# 856113c57c1d418fac4459f8c028b2c6
msgid "It may also be helpful to examine variables used in the line where the crash occured.  Use the print command for this."
msgstr ""

#: ../../../en/optimization/debugging.txt:682
# 42c51638c36b4942ae9c1382cce9d93c
msgid "In this case we see that the program crashed because poOpenInfo was NULL (zero).  Including a traceback like the above in bug report can help the developers narrow down a problem more quickly, especially if it is one that is difficult for the developers to reproduce themselves."
msgstr ""

#: ../../../en/optimization/debugging.txt:689
# e6f16faaa190426e9ce0be2bd7110226
msgid "Debugging Older Versions of MapServer (before 5.0)"
msgstr ""

#: ../../../en/optimization/debugging.txt:691
# 7d813faf18b142d29a290628bd57cb14
msgid "Make sure that MapServer is compiled in debug mode (on unix this is enabled through *./configure --enable-debug*)."
msgstr ""

#: ../../../en/optimization/debugging.txt:694
# 171fca2c6670460582f2a8d4bde10699
msgid "You can verify that your build was compiled in debug mode, by executing the following at the commandline (look for \"DEBUG=MSDEBUG\"):"
msgstr ""

#: ../../../en/optimization/debugging.txt:708
# c95f435a88cb4a99b573cf64ba2626ab
msgid "Set the *MS_ERRORFILE* variable is in your mapfile, within the :ref:`MAP` object, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:722
# b2070186ddd34ee5aab650f01bc56f97
msgid "If you don't use the *MS_ERRORFILE* variable, you can use the LOG parameter in your :ref:`WEB` object of the mapfile, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:738
# b082db16557c4063a07357ac0e3f3a9c
msgid "Specify *DEBUG ON* in your MAP object, or in your LAYER objects, such as:"
msgstr ""

#: ../../../en/optimization/debugging.txt:755
# cf84a037931746ac80fa296fc86f9ca8
msgid "Note that only errors will be written to the log file; all DEBUG output goes to stderr, in the case of Apache that is Apache's *error_log* file. If you are using Microsoft IIS, debug output is routed to *stdout* (i.e. the browser), so be sure to remove *DEBUG ON* statements if using IIS on a production server."
msgstr ""

#: ../../../en/optimization/debugging.txt:761
# 37572dd7577041deb35e4a1e2c37df63
msgid "."
msgstr ""

#: ../../../en/optimization/debugging.txt:1
#: ../../../en/optimization/debugging.txt:43
#: ../../../en/optimization/debugging.txt:120
#: ../../../en/optimization/debugging.txt:196
#: ../../../en/optimization/debugging.txt:217
#: ../../../en/optimization/debugging.txt:247
#: ../../../en/optimization/debugging.txt:272
#: ../../../en/optimization/debugging.txt:303
#: ../../../en/optimization/debugging.txt:442
#: ../../../en/optimization/debugging.txt:542
#: ../../../en/optimization/debugging.txt:580
# 32c6e2a7c59645b2ac3e9f457b41b7c3
# 5f04a76f07544d6dbd107af506aa877d
# 499286e255024b03ad8f90773decfc84
# 023516e42bb6480396769a85ffaed3fa
# 94e66092133342ca9b34fd912f3f848c
# da3b50dab03a4222990dd7d59ba258ea
# ee91c044481e495a931e25182a4f3e79
# 670c93a60f024bd18d66b553ddf2be4c
# 60a7dbe1cef448cdbcfb020f66e23adc
# 4d97355d60c84f829d722f28d91dde21
# 9a310b53ec53406e92f512af08b2ff19
msgid "Debugging"
msgstr ""

#: ../../../en/optimization/debugging.txt:43
# 5f04a76f07544d6dbd107af506aa877d
msgid "MS_ERRORFILE"
msgstr ""

#: ../../../en/optimization/debugging.txt:120
# 499286e255024b03ad8f90773decfc84
msgid "Debug levels"
msgstr ""

#: ../../../en/optimization/debugging.txt:196
#: ../../../en/optimization/debugging.txt:217
# 023516e42bb6480396769a85ffaed3fa
# 94e66092133342ca9b34fd912f3f848c
msgid "MS_DEBUGLEVEL"
msgstr ""

#: ../../../en/optimization/debugging.txt:247
# da3b50dab03a4222990dd7d59ba258ea
msgid "CPL_DEBUG"
msgstr ""

#: ../../../en/optimization/debugging.txt:272
# ee91c044481e495a931e25182a4f3e79
msgid "PROJ_DEBUG"
msgstr ""

#: ../../../en/optimization/debugging.txt:303
# 670c93a60f024bd18d66b553ddf2be4c
msgid "shp2img"
msgstr ""

#: ../../../en/optimization/debugging.txt:542
# 4d97355d60c84f829d722f28d91dde21
msgid "PHP Mapscript"
msgstr ""

#: ../../../en/optimization/debugging.txt:580
# 9a310b53ec53406e92f512af08b2ff19
msgid "GDB"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:8
#: ../../../en/optimization/fastcgi.txt:1
# b7b9009a7f4f4f5fb35d117a90359b11
# 10459f15a43344749b4361e25958320f
msgid "FastCGI"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:10
# 0cd7544b69794b2da8bd68ddda2e4b11
msgid "Frank Warmerdam"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:11
# 039a643e1e7e467e8726c556289f5386
msgid "warmerdam at pobox.com"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:12
# ca5b839cf7de401fa0f922d0995dd647
msgid "Howard Butler"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:13
# dd4ce1c1dae84280a74d4af5ab4e99df
msgid "hobu.inc at gmail.com"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:14
#: ../../../en/optimization/mapfile.txt:12
#: ../../../en/optimization/raster.txt:11
#: ../../../en/optimization/tileindex.txt:11
#: ../../../en/optimization/vector.txt:11
# 6ec2f688f4fa4d6ab41d60d79a29cd34
# ab4120478ea847ffb371622832f8cbe8
# 73021e1aab49406bae95673c81b46235
# 88dccf4c47f3416a9aca533165c66529
# 38b5bfce74714360868da8524f722b94
msgid "$Revision$"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:15
#: ../../../en/optimization/mapfile.txt:13
#: ../../../en/optimization/raster.txt:12
#: ../../../en/optimization/tileindex.txt:12
#: ../../../en/optimization/vector.txt:12
# dc07bd5b4b824d1e81dff2677b716794
# 368a3df365a94af6911fa6eed70abe1e
# 82af64327fd4423a84ce073eb47382f7
# 6917ce9ac8184ca1ad119ac48bc4e4f8
# e4f565012fa84c43ac2cd9309e4abb29
msgid "$Date$"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:16
# e61f71769b294274b0142dc863e56d04
msgid "2008/07/15"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:26
# 67cc861b7d184ee0bbffa4fd39953e55
msgid "FastCGI is a protocol for keeping cgi-bin style web applications running as a daemon to take advantage of preserving memory caches, and amortizing other high startup costs (like heavy database connections) over many requests."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:32
# 999905bb7c75496d824a01d6b9f5de27
msgid "Obtaining the necessary software"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:34
# 5bcb0a612e0c4b9db974f4639fc0a59b
msgid "There are three pieces to the MapServer FastCGI puzzle.  First, you need the actual FastCGI library.  This can be downloaded from `http://www.fastcgi.com/ <http://www.fastcgi.com/>`__.  This library does the usual *configure, make, make install* dance.  One added complication is that it installs by default in /usr/local, and you might give the *configure* command a --prefix=/usr to put it in a location that is already visible to ldconfig."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:42
# 7b95a6b7c525415b8cc0041638fdcdc2
msgid "Assuming you are running `Apache <http://httpd.apache.org>`__, the next piece you need is the fastcgi module. There are two fastcgi implementations for apache:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:46
# 1ff6d1a44c104c63aa5bea2bf04203b2
msgid "*mod_fcgid*: mod_fcgid is the newer and recommended way to run fastcgi programs under recent apache versions. It can be downloaded from the `Apache fcgid homepage <http://httpd.apache.org/mod_fcgid/>`__"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:49
# 5400bf2ab6304608a169854e459bb903
msgid "**deprecated** *mod_fcgi*:  Mod_fcgi depends on the version of Apache you are running, so make sure to download the correct fork (Apache 1.3 vs. Apache 2)."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:53
# 0e652bff779345b09defcde254c38f29
msgid "The third and final piece is to compile MapServer with FastCGI support. This is pretty straightforward, and all you need to do is tell *configure* where the FastCGI library is installed.  If you changed the prefix variable as described above, this would be:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:62
# a6600300d45a4f1e819ab2d22b4ab5f5
msgid "With those pieces in place, the MapServer CGI (mapserv) should now be FastCGI-enabled.  You can verify this by testing it on with the command line:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:76
# c72add922d614cb886ad147d501c84ef
msgid "mod_fcgid Configuration"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:78
#: ../../../en/optimization/fastcgi.txt:107
# b6b339d968d542149ac8dc438bf6f495
# 0b58eb27a55743be8b2f88b225b6dd0c
msgid "Modify http.conf to load the FastCGI module."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:84
#: ../../../en/optimization/fastcgi.txt:113
# 17af72eed0cb409dac0c4da4eb18175b
# 3721e906c8164075afa2bce71179b288
msgid "Add an Apache handler for FastCGI applications."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:90
#: ../../../en/optimization/fastcgi.txt:119
# 0e435bdb404842319ce9abe5f075a5b8
# 186ea425a82c4c27b97babf4d4b23e87
msgid "Set FastCGI processing information"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:102
# e9140b667c1c4e41bcea169357bfef47
msgid "Deprecated mod_fcgi Configuration"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:104
# acbeca1486dd48dfbd5d1f166f6c8344
msgid "This section is left for reference. The recommended way to run fastcgi programs under apache is to use mod_fcgid, as detailed above."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:130
# 5a268f1f60dd4de38ac788805237db3d
msgid "Common mod_fcgid/mod_fcgi Configuration"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:132
# 26e5c613dda44b27a40bfacf09173647
msgid "Install a copy of the mapserv executable (originally **mapserv** or **mapserv.exe**) into the cgi-bin directory with the extension **.fcgi** (ie. **mapserv.fcgi**).  Use this executable when you want to utilize fastcgi support."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:137
# 6252e84d210b4244a898e4367903c086
msgid "For some platforms, the MapServer  link would then have to changed from:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:144
#: ../../../en/optimization/fastcgi.txt:157
# 84c36bbe62a24819934adef681106c7b
# ded71559d7f04d9fa2b1850ea42af009
msgid "To:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:150
# 7cf4572662aa4eaa876ca01ced543b1b
msgid "For other platforms, the MapServer  link would then have to changed from:"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:164
# 91da32a5dd1f4b41aed016fbf6957bdf
msgid "In your mapfile, set a PROCESSING directive to tell FastCGI to cache the connections and layer information on all layers for which connection caching is desired - ie. all slow layers."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:175
# 9d8797d1271845c487f5aaf88663c15d
msgid "Common Problems"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:177
# bfd600084e8444c4a2269d57e6b98c17
msgid "File permissions"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:178
# eb96c4d7d7c044f0a83bde6b9f70bc1d
msgid "Fedora Core 3 doesn't allow FastCGI to write to the process logs (when you use RedHat's Apache 2 rather than your own).  This is described `here <http://www.fastcgi.com/archives/fastcgi-developers/2005-March/003638.html>`__."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:182
# 4d754cb17fc94c2ebb485683dac01dba
msgid "Also, FastCGI needs to write its socket information somewhere.  This can be directed with the *FastCgiIpcDir* directive."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:187
# 16cb5e648f884761aef5ff554605788c
msgid "FastCGI on Win32"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:190
# 3271bc8d965446c584113d6ba7180ea5
msgid "MS4W Users"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:192
# 3453d86f6c1c47a7bd207f6428051ef4
msgid "`MS4W (MapServer for Windows)`_ >= version 2.2.2 contains MapServer compiled with FastCGI support. MS4W version >= 2.2.8 also contains the required Apache module (mod_fcgid), and users must follow the `README instructions`_ to setup FastCGI with their application."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:202
# dcc6ac36e14e43b0ae760a6e4bc3616d
msgid "Building fcgi-2.4.0"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:204
# 7bf1506867b1473ba08b0e8fe5a5a5de
msgid "I used libfcgi-2.4.0 for use with Apache2 from http://www.fastcgi.com."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:207
# 89383248e74e4c838ab8101b077e7edd
msgid "Binary IO Patch"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:209
# 4e937d5ace584777932a94824b1f3222
msgid "It is critical that stdio be in binary mode when PNG and other binary images are written to it. To accomplish this for stdio handled through the FastCGI library, I had to do the following hack to libfcgi/fcgi_stdio.c within the fcgi-2.4.0 distribution."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:214
# 12e96608b92243e9aadf550652073c23
msgid "In FCGI_Accept() made he following change"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:235
# 1ef5c8758b0342b0bf50262b4d42adbc
msgid "Also, add the following just before the FCGI_Accept() function"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:244
# e6eb5fd74d55416d923738d4d376d14c
msgid "I'm sure there is a better way of accomplishing this. If you know how, please let me know!"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:248
# b7ace5f4f86e4ab69c2c03dfb6c7f286
msgid "Building libfcgi"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:250
# 575be9bf2e2b4ed088350e9dea1924a3
msgid "The makefile.nt should be fine. Just ensure you have run VCVARS32.BAT (as is needed for building MapServer) and then issue the command::"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:255
# 7c37d9566e534eebb72ab425fe2019e2
msgid "Then the .lib and .dll will be in libfcgi/Debug?. Make sure you copy the DLL somewhere appropriate (such as your cgi-bin directory)."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:259
# c195703e6972453aaaf299b95fd1fa64
msgid "Other Issues"
msgstr ""

#: ../../../en/optimization/fastcgi.txt:261
# c147322e79e44f69b425f5c4ae8b9c4a
msgid "1) FastCGI's receive a very limited environment on win32, seemingly even more restricted than normal cgi's started by apache. Make sure that all DLLs required are either in the fastcgi directory or in windows\\system32. Any missing DLLs will result in very cryptic errors in the error_log, including stuff about Overlapping read requests failing or something like that."
msgstr ""

#: ../../../en/optimization/fastcgi.txt:267
# a273777124c345caa2dc15df9ba0f050
msgid "2) Make sure you use a libfcgi.dll built against the same runtime library as your mapserv.exe (and possibly libmap_fcgi.dll) or you will suffer a world of pain! Different runtime libraries have different \"environ\" variables (as well as their own stdio and heaps). You can check that everything is using MSVCRT.DLL (or all using MSVCRTD.DLL) using the MS SDK Dependency Walker."
msgstr ""

#: ../../../en/optimization/index.txt:8
#: ../../../en/optimization/index.txt:1
#: ../../../en/optimization/mapfile.txt:29
#: ../../../en/optimization/mapfile.txt:72
#: ../../../en/optimization/mapfile.txt:148
#: ../../../en/optimization/mapfile.txt:162
#: ../../../en/optimization/raster.txt:1
#: ../../../en/optimization/raster.txt:32
#: ../../../en/optimization/raster.txt:55
#: ../../../en/optimization/tileindex.txt:1
#: ../../../en/optimization/tileindex.txt:58
#: ../../../en/optimization/vector.txt:1
#: ../../../en/optimization/vector.txt:32
#: ../../../en/optimization/vector.txt:54
#: ../../../en/optimization/vector.txt:84
# 4701225deea545b58a380e0397a0c7f4
# 3ff3af83a0f94606bc5deb7088af58f3
# 7554f49b5c8f4f8f87bf418deebd4a30
# 3f5496b6f2944939aa317dc1a3a30781
# 2d999bb31423489d85f4902bbbc664f6
# c6e72f4880d74345b5e8c7c4ae14c3b1
# f6f3e5cd9bb2437ab3f3dd15e2d8b2df
# ab281f9212c84103a78ce0029c5a95d5
# 26bb7e02163c4b8297d2229ad294f983
# 2382c4e8b6c6451e8c3c81e7efc57992
# aa57eee03abf485cbcd1779c819471b3
# 0ae726ff601445cda8de72ee44256b0d
# 393f654b051c449b904711bf2e49b243
# 87ef9a133ab441b2a20228166a13780a
# 92208da5c3d3419c9ff4536a986d83f4
msgid "Optimization"
msgstr ""

#: ../../../en/optimization/mapfile.txt:8
# 52d509a42528492c98da440021654f4f
msgid "Mapfile"
msgstr ""

#: ../../../en/optimization/mapfile.txt:10
# 36717e3ec1d84e85a0644c42cd9160f3
msgid "David Fawcett"
msgstr ""

#: ../../../en/optimization/mapfile.txt:11
# d4e8549bb8244186b5a00ff8dbdfc794
msgid "david.fawcett at gmail.com"
msgstr ""

#: ../../../en/optimization/mapfile.txt:14
# 4daa98fecbee4efd974a88eabb85a324
msgid "2007/08/01"
msgstr ""

#: ../../../en/optimization/mapfile.txt:23
# 5c678e4098f84579b952cece9b21854f
msgid "The contents of a Map File are used by MapServer for configuration, data access, projection, and more. Because the Map File is parsed every time a map image is requested, it is important to think about what you include in the file in order to optimize performance. The optimal Map File is one that doesn't include or reference anything that isn't needed."
msgstr ""

#: ../../../en/optimization/mapfile.txt:33
# da8d5b1158d946c3bc249e10104e4810
msgid "1. Projections"
msgstr ""

#: ../../../en/optimization/mapfile.txt:35
# b1f78023dfaf4498819431c5204867bd
msgid "There are two ways to define projections in a Map File. You can either use inline projection parameters or specify an EPSG code for that projection. If you use the :term:`EPSG` code method, :term:`Proj.4` looks up the projection parameters in the Proj4 database using the EPSG code as an ID. This database lookup takes significantly more resources than when the projection parameters are defined inline. This lookup takes place for each projection definition using EPSG codes in a Map File."
msgstr ""

#: ../../../en/optimization/mapfile.txt:43
# ef7a4b8f1d6643c9bfd37df0cb27fc09
msgid "**Projection defined using inline projection parameters**"
msgstr ""

#: ../../../en/optimization/mapfile.txt:57
# aba328d28f7c451989bcd5dd3d1d60bd
msgid "**Projection defined using EPSG Code**"
msgstr ""

#: ../../../en/optimization/mapfile.txt:65
#: ../../../en/optimization/mapfile.txt:82
#: ../../../en/optimization/mapfile.txt:157
#: ../../../en/optimization/mapfile.txt:173
# 8ebd671bf06c48d89c789c8676ac50ce
# 446442534c3b4a8ca4edc7c63d51782d
# 3773146be7e249af99e5ce85ce6d446b
# ab168ce96683475781347049b49b39f3
msgid "**Optimization Suggestions**"
msgstr ""

#: ../../../en/optimization/mapfile.txt:67
# 8150a32716ce4ecc9cc04f29dd36f452
msgid "Use inline projection parameter definitions in place of EPSG codes."
msgstr ""

#: ../../../en/optimization/mapfile.txt:69
# 9180ad8844a84c1d9fa8d7e515278057
msgid "If you want to use EPSG codes, remove all unneeded projection definition records from the Proj.4 :term:`EPSG` database."
msgstr ""

#: ../../../en/optimization/mapfile.txt:76
# 26d4513115194197a30b0e46962dc6fb
msgid "2. Layers"
msgstr ""

#: ../../../en/optimization/mapfile.txt:78
# fdc16ac5ebea4550a6c9e67f38a31f3a
msgid "For every layer in a Map File that has a status of ON or DEFAULT, MapServer will load that layer and prepare it for display, even if that layer never gets displayed."
msgstr ""

#: ../../../en/optimization/mapfile.txt:84
# 34d2c405020040fbbbb1f564a8d5167e
msgid "Build lean Map Files, only include layers that you plan to use."
msgstr ""

#: ../../../en/optimization/mapfile.txt:86
# 6c77d08a0113466ca4e092e415800857
msgid "Turn off unnecessary layers; the more layers MapServer is displaying, the more time it takes. Have your opening map view show only the minimum necessary to orient the user, and allow them to turn on additional layers as needed. This is particularly true of remote WMS or very large rasters."
msgstr ""

#: ../../../en/optimization/mapfile.txt:91
# 57f821a61a834d5280b5204e4460dd99
msgid "Related to turning off layers, is turning them on but using MINSCALEDENOM and MAXSCALEDENOM to determine at what zoomlevels the layer is available. If a map's display is outside of the layer's MINSCALEDENOM and MAXSCALEDENOM range, then MapServer can skip processing that layer. It also makes for a really cool effect, that the national boundaries magically change to state boundaries."
msgstr ""

#: ../../../en/optimization/mapfile.txt:98
# 9b827ad7da5943f68c0122ff00c02369
msgid "If you have a complex application, consider using multiple simple and specific Map Files in place of one large 'do everything' Map File."
msgstr ""

#: ../../../en/optimization/mapfile.txt:101
# 6a9ea11d89f44b43a92d80a4de1c7462
msgid "In a similar vein, each class also supports MINSCALEDENOM and MAXSCALEDENOM. If your dataset has data that are relevant at different zoomlevels, then you may find this a very handy trick. For example, give a MINSCALEDENOM of 1:1000000, county roads a MINSCALEDENOM of 1:100000, and streets a MAXSCALEDENOM of 1:50000. You get the cool effect of new data magically appearing, but you don't have MapServer trying to draw the nation's roads when the entire nation is in view!"
msgstr ""

#: ../../../en/optimization/mapfile.txt:109
# fa184e0832464f6c81a91229dc532f7c
msgid "Classes are processed in order, and a feature is assigned to the first class that matches. So try placing the most commonly-used classes at the top of the class list, so MapServer doesn't have to try as many classes before finding a match. For example, if you wanted to highlight the single state of Wyoming, you would probably do this:"
msgstr ""

#: ../../../en/optimization/mapfile.txt:129
# 5edb53856ced442eb77f361fc8d236bc
msgid "But it would be a lot more efficient to do this, since 98% of cases will be matched on the first try:"
msgstr ""

#: ../../../en/optimization/mapfile.txt:146
# 6096132c7a3d478ab33724c065633bbe
msgid "Use :ref:`tile indexes <tileindex>` instead of multiple layers."
msgstr ""

#: ../../../en/optimization/mapfile.txt:152
# bca266b86ea94c49ae70f5401d5a24b1
msgid "3. Symbols"
msgstr ""

#: ../../../en/optimization/mapfile.txt:154
# e65dc5c1a59348158fa9e2244995c4ed
msgid "When the Map File is loaded, each raster symbol listed in the symbols file is located on the filesystem and loaded."
msgstr ""

#: ../../../en/optimization/mapfile.txt:159
# 8f3f1208a987474484c7c806d8121a20
msgid "Only include raster symbols in your symbols file if you know that they will be used by your application."
msgstr ""

#: ../../../en/optimization/mapfile.txt:166
# 2481fbe8b02e45b4bc562913472d0651
msgid "4. Fonts"
msgstr ""

#: ../../../en/optimization/mapfile.txt:168
# 3faa4e5399184d48948854f6c1c8589e
msgid "To load a font, MapServer opens up the fonts.list :ref:`fontset` file which contains an alias for the font and the path for that font file. If you have a fonts.list file with a long list of fonts, it will take more time for MapServer to locate and load the font that you need."
msgstr ""

#: ../../../en/optimization/mapfile.txt:175
# ded11f05773c47a6b205d63937b06e50
msgid "Limit the entries in fonts.list to fonts that you actually use."
msgstr ""

#: ../../../en/optimization/mapfile.txt:1
# 737f32d5b0744dabbb5be19a8b1363a5
msgid "Mapfile tuning"
msgstr ""

#: ../../../en/optimization/mapfile.txt:29
# 7554f49b5c8f4f8f87bf418deebd4a30
msgid "Projections"
msgstr ""

#: ../../../en/optimization/mapfile.txt:72
# 3f5496b6f2944939aa317dc1a3a30781
msgid "Layers"
msgstr ""

#: ../../../en/optimization/mapfile.txt:148
# 2d999bb31423489d85f4902bbbc664f6
msgid "Symbols"
msgstr ""

#: ../../../en/optimization/mapfile.txt:162
# c6e72f4880d74345b5e8c7c4ae14c3b1
msgid "Fonts"
msgstr ""

#: ../../../en/optimization/raster.txt:8
#: ../../../en/optimization/raster.txt:1
#: ../../../en/optimization/raster.txt:32
# c0abc20d236a4f909f557e10b10d8d7b
# f6f3e5cd9bb2437ab3f3dd15e2d8b2df
# ab281f9212c84103a78ce0029c5a95d5
msgid "Raster"
msgstr ""

#: ../../../en/optimization/raster.txt:10
#: ../../../en/optimization/tileindex.txt:10
#: ../../../en/optimization/vector.txt:10
# d8a2a340d1a5478d9c6aab8967f83fd9
# 275831bb8275441cb2fb9e4a0f8a9e88
# 59b051adf83844dc9d4e978003c47469
msgid "HostGIS"
msgstr ""

#: ../../../en/optimization/raster.txt:13
#: ../../../en/optimization/vector.txt:13
# b54800fc1451418cbddd7b8416ff84b3
# 17d3e3ab1ff747fe921c31f7ad6ae2ae
msgid "2008/08/08"
msgstr ""

#: ../../../en/optimization/raster.txt:22
# 1be75fe28ba0463dbaa8815494bade10
msgid "Overviews"
msgstr ""

#: ../../../en/optimization/raster.txt:23
# ed345542d35d459a8fd833a6771e291d
msgid "TIFF supports the creation of \"overviews\" within the file, which is basically a downsampled version of the raster data suitable for use at lower resolutions. Use the \"gdaladdo\" program to add overviews to a TIFF, and MapServer (via GDAL) will automagically choose which downsampled layer to use. Note that overviews significantly increase the disk space required by a TIFF, and in some cases the extra disk reading may offset the performance gained by MapServer not having to resample the image. You'll just have to try it for yourself and see how it works."
msgstr ""

#: ../../../en/optimization/raster.txt:36
# 58d94523cd3c48dc8ad0918346b965c1
msgid "Tileindexes and Internal Tiling"
msgstr ""

#: ../../../en/optimization/raster.txt:37
# 549b9908f187409d9c2b85d996f94706
msgid "Tiling is mostly effective for cases where one commonly requests only a very small area of the image."
msgstr ""

#: ../../../en/optimization/raster.txt:40
# bc1be91cb1094dd29f78a2ce0a16dd09
msgid "A tileindex is how one creates an on-the-fly mosaic from many rasters. This is described in the :ref:`tileindex`. That document describes common cases where a tileindex makes sense. In particular, if you have a very large raster and most requests are for a very small spatial area within it, you may want t consider slicing it and tileindexing it."
msgstr ""

#: ../../../en/optimization/raster.txt:46
# a0b200eadbcf48a08df0a19ca7534962
msgid "As an alternative to slicing and mosaicing, TIFFs do support a concept of internal tiling. Like a tileindex, this is mostly effective when the requests are for a small portion of the raster. Internal tiling is done by adding \"-co TILED=YES\" to gdal_translate, e.g.:"
msgstr ""

#: ../../../en/optimization/raster.txt:59
#: ../../../en/optimization/raster.txt:55
# 5acb86249ead42f39115120a0a09ab80
# 26bb7e02163c4b8297d2229ad294f983
msgid "Image formats"
msgstr ""

#: ../../../en/optimization/raster.txt:61
# 2e3b7fe08de141b9848fdedd2ca9a754
msgid "The TIFF image format is the fastest to \"decipher\", but once you get beyond a certain point, the disk reading (since TIFF is very large) may become slow enough to make it worthwhile to consider other image formats."
msgstr ""

#: ../../../en/optimization/raster.txt:65
# 7f280e62374a4ae9a4218b9b5cdcd7a6
msgid "For TIFFs larger than 1 GB, ECW images tend to render faster than TIFFs, since decompressing the data (CPU and RAM) is faster than reading the uncompressed data (disk). The downside is that ECW is not open-source, and the licensing is often prohibitive."
msgstr ""

#: ../../../en/optimization/raster.txt:70
# 18eab08db0fd41fea2615d447a184f45
msgid "JPEG2000 is a very slow image format, as is JPEG."
msgstr ""

#: ../../../en/optimization/raster.txt:73
# bb9a7611c875464abd590f3ffb5cfa65
msgid "Remote WMS"
msgstr ""

#: ../../../en/optimization/raster.txt:75
# b319324f33894a6f8138e02c22970a2b
msgid "Remote WMS servers are often slow, especially the public ones such as TerraServer or NASA's Landsat server. There's nothing you can do about that, except to reconsider when the remote WMS layer should be used."
msgstr ""

#: ../../../en/optimization/raster.txt:79
# a29ae1c49c6741889bc1a889dbb60154
msgid "For example, there may be a different WMS server (or a different set of imagery, or even vector outline maps) suitable for drawing the countries or states to orient the user. You could then have the WMS layer come on at a certain scale, or have the layer always available but turned off so the user can choose when to turn it on."
msgstr ""

#: ../../../en/optimization/raster.txt:86
# 27073b0121be4d95916f60d2e2a7d423
msgid ":ref:`raster`"
msgstr ""

#: ../../../en/optimization/raster.txt:32
# ab281f9212c84103a78ce0029c5a95d5
msgid "Tiling"
msgstr ""

#: ../../../en/optimization/tileindex.txt:8
# 0c9d6a02eea244c18f1d30baf3cac8a9
msgid "Tile Indexes"
msgstr ""

#: ../../../en/optimization/tileindex.txt:13
# 688bf781dd2b48f69a9aec1c08e32d6d
msgid "2013/07/04"
msgstr ""

#: ../../../en/optimization/tileindex.txt:21
# 02f95c90866f4e03bce75f756b980527
msgid "An introduction to tileindexes, MapServer's method for doing on-the-fly mosaicing."
msgstr ""

#: ../../../en/optimization/tileindex.txt:24
# 61da2cb72c3c45a9922e62a895c17f11
msgid "What is a tileindex and how do I make one?"
msgstr ""

#: ../../../en/optimization/tileindex.txt:26
# 9dca845ed5f2439d8099912377066304
msgid "A tileindex is a shapefile that ties together several datasets into a single layer. Therefore, you don't need to create separate layers for each piece of imagery or each county's road data; make a tileindex and let MapServer piece the mosaic together on the fly."
msgstr ""

#: ../../../en/optimization/tileindex.txt:31
# 9a5aac37ed4b4ec1aa90dca80fb97f4b
msgid "Making a tileindex is easy using `gdaltindex`_ for GDAL data sources (rasters) and `ogrtindex`_ for OGR data sources (vectors). You just run them, specifying the index file to create and the list of data sources to add to the index."
msgstr ""

#: ../../../en/optimization/tileindex.txt:38
# 3bdfbe12354441ecacbfb6da71437347
msgid "For example, to make a mosaic of several TIFFs:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:47
# 6a3791d7e8d0428490f4ce8945796afa
msgid "And to make a mosaic of vectors:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:54
# c85f22f8474e4bcfbf1d1ee14bbb5b00
msgid "ogrtindex and gdaltindex **add** the specified files to the index. Sometimes you'll have to delete the index file to avoid creating duplicate entries."
msgstr ""

#: ../../../en/optimization/tileindex.txt:62
# 4fb320c8f22c43578904c0c25a4b06ec
msgid "Using the tileindex in your mapfile"
msgstr ""

#: ../../../en/optimization/tileindex.txt:64
# 08a7770c32934d95b691bf29274654b3
msgid "Using a tileindex as a layer is best explained by an example:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:76
# 540c35e9bb934d0b9497374ec206f981
msgid "There are two items of note here: :ref:`TILEINDEX <tileindex_keyword>` and :ref:`TILEITEM <tileitem>`. TILEINDEX is simply the path to the index file, and TILEITEM specifies the field in the shapefile which contains the filenames referenced by the index. The TILEITEM will usually be \"LOCATION\" unless you specified the *-tileindex* option when running gdaltindex or ogrtindex."
msgstr ""

#: ../../../en/optimization/tileindex.txt:83
# 6eaa07546835473b82a227342be34463
msgid "Two important notes about the pathnames:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:85
# 598180db51664180bdfaadfffd963260
msgid "The path to TILEINDEX follows the same conventions as for any other data source, e.g. using the SHAPEPATH or else being relative to the location of the mapfile."
msgstr ""

#: ../../../en/optimization/tileindex.txt:88
# 99cb1d9a5dc44f9caa4babc2e4938059
msgid "The filenames specified on the command line to gdaltindex or ogrtindex will be used with the same conventions as well, following the SHAPEPATH or else being relative to the mapfile's location. I find it very useful to change into the SHAPEPATH directory and then run ogrtindex/gdaltindex from there; this ensures that I specify the correct pathnames."
msgstr ""

#: ../../../en/optimization/tileindex.txt:95
# 5ad927d2e1054d4a8e68180e67a9a4d2
msgid "Tileindexes may make your map faster"
msgstr ""

#: ../../../en/optimization/tileindex.txt:97
# 9567ce546f314846b7eba279793bbcda
msgid "A tileindex is often a performance boost for two reasons:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:99
# cb87e6b791b5420d87fe030add650a44
msgid "It's more efficient than having several separate layers."
msgstr ""

#: ../../../en/optimization/tileindex.txt:100
# 46f89027b8a24e9c8d0197f111defae3
msgid "MapServer will examine the tileindex to determine which datasets fall into the map's view, and will open only those datasets. This can result in a great savings for a large dataset, especially for use cases where most of the time only a very small spatial region of the data is being used. (for example, citywide maps with nationwide street imagery)"
msgstr ""

#: ../../../en/optimization/tileindex.txt:106
# 573d75fb17994ed78485fdf85269fe1d
msgid "A tileindex will not help in the case where all/most of the data sources will usually be opened anyway (e.g. street data by county, showing states or larger regions). In that case, it may even result in a decrease in performance, since it may be slower to open 100 files than to open one giant file."
msgstr ""

#: ../../../en/optimization/tileindex.txt:111
# 5e39f8321f024c989d664a058a55abae
msgid "The ideal case for a tileindex is when the most typically requested map areas fall into very few tiles. For example, if you're showing state and larger regions, try fitting your data into state-sized blocks instead of county-sized blocks; and if you're showing cities and counties, go for county-sized blocks."
msgstr ""

#: ../../../en/optimization/tileindex.txt:116
# ec683a13b24b4d88b12bf796da453ef7
msgid "You'll just have to experiment with it and see what works best for your use cases."
msgstr ""

#: ../../../en/optimization/tileindex.txt:122
# c2757d904dbf46c090445124ff4d1e7e
msgid "Tileindexes with tiles in different projections"
msgstr ""

#: ../../../en/optimization/tileindex.txt:124
# 081a3e9640684151960c780b6696a000
msgid "Starting with MapServer 6.4, a raster tileindex can contain rasters in different projections. Such tileindex can be generated with `gdaltindex`_ (GDAL 2.0 or later), with the -t_srs and -src_srs_name options. The -t_srs instructs gdaltindex to write the envelope of each raster tile into a common target projection, so that the geometries written in the tile index are consistant. This common projection must be the projection of the raster layer."
msgstr ""

#: ../../../en/optimization/tileindex.txt:135
# a180185e9d254b8f9eceb12a9b0d37d5
msgid "The corresponding LAYER definition will need to specify the :ref:`TILESRS <tilesrs>` keyword with the value of the -src_srs_name option."
msgstr ""

#: ../../../en/optimization/tileindex.txt:138
# b218255b4a9943e9921bff32813d2dc1
msgid "e.g:"
msgstr ""

#: ../../../en/optimization/tileindex.txt:156
# 794bf8787943462986223fb36bc6fcd6
msgid "MapServer will then be able to proceed to on-the-fly mosaicing and reprojection."
msgstr ""

#: ../../../en/optimization/tileindex.txt:158
# 4161c5895186476a98fae5f50e568c35
msgid "For layers that must be exposed as WCS layers, a few metadata fields (\"wcs_extent\", \"wcs_size\", \"wcs_resolution\") must be specified in the LAYER definition, so as to define a \"virtual dataset\" coverage (see :ref:`wcs_server`). The GDAL wcs_virtds_params.py sample script can help generating those metadata fields."
msgstr ""

#: ../../../en/optimization/tileindex.txt:164
# 851e9a4ca59a4a229f154f1009f79bf2
msgid "Note: this support of tileindex with mixed projections is only available for raster layers for now."
msgstr ""

#: ../../../en/optimization/tileindex.txt:1
# 2382c4e8b6c6451e8c3c81e7efc57992
msgid "Tile indexes"
msgstr ""

#: ../../../en/optimization/tileindex.txt:35
# 9756058d06884e87956693ad352de59e
msgid "gdaltindex"
msgstr ""

#: ../../../en/optimization/tileindex.txt:44
# 77670798452a4df8accbe99461bc4a93
msgid "ogrtindex"
msgstr ""

#: ../../../en/optimization/tileindex.txt:58
# aa57eee03abf485cbcd1779c819471b3
msgid "TILEINDEX"
msgstr ""

#: ../../../en/optimization/vector.txt:8
#: ../../../en/optimization/vector.txt:1
# 892823e1183347f4965c0a80db87f7b8
# 0ae726ff601445cda8de72ee44256b0d
msgid "Vector"
msgstr ""

#: ../../../en/optimization/vector.txt:21
# be9082b00e424b2589956f406abfe9cb
msgid "Splitting your data"
msgstr ""

#: ../../../en/optimization/vector.txt:23
# 7f684d9d9c0243adbe9705b943425fcd
msgid "If you find yourself making several layers, all of them using the same dataset but filtering to only use some of the records, you could probably do it better. If the criteria are static, one approach is to pre-split the data."
msgstr ""

#: ../../../en/optimization/vector.txt:27
# 55bb3c988b27415384e9bba3227f020f
msgid "The *ogr2ogr* utility can select on certain features from a datasource, and save them to a new data source. Thus, you can split your dataset into several smaller ones that are already effectively filtered, and remove the FILTER statement."
msgstr ""

#: ../../../en/optimization/vector.txt:36
# abef5447f2904e7eafedfebcedcfbb9e
msgid "Shapefiles"
msgstr ""

#: ../../../en/optimization/vector.txt:37
# 860cc21abde84fe29b7fef59c99c1b42
msgid "Use :ref:`shptree` to generate a spatial index on your shapefile. This is quick and easy (\"shptree foo.shp\") and generates a .qix file. MapServer will automagically detect an index and use it."
msgstr ""

#: ../../../en/optimization/vector.txt:45
# f8e49f0fc81f4299b1fe36f14fcadebe
msgid "MapServer also comes with the :ref:`sortshp` utility. This reorganizes a shapefile, sorting it according to the values in one of its columns. If you're commonly filtering by criteria and it's almost always by a specific column, this can make the process slightly more efficient."
msgstr ""

#: ../../../en/optimization/vector.txt:50
# 7563cb1a72984dc6918344824c831b48
msgid "Although shapefiles are a very fast data format, :ref:`PostGIS <input_postgis>` is pretty speedy as well, especially if you use indexes well and have memory to throw at caching."
msgstr ""

#: ../../../en/optimization/vector.txt:58
#: ../../../en/optimization/vector.txt:54
# b0c1fdf40f3e401fba5d41411b1ac892
# 87ef9a133ab441b2a20228166a13780a
msgid "PostGIS"
msgstr ""

#: ../../../en/optimization/vector.txt:60
# fb201e0aa3ca482aa483ef39634c4fd9
msgid "The single biggest boost to performance is indexing. Make sure that there's a GIST index on the geometry column, and each record should also have an indexed primary key. If you used shp2pgsql, then these statements should create the necessary indexes:"
msgstr ""

#: ../../../en/optimization/vector.txt:70
# c15da715650e49e39851cdbc1df13c0c
msgid "PostgreSQL also supports reorganizing the data in a table, such that it's physically sorted by the index. This allows PostgreSQL to be much more efficient in reading the indexed data. Use the CLUSTER command, e.g."
msgstr ""

#: ../../../en/optimization/vector.txt:78
# fa6ce81a205c4f8e83b2568961ffbb0d
msgid "Then there are numerous optimizations one can perform on the database server itself, aside from the geospatial component. The easiest is to increase *max_buffers* in the *postgresql.conf* file, which allows PostgreSQL to use more memory for caching. More information can be found at the `PostgreSQL website`_."
msgstr ""

#: ../../../en/optimization/vector.txt:88
# bb33505722f34e73b280236b52e17bc1
msgid "Databases in General (PostGIS, Oracle, MySQL)"
msgstr ""

#: ../../../en/optimization/vector.txt:90
# 21468a3c48734bcb80e3ee7aa89b32a1
msgid "By default, MapServer opens and closes a new database connection for each database-driven layer in the mapfile. If you have several layers reading from the same database, this doesn't make a lot of sense. And with some databases (Oracle) establishing connections takes enough time that it can become significant."
msgstr ""

#: ../../../en/optimization/vector.txt:96
# 99ae5f06107c4837995179db53b20f68
msgid "Try adding this line to your database layers:"
msgstr ""

#: ../../../en/optimization/vector.txt:102
# 8e780c3a9ed247a5b261a31fcdd6d0a8
msgid "This causes MapServer to not close the database connection for each layer until after it has finished processing the mapfile and this may shave a few seconds off of map generation times."
msgstr ""

#: ../../../en/optimization/vector.txt:32
# 393f654b051c449b904711bf2e49b243
msgid "Shape datasets"
msgstr ""

#: ../../../en/optimization/vector.txt:84
# 92208da5c3d3419c9ff4536a986d83f4
msgid "Databases"
msgstr ""

