# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Regents of the University of Minnesota
# This file is distributed under the same license as the MapServer package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MapServer-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-09 19:21+0200\n"
"PO-Revision-Date: 2015-10-09 17:26+0000\n"
"Last-Translator: Jacolin <yjacolin@free.fr>\n"
"Language-Team: Turkish (http://www.transifex.com/mapserver/mapserver-doc/language/tr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# 2e9fd3bfc1724e9f906d63495f200084
#: ../../../en/tutorial/background.txt:6
msgid "Tutorial background"
msgstr ""

# f69337651f474c92869b0eac2866633a
#: ../../../en/tutorial/background.txt:9
msgid "Tutorial Timeframe"
msgstr ""

# ec8bd4d2af65492aa5989a733ece4981
#: ../../../en/tutorial/background.txt:11
msgid ""
"While some users can go through this tutorial in one day, those who work on "
"each example in detail can probably expect to finish in one week."
msgstr ""

# b4162a593eac4439bc39df7548ff72c5
#: ../../../en/tutorial/background.txt:15
msgid "Tutorial Data"
msgstr ""

# d485e8f6671d48c69ac85a9a7bc44867
#: ../../../en/tutorial/background.txt:17
msgid ""
"The dataset used in this tutorial was taken from the U.S. Department of the "
"Interior's National Atlas of the United States. You can visit their web site"
" at http://www.nationalatlas.gov. The dataset was clipped to the upper great"
" lakes region (Minnesota, Michigan, and Wisconsin) to reduce storage size. "
"Additional raster images were added courtesy of the TerraSIP project at the "
"University of Minnesota. When using this tutorial, you are encouraged to use"
" your own dataset."
msgstr ""

# 2987c480ed534372bdf7c7208d573666
#: ../../../en/tutorial/background.txt:25
msgid ""
"Like MapServer itself, this tutorial is open and customizable to anyone. "
"This was done in the hope that someone (or some folks) will help design and "
"develop it further."
msgstr ""

# da0d713aed9e451998db0a54dae3375f
#: ../../../en/tutorial/background.txt:29
msgid ""
"Download the data (and all html files) for this tutorial at "
"http://download.osgeo.org/mapserver/docs/mapserver-tutorial.zip."
msgstr ""

# 74e7c0e864a044a6b55d4469851ddc0a
#: ../../../en/tutorial/background.txt:32
msgid "Before Using the Tutorial"
msgstr ""

# 3cfa4fbc18c54b418403015eaef99b1c
#: ../../../en/tutorial/background.txt:34
msgid "There are some prerequisites to using this tutorial:"
msgstr ""

# 7882e45db35d4a7b911e606b1bf118f1
#: ../../../en/tutorial/background.txt:36
msgid ""
"Users will need to have a web server installed and running on their "
"computer. This web server has to have support for common gateway interface "
"(CGI) programs."
msgstr ""

# 9d50584f6dc3484486479d06b0bffbc8
#: ../../../en/tutorial/background.txt:39
msgid ""
"Users should have a basic understanding of web servers and internet "
"security. A poorly configured web server can easily be attacked by malicious"
" people. At the very least your software installation will be corrupted and "
"you'll lose hours of productivity, at worst your computer can be used to "
"attack other computers on the internet."
msgstr ""

# 3c903e7e4b244d2c9f13fbc92d4459db
#: ../../../en/tutorial/background.txt:45
msgid ""
"It is recommended that users of this tutorial read the :ref:`Introduction to"
" MapServer <introduction>` before proceeding with this tutorial."
msgstr ""

# a5ebfad76c05468d930ee0c3453c6a83
#: ../../../en/tutorial/background.txt:49
msgid ""
"To use this tutorial, users will need to have a MapServer CGI program "
"(mapserv or mapserv.exe) installed in their systems. MapServer source code "
"is available for download :ref:`here <download>`. Documentation exists on "
"how to compile and install MapServer:"
msgstr ""

# b6f7fcb466554704bdd1ab49fa74ada1
#: ../../../en/tutorial/background.txt:54
msgid ""
"for UNIX users, please read the :ref:`MapServer UNIX Compilation and "
"Installation HOWTO <unix>`."
msgstr ""

# 6f9d7f094f504e8cb381a03b852f21d4
#: ../../../en/tutorial/background.txt:55
msgid ""
"Windows users should read the :ref:`MapServer Win32 Compilation and "
"Installation HOWTO <win32>`"
msgstr ""

# 7699080ff51d4a52b10b80253fc33f4d
#: ../../../en/tutorial/background.txt:57
msgid ""
"In addition, precompiled binaries exist for a number of platform (see the "
":ref:`download page <download>`)."
msgstr ""

# 367a4a43e46e4f7fb7f5dd6803d077ca
#: ../../../en/tutorial/background.txt:61
msgid "Windows, UNIX/Linux Issues"
msgstr ""

# b3c7d7058847446d8e9206253f1dadfd
#: ../../../en/tutorial/background.txt:64
msgid "Paths"
msgstr ""

# 7684844440a54699bd9fe4215c77452c
#: ../../../en/tutorial/background.txt:66
msgid ""
"This tutorial was created on Linux/UNIX but should work with minimal changes"
" on Windows platform. The main differences are the paths in the map files. "
"Windows users need to specify the drive letter of the hard disk where their "
"tutorial files reside. Here's an example:"
msgstr ""

# 7bfd1235fc674430b81f07bae5037925
#: ../../../en/tutorial/background.txt:71
msgid "A UNIX map file might include a parameter like this:"
msgstr ""

# b97bf343bcf5415dbb5f04b346e216fd
#: ../../../en/tutorial/background.txt:77
msgid "In Windows, the same parameters might look like this:"
msgstr ""

# 643ee8acb805482e8ecb0d02f5ac3955
#: ../../../en/tutorial/background.txt:83
msgid "or:"
msgstr ""

# c364081741e64b6599d317abab147d39
#: ../../../en/tutorial/background.txt:89
msgid ""
"Notice that either slash or backslash works in Windows. The usual backslash "
"may work well for you if you want to make a distinction between virtual (as "
"in URLs or web addresses) and local paths in your map file. However, if you "
"plan to move your application to UNIX at some point, you'll have the tedious"
" task of switching all backslashes to slashes."
msgstr ""

# babf38ec550f4018a096059a78efed56
#: ../../../en/tutorial/background.txt:96
msgid ""
"While we're on the subject of paths, keep in mind that paths in mapfiles are"
" typically relative to the system's root directory: the slash (\"/\") in "
"UNIX or some drive letter (\"C:\") in Windows. This is true except when "
"specifically asked to enter a URL or when referencing a URL. When working "
"with HTML template files, paths are relative to the web server's root "
"directory.  i.e., \"/tutorial/\" is relative to "
"\"http://demo.mapserver.org/\". Please read "
"http://www.alistapart.com/articles/slashforward/ for a few insights on URLs."
msgstr ""

# 78ecd85434164362b6e34e71ba09a208
#: ../../../en/tutorial/background.txt:107
msgid "Executable"
msgstr ""

# 9a17420b963f40cc9c090966b3b20d6b
#: ../../../en/tutorial/background.txt:109
msgid ""
"Another issue is that UNIX executable files don't require a .EXE or .COM "
"extensions, but they do in Windows. If you are using Windows, append .exe to"
" all instances of \"/cgi-bin/mapserv\" or \"/cgi-bin/mapserv50\" to make it "
"\"/cgi-bin/mapserv.exe\" or \"/cgi-bin/mapserv50.exe\"."
msgstr ""

# 0452eae050534d4aaa6fed1dda0970af
#: ../../../en/tutorial/background.txt:116
msgid "Other Resources"
msgstr ""

# e5983b22efe54ec5a0c8618305937f7d
#: ../../../en/tutorial/background.txt:118
msgid ""
"Other documentation exist to give you better understanding of the many "
"customizations MapServer offer. Please visit the MapServer documentation "
"page at http://www.mapserver.org. There you will find several HOWTO "
"documents, from getting started to using MapScript, a scripting interface "
"for MapServer."
msgstr ""

# 1145303bf5a2433aa5ef6c2a3cc913c5
#: ../../../en/tutorial/background.txt:126
msgid ""
":ref:`Back to Tutorial home <tutorial>` | :ref:`Proceed to Section 1 "
"<tutorial_section1>`"
msgstr ""

# 409b29e8464744c1aa3b46bbd7bca660
#: ../../../en/tutorial/example1-1.txt:7
msgid "Example 1.1"
msgstr ""

# 8ed9bae62cb74f80a929eee6d3821d0c
#: ../../../en/tutorial/example1-1.txt:9
msgid "Map With A Single Layer"
msgstr ""

# 2fd80f666de148aea6277f3364cfdf89
#: ../../../en/tutorial/example1-1.txt:13
msgid ""
"MapServer can create an image and dump it to a local directory or send it "
"directly to the requesting web browser, as in this example. You can view it "
"without the need for an html page, just enter this URL: `<http://localhost"
"/cgi-"
"bin/mapserv?map=/ms4w/apps/tutorial/htdocs/example1-1.map&layer=states&mode=map>`_"
" .  This URL will work if you are on the web server (if not, \"localhost\" "
"must be replaced with your web server's name (e.g. \"demo.mapserver.org\") "
"or IP address (e.g. \"140.211.15.84\")."
msgstr ""

# 3030fce858ef4cd6b8a35c3e0d669968
#: ../../../en/tutorial/example1-1.txt:21
msgid ""
"This URL can be broken into three parts: the first part, http://localhost"
"/cgi-bin/mapserv?, calls the MapServer CGI program. If you invoke it as is "
"you will get this familiar message:"
msgstr ""

# 512b144bb1de4e53b241c2ba9b2a7abd
#: ../../../en/tutorial/example1-1.txt:29
msgid ""
"The next three parts make up the query string.  The query string contains "
"the CGI parameters (variables and their values), with each parameter "
"separated by an ampersand (\"&\"). So, looking at the query string:"
msgstr ""

# 1ff47bad1d7e447eb1d38ccc6c7a469b
#: ../../../en/tutorial/example1-1.txt:34
msgid ""
"The first parameter \"map\" has a value "
"\"/ms4w/apps/tutorial/htdocs/example1-1.map\".  This tells the MapServer CGI"
" program (**mapserv** or **mapserv.exe**) what mapfile to process/parse."
msgstr ""

# 3698d4b86ac2491a92eaa8e9036c74e0
#: ../../../en/tutorial/example1-1.txt:39
msgid ""
"The next parameter (*layer=states*) tells **mapserv** to \"turn on\" the "
"states layer.  Recall that we named our layer object \"states\"."
msgstr ""

# 40eda59f5d2b49929098f4729943b90f
#: ../../../en/tutorial/example1-1.txt:43
msgid ""
"The last parameter (*mode=map*) tells **mapserv** what to do with the output"
" from the mapfile. In this case it tells **mapserv** to dump the image "
"directly to the web browser (the client), without first creating a temporary"
" image on the server."
msgstr ""

# 5e2030d8bdd0474492a21128397a7d10
#: ../../../en/tutorial/example1-1.txt:48
msgid ""
"The MapServer *mode* CGI variable takes values other than *map*. For example"
" if you use *mode=browse*, MapServer will dump the image to a temporary "
"directory on the server. The browse mode will not work now but we'll come "
"back to it again later."
msgstr ""

# ae8b3bd6b92749a3852d9aa3af37323a
#: ../../../en/tutorial/example1-1.txt:55
msgid "Mapfile Structure"
msgstr ""

# bb946dd5891449ccb569e6e7c3c69e53
#: ../../../en/tutorial/example1-1.txt:57
msgid ""
"This is what the mapfile looks like: :ref:`Example1-1.map <example1-1-map>`."
msgstr ""

# d536c7d5a54d4dbc8ceffa925d27be69
#: ../../../en/tutorial/example1-1.txt:59
msgid ""
"The :ref:`MAPFILE <mapfile>` is MapServer's basic configuration mechanism. "
"It is made up of \"objects\" and each object can have keywords or other "
"objects. It has a hierarchical structure such that some objects fall under "
"other objects... on top of this hierarchy is the MAP object, all other "
"objects belong to it. This example shows a very straightforward heirarchy of"
" objects.  As you go through each example, the complexity of these "
"hierarchical trees will increase."
msgstr ""

# 180e007a06b74cb188d6f2aa85246f35
#: ../../../en/tutorial/example1-1.txt:67
msgid ""
"A few quick notes about mapfiles: we define each object in the mapfile with "
"the object name and we close it with \"END\" and we precede comments with a "
"pound (#) sign."
msgstr ""

# d7d115c85d754e309e6887c8b8a57573
#: ../../../en/tutorial/example1-1.txt:71
msgid ""
"Let's break \"example1-1.map\" down by objects. Its structure looks like "
"this:"
msgstr ""

# 725b96cb84dc44a78745e9ff7eed426d
#: ../../../en/tutorial/example1-1.txt:82
msgid "MAP Object"
msgstr ""

# 3606c4296bfe4de79c8290d6b09baea3
#: ../../../en/tutorial/example1-1.txt:84
msgid "Let's look at the keywords (parameters) within the MAP object:"
msgstr ""

# 2f0d2c1c675c45cc9997a9d67a56bd0f
#: ../../../en/tutorial/example1-1.txt:88
msgid "**MAP**"
msgstr ""

# 9bdaeacef6d845ca8145a4db518c02a0
#: ../../../en/tutorial/example1-1.txt:87
msgid ""
"Every mapfile must start with the :ref:`MAP <map>` object--the entire "
"mapfile is the MAP object."
msgstr ""

# 14f95f130be64624bf70c69d3bbb249f
# 5bfa079db58f4e46add671dbb801b537
#: ../../../en/tutorial/example1-1.txt:99
#: ../../../en/tutorial/example1-5.txt:87
msgid "**IMAGETYPE**"
msgstr ""

# cdb99457ced448819ca0c33d6dc40fe0
#: ../../../en/tutorial/example1-1.txt:91
msgid ""
"The keyword IMAGETYPE is used to define which image format the MapServer CGI"
" program should use for output. In this case we are using indexed color PNG "
"(similar to GIF). This could be GIF, if we compiled the GD library with GIF "
"support, WBMP, or JPEG. We can also specify other output options (PDF, SWF, "
"GeoTIFF) provided that we compiled support for them and specify them with "
"the OUTPUTFORMAT object. The OUTPUTFORMAT goes beyond the scope of this "
"tutorial but you can find out more about by reading through documentations "
"in the MapServer web site."
msgstr ""

# 2f20c3f7f273444fabec24bbb9d1b06a
#: ../../../en/tutorial/example1-1.txt:139
msgid "**EXTENT**"
msgstr ""

# 9b9a2f7541d546c994928593d96dcb44
#: ../../../en/tutorial/example1-1.txt:102
msgid ""
"This parameter specifies the output extent of our map--the bounding box of "
"our initial map.  The EXTENT values are given in this format::"
msgstr ""

# be27cb27296d403bad21e78a4e14748e
#: ../../../en/tutorial/example1-1.txt:108
msgid ""
"with spaces separating each value. This needs to be in the same units as the"
" data or, if specifying a different output projection, in the same units as "
"the output projection."
msgstr ""

# 7ed3c13fa5cb4a2f9f252d06e97abe2f
#: ../../../en/tutorial/example1-1.txt:112
msgid ""
"In this example our data is in geographic projection so the units are in "
"decimal degrees.  You can use the utility `ogrinfo "
"<http://gdal.osgeo.org/ogr_utilities.html>`_, which is part of the GDAL/OGR "
"library package, to get the extent of a particular Shapefile dataset (or "
"other supported vector formats).  Here is the command I used to get the "
"extent for this example::"
msgstr ""

# e9cf08254ddb4515800225e8ed1b5799
#: ../../../en/tutorial/example1-1.txt:121
msgid "This returned the following output::"
msgstr ""

# e90a020d7d3a447ea657a9a785696329
#: ../../../en/tutorial/example1-1.txt:135
msgid ""
"You can also use ArcView or an open source GIS packages--QGIS, Thuban, etc."
msgstr ""

# 76ad6e8bd1d94c659422673dce81cd42
#: ../../../en/tutorial/example1-1.txt:138
msgid ""
"Feel free to change the values of EXTENT to get a better understanding of "
"how it changes your map."
msgstr ""

# ae9fc417c3a14fc4b82e25c60c8850e1
# 06c5ebd0d5674a4683ed20d794c763ec
#: ../../../en/tutorial/example1-1.txt:145
#: ../../../en/tutorial/example1-4.txt:90
msgid "**SIZE**"
msgstr ""

# 24b21250d57d487ead0f3b71cfeafc96
#: ../../../en/tutorial/example1-1.txt:142
msgid ""
"This is the size of the image (the map) that MapServer will generate, in "
"pixels. So our map is 400 pixels wide by 300 pixels high.  Again, change "
"this to your heart's content and see how it affects your map."
msgstr ""

# 9e302b4b310c45d6ad75622806d39f6a
#: ../../../en/tutorial/example1-1.txt:156
msgid "**SHAPEPATH**"
msgstr ""

# fd26988d1e594593b79076691f24b026
#: ../../../en/tutorial/example1-1.txt:148
msgid ""
"This is the path to your data layers. You can provide absolute paths (i.e. "
"\"/ms4w/apps/tutorial/data\" or \"C:/ms4w/apps/tutorial/data\") or paths "
"relative to your mapfile's location (in this example, you'd use "
"\"../data\"). This path doesn't have to be web accessible, and probably "
"shouldn't be unless you want anyone to download your raw data. It has "
"nothing directly to do with the web so don't even think of URLs here.  Just "
"make sure that the user running the web server (usually \"nobody\" or "
"\"apache\" in the \\*nix world) can READ the data in the SHAPEPATH."
msgstr ""

# c5b43684cb9645c4b1554a32e7e5463c
#: ../../../en/tutorial/example1-1.txt:161
msgid "**IMAGECOLOR**"
msgstr ""

# f1beda2566774f22bdaa1286e4448ad4
#: ../../../en/tutorial/example1-1.txt:159
msgid ""
"This is the background color of your map. The values are RGB values so 255 "
"Red, 255 Green, and 255 Blue which results in a white background.  Go ahead "
"and play with this values."
msgstr ""

# 36d547ffacc44b2e918a38eb54efbfb6
#: ../../../en/tutorial/example1-1.txt:164
msgid "LAYER Object"
msgstr ""

# f219ed2a748348eda3dede1efb1979ab
#: ../../../en/tutorial/example1-1.txt:166
msgid "Now let's look at the LAYER object parameters:"
msgstr ""

# da70562e627c42278d0040370b979ad8
#: ../../../en/tutorial/example1-1.txt:172
msgid "**LAYER**"
msgstr ""

# 12e2b8524a2f4c5f89ae64b978de686d
#: ../../../en/tutorial/example1-1.txt:169
msgid ""
"Marks the beginning of a :ref:`LAYER <layer>` within the MAP object.  You "
"can specify as many layers as you like (in MapServer versions < 5, there was"
" a limit that could be changed by editing the map.h header file and "
"recompileing MapServer)."
msgstr ""

# 916ff477c30d4c409e3634ea56a2e214
# 01c91ac6d69f4f26a19be63c5f7ddbe3
#: ../../../en/tutorial/example1-1.txt:178
#: ../../../en/tutorial/example1-1.txt:218
msgid "**NAME**"
msgstr ""

# f84c8b37a0dc4592855371bdb7453cd9
#: ../../../en/tutorial/example1-1.txt:175
msgid ""
"This is the layer identifier.  MapServer uses this name to toggle the layer "
"on and off.  It won't work in this example as we have the layer STATUS set "
"to default.  We will get back to this in later examples."
msgstr ""

# 4a316226036640028fca3f457620393d
#: ../../../en/tutorial/example1-1.txt:189
msgid "**DATA**"
msgstr ""

# aeaede83ac814545bd5abcfade756d40
#: ../../../en/tutorial/example1-1.txt:181
msgid ""
"The name of the data (Shapefile dataset in this case). MapServer supports "
"vector data formats other than ESRI's Shapefile format through the use of "
"OGR library (part of the GDAL software package). Please visit the GDAL "
"project web site at `<http://gdal.osgeo.org/>`_ and read "
"`<http://gdal.osgeo.org/ogr/>`_ to learn more about the different vector "
"formats MapServer supports.  In addition, Jeff McKenna and Tyler Mitchell "
"have written a detailed :ref:`guide to using vector data for MapServer "
"<vector>`."
msgstr ""

# 65b698adc3c64074a4628730cf926a5d
# 81479a6a815c46769681666ae7e31a9b
#: ../../../en/tutorial/example1-1.txt:195
#: ../../../en/tutorial/example1-4.txt:82
msgid "**TYPE**"
msgstr ""

# 9dd99b8df9b847e083bde7401c4802ec
#: ../../../en/tutorial/example1-1.txt:192
msgid ""
"What type of data is it? If it's a vector data, you can specify whether it "
"is a POLYGON, LINE (you use LINE even if your data is technically a "
"POLYLINE), or a POINT. You can also specify RASTER or ANNOTATION data.  Here"
" we want to display POLYGON."
msgstr ""

# 5682188fb844448fa347c93350908602
#: ../../../en/tutorial/example1-1.txt:200
msgid "**STATUS**"
msgstr ""

# 1d1c60c730f24aa6b93863b0812e2067
#: ../../../en/tutorial/example1-1.txt:198
msgid ""
"Layers are turned on or off based on their STATUS. DEFAULT is always on.  ON"
" or OFF works when the LAYER name is passed as part of the query string."
msgstr ""

# 965dadfb175148eba842c1aee8e06efa
#: ../../../en/tutorial/example1-1.txt:203
msgid "CLASS Object"
msgstr ""

# 1cf84b9e473f48bdaf9844929d3256de
#: ../../../en/tutorial/example1-1.txt:205
msgid "Let's look at the CLASS object parameters:"
msgstr ""

# 0976dbbb43dc40a39654129dc0622827
#: ../../../en/tutorial/example1-1.txt:211
msgid "**CLASS**"
msgstr ""

# 43dfb5a066dd4fa384aa9c63224943f3
#: ../../../en/tutorial/example1-1.txt:208
msgid ""
"Marks the beginning of a :ref:`CLASS <class>` object within the LAYER "
"object. You can specify as many classes within a layer (in MapServer  "
"versions < 5, there was a limit that could be changed by editing the map.h "
"header file and recompiling MapServer)."
msgstr ""

# 51dd863e02fb4e44b1d95b1562f7b0ca
#: ../../../en/tutorial/example1-1.txt:214
msgid ""
"The descriptive identifier for this CLASS. LAYER objects can have multiple "
"classes, just like MAP objects can have multiple layers. CLASS names are "
"used by MapServer as labels for the legend so make sure to use an "
"appropriate descriptive name when naming classes. We will talk about legends"
" later in this tutorial."
msgstr ""

# daa0b4eab55c4867b2608d6ed7bcc2ae
#: ../../../en/tutorial/example1-1.txt:221
msgid "STYLE Object"
msgstr ""

# c56a573aaa344b5e8da2a43770beecf0
#: ../../../en/tutorial/example1-1.txt:223
msgid "And finally, let's look at the STYLE object parameters:"
msgstr ""

# 0a5aebfd3aef4a6f9c3aba0815203e0d
#: ../../../en/tutorial/example1-1.txt:228
msgid "**STYLE**"
msgstr ""

# 350b3c9f23714168a3424f48a0b145b8
#: ../../../en/tutorial/example1-1.txt:226
msgid ""
"Marks the beginning of the :ref:`STYLE <style>` object.  You can define "
"multiple styles within a class.  This is useful when you want to overlay a "
"style over another."
msgstr ""

# 428b4229d673465b84aa843c3aaf1d1a
# 1c3804991c854c879675b49c587b5f0f
#: ../../../en/tutorial/example1-1.txt:232
#: ../../../en/tutorial/example1-4.txt:59
msgid "**COLOR**"
msgstr ""

# 48311ad6eafe430ab0bc3c03db27a969
#: ../../../en/tutorial/example1-1.txt:231
msgid ""
"This is the fill color of the polygon. In case the TYPE is LINE, this is the"
" line color. The values are in RGB format."
msgstr ""

# 4f17427640194997b23254b5d6d73e46
#: ../../../en/tutorial/example1-1.txt:238
msgid "**OUTLINECOLOR**"
msgstr ""

# 07a86455738c493da63ecc003b321787
#: ../../../en/tutorial/example1-1.txt:235
msgid ""
"This is the outline color of the polygons. The values are in RGB format.  "
"MapServer doesn't draw polygon outlines by default, so if you want to see "
"polygon boundaries, you will want to define an OUTLINECOLOR."
msgstr ""

# 05660649f06e4a4d86dd3c7e2d866f56
#: ../../../en/tutorial/example1-1.txt:240
msgid ""
"This ends the first example in this tutorial. You are encouraged to change "
"the values of the keywords in the mapfile. It will help you understand what "
"these keywords do."
msgstr ""

# 91106acb133c45dd834b1c1a1507c04d
#: ../../../en/tutorial/example1-1.txt:246
msgid ""
":ref:`Back to Section 1 index <tutorial_section1>` | :ref:`Proceed to "
"Example 1.2 <example1-2>`"
msgstr ""

# b0dcf7d3cc884c36bf570cff5aff92a3
#: ../../../en/tutorial/example1-1-map.txt:6
msgid "Example1-1.map"
msgstr ""

# 9332df5e81b84e799980ddcb481e796b
#: ../../../en/tutorial/example1-2.txt:7
msgid "Example 1.2"
msgstr ""

# 80829e7f5c544428a8242873d8bc51a9
#: ../../../en/tutorial/example1-2.txt:10
msgid "Static Map with Two Layers"
msgstr ""

# 3095470586654d7398df1a56a054c05c
#: ../../../en/tutorial/example1-2.txt:14
msgid ""
"As in the first example, this image was generated by linking the source of "
"the <img> tag to this URL: `<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example1-2.map&layer=states_poly&layer=states_line&mode=map>`_."
" This is how most of the examples in this section work."
msgstr ""

# 637a77058f1b4fb293cf75d6f67f6d76
#: ../../../en/tutorial/example1-2.txt:19
msgid ""
"Anyway, you'll notice that the map here is the same as the first example.  "
"Yes, but the mapfile is different. Have a look."
msgstr ""

# 850c30a790d4431d8136a01578b37ccd
#: ../../../en/tutorial/example1-2.txt:22
msgid ""
"This is what the mapfile looks like: :ref:`Example1-2.map <example1-2-map>`"
msgstr ""

# d3245ea8d9734a5aa90ac30eb21db924
# 64a86f3ec6b049b1926b8b4dfab8e627
# 7542811eef5d4decb922cb7a720c4f07
# 48334dc2a73040b3ae9ae1da7317649f
#: ../../../en/tutorial/example1-2.txt:25
#: ../../../en/tutorial/example1-3.txt:18
#: ../../../en/tutorial/example1-4.txt:26
#: ../../../en/tutorial/example1-5.txt:44
msgid "MapFile Structure"
msgstr ""

# 8eeaef88c423405b8bd905bb696f318c
# 5670ad56dc0a4c209510e56f872243bb
# 751fed525c1540c78b7f6a5f6b1aa125
#: ../../../en/tutorial/example1-2.txt:27
#: ../../../en/tutorial/example1-3.txt:22
#: ../../../en/tutorial/example1-5.txt:48
msgid "The mapfile structure, by objects, looks like this::"
msgstr ""

# 22c8b2dc8e1543d481bc022bd3ec08ed
#: ../../../en/tutorial/example1-2.txt:34
msgid ""
"Here we split the original layer into two layers. The first layer is still a"
" polygon layer but the :ref:`STYLE object <style>` no longer has "
"OUTLINECOLOR, such as:"
msgstr ""

# 3e1e3997cd974d769ef3c06c13acaba9
#: ../../../en/tutorial/example1-2.txt:52
msgid ""
"The second layer is similar to the first except that the TYPE is changed to "
"LINE and the COLOR in the STYLE is changed to the same color as the "
"OUTLINECOLOR in the first example. This produces the same image as the first"
" one."
msgstr ""

# 9cde8934b245446aa5fe3f44db81510d
#: ../../../en/tutorial/example1-2.txt:71
msgid "So, why do it this way?"
msgstr ""

# 46a5c74dda9c4c2cb9cf79e51787e678
#: ../../../en/tutorial/example1-2.txt:73
msgid ""
"If we continue to add layers on top of the states layer, the outline will "
"most likely be covered up by these other layers.  To still see the state "
"boundaries after we add these other layers, we have to separate the states "
"boundary line layer from the states polygon layer and put it on top of the "
"other other layers.  There is order in how we define/add layers and you'll "
"see it clearly as we proceed in this section."
msgstr ""

# 07b805038466443fb477f0e5e00c8af5
#: ../../../en/tutorial/example1-2.txt:83
msgid ""
":ref:`Back to Example 1.1 <example1-1>` | :ref:`Proceed to Example 1.3 "
"<example1-3>`"
msgstr ""

# baabd8f5a04747db8211c0de4aef3711
#: ../../../en/tutorial/example1-2-map.txt:6
msgid "Example1-2.map"
msgstr ""

# 85c344131da04127850a2ededf692eca
#: ../../../en/tutorial/example1-3.txt:7
msgid "Example 1.3"
msgstr ""

# 2fb4257ba1e644d1a45cb28d072073c0
#: ../../../en/tutorial/example1-3.txt:10
msgid "Displaying Classes in a Layer"
msgstr ""

# f74522abd74141e89a4bfb66a86ad223
#: ../../../en/tutorial/example1-3.txt:12
msgid ""
"By using non-spatial attribute information in the data, we can create a map "
"like this:"
msgstr ""

# 32d8ca06d6cd455fac3a41408594e90d
#: ../../../en/tutorial/example1-3.txt:20
msgid ""
"This is what the mapfile looks like: :ref:`Example1-3.map <example1-3-map>`."
msgstr ""

# beab61a01e494f98b6a992f048dc7897
#: ../../../en/tutorial/example1-3.txt:32
msgid "Keywords"
msgstr ""

# 4f483421a7ba48689233afc55ec3af32
#: ../../../en/tutorial/example1-3.txt:34
msgid ""
"Our mapfile still only has two layers but the polygon layer has been broken "
"down into two classes.  Let's have a look at the additional parameters:"
msgstr ""

# 27e7e5065e4b41caad529626aef1440a
#: ../../../en/tutorial/example1-3.txt:52
msgid "**CLASSITEM**"
msgstr ""

# 1acea979d74747f5802505fd23046a52
#: ../../../en/tutorial/example1-3.txt:39
msgid ""
"This keyword is used to specify what attribute to use in separating the "
"class objects.  In this example that attribute is \"CLASS\".  If you open "
"the database file associated with this layer's shapefile, you'll see that "
"there's a column (attribute) called \"CLASS\"."
msgstr ""

# fbc5ff88ad1e484280d4adacadc15183
#: ../../../en/tutorial/example1-3.txt:44
msgid ""
"How do we know which attribute to use?  Well, database records in shapefiles"
" are stored in DBF files.  You can open it in a spreadsheet program such as "
"Openoffice.org's Calc, or in a desktop GIS software such as QGIS, Thuban, or"
" ArcView.  If your data came with a metadata (and it should!), you can skim "
"through through that metadata file for attribute information.  You can also "
"use \"ogrinfo\" to display basic attribute info in your shapefiles--look "
"back at example 1.1 (the last few lines after \"Layer SRS WKT:\" show the "
"attribute names and types)."
msgstr ""

# a73df109a3964701af696e797b5fd6c3
#: ../../../en/tutorial/example1-3.txt:59
msgid "**EXPRESSION**"
msgstr ""

# a3891ce9ad754450a03c28d0c919e52d
#: ../../../en/tutorial/example1-3.txt:55
msgid ""
"For each class, we specify what attribute value to use.  This is the "
"simplest form of EXPRESSION.  EXPRESSIONs can be even more complex than "
"this, allowing one to evaluate regular or logical expressions.  Please look "
"at :ref:`expressions` in the mapfile reference to see what you can do with "
"EXPRESSION."
msgstr ""

# 9b3063d5da134617933efafdba85e7f3
#: ../../../en/tutorial/example1-3.txt:63
msgid ""
":ref:`Back to Example 1.2 <example1-2>` | :ref:`Proceed to Example 1.4 "
"<example1-4>`"
msgstr ""

# b4c44c2719a645469584d5944b817c41
#: ../../../en/tutorial/example1-3-map.txt:6
msgid "Example1-3.map"
msgstr ""

# ba241701900648f4a06fc7a8e38adb06
#: ../../../en/tutorial/example1-4.txt:7
msgid "Example 1.4"
msgstr ""

# 44dbe451f7cb471c8cee709c9c84a72a
#: ../../../en/tutorial/example1-4.txt:10
msgid "Labeling the Map"
msgstr ""

# 4d9b5282acf94074b25da418d52178e3
#: ../../../en/tutorial/example1-4.txt:12
msgid "We can also add labels to our map..."
msgstr ""

# 47714a978e2445f4a3f4966b0391ae68
#: ../../../en/tutorial/example1-4.txt:16
msgid ""
"MapServer has a very flexible labeling engine.  It supports native bitmap as"
" well as truetype fonts.  Font scaling is supported with truetype. The "
"labeling angles and placements can be customized...  If you take the time to"
" learn the many parameters involved in creating good labels, you will be "
"rewarded with informative and aesthetically pleasing maps."
msgstr ""

# a038599a8767469daf1137b6230fc07a
#: ../../../en/tutorial/example1-4.txt:23
msgid ""
"This is what the map file looks like: :ref:`Example1-4.map "
"<example1-4-map>`."
msgstr ""

# a33ed9d5f52a4232b4176939d5818a76
#: ../../../en/tutorial/example1-4.txt:28
msgid "The map file structure, by objects, looks like this:"
msgstr ""

# ffc67060ab804134922ca41c74200374
#: ../../../en/tutorial/example1-4.txt:38
msgid "The LABEL Object and Keywords"
msgstr ""

# 6ae05432514b46a58ad8ccc975041f08
#: ../../../en/tutorial/example1-4.txt:40
msgid "Here we introduce a few more parameters along with the LABEL object:"
msgstr ""

# 5f5eef3b7dff44f996a08c2424f71b56
#: ../../../en/tutorial/example1-4.txt:47
msgid "**FONTSET**"
msgstr ""

# 2f866453ca714a6aa6214d9a840004c1
#: ../../../en/tutorial/example1-4.txt:43
msgid ""
"Here we specify the full path to our truetype fonts list (or fontset) file. "
"This file lists each of the available fonts. See the file itself and the "
":ref:`MapServer fontset documentation <fontset>` for more info.  FONTSET is "
"a parameter of the MAP object."
msgstr ""

# 899572761e194db78084bd084be2de6a
#: ../../../en/tutorial/example1-4.txt:51
msgid "**LABELITEM**"
msgstr ""

# a7300d01bf3c4d359938e5435d0d8e32
#: ../../../en/tutorial/example1-4.txt:50
msgid ""
"This specifies which data attribute to use for labeling, in this case "
"\"STATE\". LABELITEM is a parameter of the LAYER object."
msgstr ""

# 993afc18d9f5433f99606af50ef772f8
#: ../../../en/tutorial/example1-4.txt:55
msgid "**LABEL**"
msgstr ""

# ed53ee13f9f349d5895585d0187abdda
#: ../../../en/tutorial/example1-4.txt:54
msgid ""
"Marks the beginning of the LABEL object. The label object can be used under "
"other objects (i.e. the SCALEBAR object)."
msgstr ""

# 1e2adf32eec84473b48ed7dcd34b756b
#: ../../../en/tutorial/example1-4.txt:58
msgid "Within the LABEL object, COLOR specifies the color of the label text."
msgstr ""

# e64ca31257984bde9602f438db69d1f7
#: ../../../en/tutorial/example1-4.txt:67
msgid "**SHADOWCOLOR - deprecated**"
msgstr ""

# 01e0bad8950342efa8bc9a157f7b4e8d
#: ../../../en/tutorial/example1-4.txt:62
msgid "This specifies the shadow color of the label text."
msgstr ""

# 61415e60da6f4e3db95ffbad5a23f275
# 9505e934654e4bf5a0c28b6d378c9703
#: ../../../en/tutorial/example1-4.txt:66
#: ../../../en/tutorial/example1-4.txt:76
msgid ""
"Since MapServer  6, LABEL STYLE with GEOMTRANSFORM LABELPOLY must be used "
"instead.  The tutorial files have not been updated."
msgstr ""

# 21483a1c893645f1b97844d10c00fead
#: ../../../en/tutorial/example1-4.txt:77
msgid "**SHADOWSIZE - deprecated**"
msgstr ""

# 40d1b2cac36a4a50abe94079b835c7e7
#: ../../../en/tutorial/example1-4.txt:70
msgid ""
"Specifies the shadow size. The value corresponds to the X and the Y shifts "
"in pixels. So, \"2 2\" means two pixels wide by two pixels high."
msgstr ""

# 6d142b89ebcc40dc9965f26c824c3189
#: ../../../en/tutorial/example1-4.txt:80
msgid ""
"Within the LABEL object, TYPE specifies what type of font to use. We have "
"the choice of TRUETYPE or BITMAP (the built-in fonts). We choose TRUETYPE."
msgstr ""

# ea3a0f8110714fbcb3b977593b60aec6
#: ../../../en/tutorial/example1-4.txt:86
msgid "**FONT**"
msgstr ""

# 9b814efa7c054b949e137fd80fa65dc3
#: ../../../en/tutorial/example1-4.txt:85
msgid ""
"If you specify TYPE as TRUETYPE, you need to specify what font to use.  The "
"value here is the \"alias\" in the font list file."
msgstr ""

# ed567e05f8984a27b75d487f232e975c
#: ../../../en/tutorial/example1-4.txt:89
msgid ""
"If using truetype fonts, the value is size in pixels. If bitmap, you can say"
" something like \"small\" or \"large\"."
msgstr ""

# 40138f45a3d14814b5626416cbb8c9ed
#: ../../../en/tutorial/example1-4.txt:94
msgid "**ANTIALIAS**"
msgstr ""

# c6acd5384c4d423f9e403b77b4f8dada
#: ../../../en/tutorial/example1-4.txt:93
msgid ""
"This turns truetype antialiasing on or off. Remember the value isn't on or "
"off but TRUE or FALSE."
msgstr ""

# c7f0ef00e8c44325b7730c0f02cd29a1
#: ../../../en/tutorial/example1-4.txt:106
msgid "**POSITION**"
msgstr ""

# 2208f4ebb945443381d94cb961c1f608
#: ../../../en/tutorial/example1-4.txt:97
msgid ""
"Where to position the label text in relation to the label points. The value "
"is a combination of vertical and horizontal positions. You have the "
"following choices for vertical alignment: C for center, U for upper, and L "
"for lower. For horizontal alignment you have the following choices: C for "
"center, L for left, and R for right. So, to align the label text to the "
"center of label ID you'd use the value \"CC\" (center-center). Or if you'd "
"like it to be on the lower left of the ID, you'd use LL. Another way is to "
"let MapServer decide the best position for your labels. For this you would "
"use the value \"AUTO\"."
msgstr ""

# 60561f8bc344431c8d5539d223a7bf36
#: ../../../en/tutorial/example1-4.txt:111
msgid "**PARTIALS**"
msgstr ""

# b73583129c794c70868e5942f3221b0b
#: ../../../en/tutorial/example1-4.txt:109
msgid ""
"Tells MapServer whether to generate incomplete label texts or not. The "
"default here is not to generate fragments of a label text. The value is "
"either TRUE or FALSE."
msgstr ""

# ad560c524cda482c9d1a0951ce33747a
#: ../../../en/tutorial/example1-4.txt:115
msgid "**MINDISTANCE**"
msgstr ""

# 78be50094b1c46419ce5418009f25bf7
#: ../../../en/tutorial/example1-4.txt:114
msgid ""
"This is the minimum distance in pixels between duplicate labels. See what "
"happens if you increase or decrease this value."
msgstr ""

# 1eba55d1204e4cd0a01bf423dc868779
#: ../../../en/tutorial/example1-4.txt:117
msgid "**BUFFER**"
msgstr ""

# fae5d6a842a84483925314b900a81996
#: ../../../en/tutorial/example1-4.txt:119
msgid ""
"The padding (in pixels) for each label. This is used to enhance readability."
" A BUFFER of 4 pixels mean that no label will be drawn within four pixels of"
" each other. Again, change to see how it works."
msgstr ""

# d7973482b80a4e59b4e89c3a2c6c0c61
#: ../../../en/tutorial/example1-4.txt:124
msgid ""
"You can also create labels separate from a POLYGON layer. You do this with "
"the ANNOTATION data type. Have a look at the next example's map file to see "
"how you'd implement this kind of labeling.  You will notice that the CLASS "
"object within the \"label\" layer has a COLOR parameter value of \"-1 -1 "
"-1\". The negative number tells MapServer to give this CLASS a transparent "
"color (the label IDs don't show up). Once again, play with the values to "
"understand how it affects the map."
msgstr ""

# fa81817b58ba4cc5af2ed69e76b2ab42
#: ../../../en/tutorial/example1-4.txt:134
msgid ""
":ref:`Back to Example 1.3 <example1-3>` | :ref:`Proceed to Example 1.5 "
"<example1-5>`"
msgstr ""

# 3cc7bb3373a04ca89a3bca1cbc8eb78f
#: ../../../en/tutorial/example1-4-map.txt:6
msgid "Example1-4.map"
msgstr ""

# 106fafc3841d4de58b535e2dcfd8d50d
#: ../../../en/tutorial/example1-5.txt:7
msgid "Example 1.5"
msgstr ""

# 6d11e6ee6cf44ca0a1b458281ca9b718
#: ../../../en/tutorial/example1-5.txt:10
msgid "Adding a Raster Layer"
msgstr ""

# 83783b964cd24cf4a21ee642dd8952f0
#: ../../../en/tutorial/example1-5.txt:14
msgid ""
"In addition to vector data support (point, lines, polygons, and "
"annotations), MapServer can also display raster data. Through the use of "
"GDAL library, MapServer can input and output multiple raster formats. "
"Whereas in versions prior to 4.x raster input is limited to single layer, "
"grayscale or indexed color images, recent MapServer versions support RGB and"
" multispectral (multi-layer) images. This example shows how to select what "
"layers to display when using multispectral data."
msgstr ""

# 9bc02a73e05d4f9789e355c3ae57396e
#: ../../../en/tutorial/example1-5.txt:25
msgid ""
"There might be a noticeable performance hit when using RGB and multispectral"
" images."
msgstr ""

# d5b4faad994740069d7e09516d1a862c
#: ../../../en/tutorial/example1-5.txt:28
msgid ""
"Because MapServer 5.x uses AGG or GD version 2.0.x to generate output "
"images, it supports RGB (24-bit or true color) output as well. So, along "
"with 8-bit (indexed color or grayscale) PNG8, you can now also use PNG (true"
" color) for output. This example uses PNG as IMAGETYPE."
msgstr ""

# cf21660b35624af992a5fa9688cadc7c
#: ../../../en/tutorial/example1-5.txt:36
msgid ""
"As with RGB input, there might be a noticeable performance hit when using "
"PNG compared to PNG8."
msgstr ""

# 4123878d1a7d495c88585d07c7e8337c
#: ../../../en/tutorial/example1-5.txt:39
msgid ""
"MapServer can actually use GDAL to generate output images as well, but "
"that's another topic. If you want to know more about it, look at the "
":ref:`OUTPUTFORMAT <outputformat>` object in the mapfile reference."
msgstr ""

# 959d1f8202e144edbab9a19506383341
#: ../../../en/tutorial/example1-5.txt:46
msgid ""
"This is what the mapfile looks like: :ref:`Example1-5.map <example1-5-map>`"
msgstr ""

# 5c832bbbad3749b48f8b7db90ad5d90a
#: ../../../en/tutorial/example1-5.txt:59
msgid ""
"When you look at the mapfile, you'll see that the new LAYER object is added "
"below (after) the state POLYGON layer. Why? MapServer displays layers in "
"reverse order: last in, first out (LIFO). The first layer defined in the "
"mapfile is drawn at the bottom of the map."
msgstr ""

# 0d1630e7f22542f2af29fceda6add3b1
#: ../../../en/tutorial/example1-5.txt:64
msgid ""
"So, if we have drawn the state POLYGON layer, it would be on the bottom. "
"Since the raster layer gets drawn on top of it, we won't see it. That's why "
"the first layer gets the STATUS value of OFF. The state LINE layer is "
"defined below the raster layer so it gets drawn on top (and you can see it)."
" This is why we separated the state LINE layer from the state POLYGON layer."
" Of course the labels get drawn on top of everything."
msgstr ""

# 263fc72fc873462e866de82050a4a3de
#: ../../../en/tutorial/example1-5.txt:71
msgid ""
"MapServer can automatically turn layers on or off based on the status of "
"other layers (say you want the states polygon layer turned off when the "
"raster layer is turned on). This is done by using the REQUIRES parameter. "
"Keep this in mind as you might want to use it once you start creating your "
"own MapServer applications."
msgstr ""

# 9e9e9326cda04429bdc95b2c4bf179b7
#: ../../../en/tutorial/example1-5.txt:78
msgid "Parameters"
msgstr ""

# a05c2449473146039e2b8843e2dff423
#: ../../../en/tutorial/example1-5.txt:80
msgid "Let's have a look at the new parameters introduced in the mapfile:"
msgstr ""

# b0b58876fb574e49bf853e7c77449951
#: ../../../en/tutorial/example1-5.txt:83
msgid ""
"PNG is the 24-bit or true-color version of the PNG format.  By the way, try "
"changing this value to PNG8.  Notice the time it takes to generate the image"
" using either formats. In choosing between true color and indexed color, "
"take into account the time it takes to generate the image."
msgstr ""

# 5812cd4ad33a46cb8112772444481dfd
#: ../../../en/tutorial/example1-5.txt:94
msgid "**SYMBOLSET**"
msgstr ""

# f65f3c95a4c94cd38d9ea0e95207380f
#: ../../../en/tutorial/example1-5.txt:90
msgid ""
"Points to the path of the symbol definition file. The symbols in this file "
"are referenced by the SYMBOL parameter in the :ref:`CLASS <class>` object.  "
"It's not really needed at this point but I thought I'd throw this here now."
"  Please refer to the :ref:`Cartographic Symbol Reference "
"<sym_construction>` for further information."
msgstr ""

# 1a1ebabca9ea41cab49453ae5676b0b2
#: ../../../en/tutorial/example1-5.txt:103
msgid "**DATA raster/mod09a12003161_ugl_ll_8bit.tif**"
msgstr ""

# 42f38b1bb976484787c2f82fc1f3b0ea
#: ../../../en/tutorial/example1-5.txt:97
msgid ""
"In the newly added LAYER object, the DATA parameter points to a GeoTIFF "
"image.  Like vector datasets, MapServer supports multiple raster file "
"formats. This support is accomplished through use of the GDAL library. For "
"more information on the different raster formats supported by MapServer and "
"for general discussion on the use of rasters in MapServer, please read the "
":ref:`Raster Data Reference <raster>`."
msgstr ""

# beb3c62281094fa48abf9ab9cbf23087
# 0ca5bc80f44d4c59913be10daff54698
#: ../../../en/tutorial/example1-5.txt:108
#: ../../../en/tutorial/example1-7.txt:51
msgid "**TYPE RASTER**"
msgstr ""

# b175b2c015d94d1c88ef03202d51d5b2
#: ../../../en/tutorial/example1-5.txt:106
msgid ""
"When using raster data (images) we use the value RASTER for the parameter "
"TYPE, as opposed to the POLYGON, LINE, and POINT values for vector data and "
"ANNOTATION for label IDs."
msgstr ""

# f88698e1e98b4bca9d111a211912668c
#: ../../../en/tutorial/example1-5.txt:115
msgid "**PROCESSING \"BANDS=1,2,3\"**"
msgstr ""

# ad8dea3e05c04c648dc0be9732ab5e2c
#: ../../../en/tutorial/example1-5.txt:111
msgid ""
"This LAYER object parameter was added in MapServer 4.x. The :ref:`PROCESSING"
" <layer>` keyword has many values but in this case we are using it to select"
" which bands in a multispectral image to display. The values here are "
"strings that will be passed to the GDAL library."
msgstr ""

# a44a7f2370d645c3961404c2708dc50a
#: ../../../en/tutorial/example1-5.txt:121
msgid "**OFFSITE**"
msgstr ""

# f44fc443b2de41c59dda015da31a1f3c
#: ../../../en/tutorial/example1-5.txt:118
msgid ""
"This parameter tells MapServer what pixel values to render as background (or"
" ignore). You can get the pixel values using image processing or image "
"manipulation programs (i.e. Imagine, Photoshop, Gimp)."
msgstr ""

# ae9905040b544f738ecf9bac1be57227
#: ../../../en/tutorial/example1-5.txt:124
msgid "RGB vs Indexed Color Image"
msgstr ""

# 41c4f6b94efa473593185e2e74e18ed4
#: ../../../en/tutorial/example1-5.txt:126
msgid ""
"To compare map creation speed when using RGB image as opposed to indexed "
"color image, replace the following lines in the mapfile:"
msgstr ""

# 71600b1443b54995a822f4e7745ed711
#: ../../../en/tutorial/example1-5.txt:137
msgid "with these:"
msgstr ""

# 1bd82a4e356f4817b8f8d1ce2e0c56dd
#: ../../../en/tutorial/example1-5.txt:147
msgid "Also, try changing the IMAGETYPE from PNG to PNG8."
msgstr ""

# febdd32165c340348ddc8daf5a8c0116
#: ../../../en/tutorial/example1-5.txt:151
msgid ""
":ref:`Back to Example 1.4 <example1-4>` | :ref:`Proceed to Example 1.6 "
"<example1-6>`"
msgstr ""

# 4b83fcb6e87c4192bc0b323dc80a96b4
#: ../../../en/tutorial/example1-5-map.txt:6
msgid "Example1-5.map"
msgstr ""

# 4c2d54917b074676a1562ca630eba769
#: ../../../en/tutorial/example1-6.txt:7
msgid "Example 1.6"
msgstr ""

# cd9e495d7c684d989200833fd072beca
#: ../../../en/tutorial/example1-6.txt:10
msgid "Defining Projections and Extents"
msgstr ""

# be59a1ce870247c18df593ab864306c9
#: ../../../en/tutorial/example1-6.txt:14
msgid "Whoa! What happened here?"
msgstr ""

# 59069c2426b64b5fac2cd8ff5cc2c32a
#: ../../../en/tutorial/example1-6.txt:16
msgid ""
"You've just experienced on-the-fly reprojection. When a PROJECTION object is"
" defined in the mapfile, MapServer passes the layer and projection info to "
"the Proj.4 library which does the reprojection.  For more information about "
"the Proj.4 library, please visit `<http://proj.maptools.org/>`_."
msgstr ""

# 313fb13f61744f068460f677300a140a
#: ../../../en/tutorial/example1-6.txt:21
msgid ""
"This example attempts to shed some light on the projection support in "
"MapServer."
msgstr ""

# db0d8bebbe2945429f1ccb79531844ca
#: ../../../en/tutorial/example1-6.txt:23
msgid ""
"This is what the mapfile looks like: :ref:`Example1-6.map <example1-6-map>`"
msgstr ""

# e475c031353541b6a0490966c82cf207
#: ../../../en/tutorial/example1-6.txt:25
msgid ""
"The first thing you might have noticed with our mapfile is the original "
"EXTENT has been commented out and the new EXTENT values don't look anything "
"like latitude and longitude values. Also, we have added a PROJECTION object "
"near the top and within each of our layers."
msgstr ""

# f2c82b5418084692848b2f64743de10c
#: ../../../en/tutorial/example1-6.txt:30
msgid "Let's have a look at the new object and parameter::"
msgstr ""

# 724e2eb935b84646bccdf62456fbd853
#: ../../../en/tutorial/example1-6.txt:34
msgid ""
"The extent we provide to MapServer needs to be in the same units as the "
"output projection.  Since Lambert Azimuthal Equal-Area's units are in "
"meters, we have to give the new extent in meters.  We can calculate the new "
"extent using ArcView or some other GIS package, or you can use Proj.4's "
"cs2cs utility.  The command below is what can be used to reproject the "
"original extent values::"
msgstr ""

# 089af0b4ec2a448aa66cff5fabd9fa99
#: ../../../en/tutorial/example1-6.txt:42
msgid ""
"After typing the command, enter the southwestern coordinate pair (the lower "
"left coordinates), separated by a space::"
msgstr ""

# b1ff10f69976426d88decef5ee93ad12
#: ../../../en/tutorial/example1-6.txt:47
msgid "to which the \"cs2cs\" utility gives the values::"
msgstr ""

# 731b4bf79b99423e9b921b7527de6529
#: ../../../en/tutorial/example1-6.txt:51
msgid ""
"I then type the northeastern coordinate pair (upper right corner "
"coordinates), again separated by space::"
msgstr ""

# 20100c7c93f344479647624e95192cc8
#: ../../../en/tutorial/example1-6.txt:56
msgid "and the following values are returned::"
msgstr ""

# c964b26bd5ba488cb15fa7465229bd7e
#: ../../../en/tutorial/example1-6.txt:60
msgid ""
"You will notice that \"cs2cs\" returns a set of three values.  You can "
"ignore the third value, 0.000, as it means to represent altitute (which "
"we're not using). Anyway, we can now present the EXTENT as::"
msgstr ""

# 49df92c7e5f048aea1bf5c1331f0fb01
#: ../../../en/tutorial/example1-6.txt:66
msgid ""
"But it doesn't match up the extent above, you say.  Well, that's what "
"usually happens when you reproject -- the map doesn't necessarily get "
"centered as you'd expect.  You can fudge around it, taking a few thousand "
"meters off to the left and adding a few to the right.  Or, you can use a "
"graphical GIS package to give you the extent. `Here are the instructions "
"<http://biometry.gis.umn.edu/tutorial/arcview_extent.html>`_ for getting "
"`EXTENT` using ArcView."
msgstr ""

# 5c1dff47c87b4e7ab3444225cf007682
#: ../../../en/tutorial/example1-6.txt:74
msgid ""
"MapServer can take projection definitions in two ways. The first is shown in"
" the mapfile's output PROJECTION object (the first PROJECTION block). This "
"is the traditional way of passing parameters to the Proj.4 library. The "
"other way is to use the EPSG codes. These codes are standard projection "
"codes (or spatial reference identifiers) as defined by the European "
"Petroleum Survey Group (EPSG). In the case of our Lambert Azimuthal Equal-"
"Area projection, it has a code of \"2163\". If you comment out the four "
"lines after PROJECTION and uncomment the line \"init=epsg:2163\", this will "
"provide the same information to Proj.4. If you want to learn more about EPSG"
" codes, have a look at \"/usr/local/share/proj/epsg\" or "
"\"C:/proj/nad/epsg\" (\"/ms4w/proj/nad\" in MS4W)."
msgstr ""

# 119122f0fd4f4a309870008d18a4f55b
#: ../../../en/tutorial/example1-6.txt:85
msgid "Also, check out the EPSG web site at `<http://www.epsg.org>`_."
msgstr ""

# 714e7e4be1db473c925df25a46dc6d42
#: ../../../en/tutorial/example1-6.txt:87
msgid ""
"If you need to learn more about projections, please look through some of the"
" links below:"
msgstr ""

# b56eb7ba5b844f6e80030675dcf81321
#: ../../../en/tutorial/example1-6.txt:89
msgid ""
"`<http://www.colorado.edu/geography/gcraft/notes/mapproj/mapproj_f.html>`_"
msgstr ""

# e7f6807ab92043a588c6fb0ddd1f2c5c
#: ../../../en/tutorial/example1-6.txt:91
msgid "`<http://www.geography.hunter.cuny.edu/mp/>`_"
msgstr ""

# 7f7fc42e2fea416e9c1486f7d206c387
#: ../../../en/tutorial/example1-6.txt:93
msgid "`<http://www.nationalatlas.gov/articles/mapping/a_projections.html>`_"
msgstr ""

# 97e8358457f545e7aaad81a16d3dc8a5
#: ../../../en/tutorial/example1-6.txt:95
msgid "`<http://en.wikipedia.org/wiki/Map_projection>`_"
msgstr ""

# d86bc45007c44d7f986211157f8810e2
#: ../../../en/tutorial/example1-6.txt:97
msgid "`<http://erg.usgs.gov/isb/pubs/MapProjections/projections.html>`_"
msgstr ""

# 79f72dce865f4e2690eaf12a60125fbe
#: ../../../en/tutorial/example1-6.txt:99
msgid "`<http://spatialreference.org/>`_"
msgstr ""

# 6d0cda997b07446c86c11ff63ae2ba2e
#: ../../../en/tutorial/example1-6.txt:101
msgid "You can find more by searching the web for \"map projection\"."
msgstr ""

# 6b36226efbf44c7bb7ebfd1606b17f47
#: ../../../en/tutorial/example1-6.txt:105
msgid ""
":ref:`Back to Example 1.5 <example1-5>` | :ref:`Proceed to Example 1.7 "
"<example1-7>`"
msgstr ""

# 8030fd9876b44a7db8dc33afb7cf4ba0
#: ../../../en/tutorial/example1-6-map.txt:6
msgid "Example1-6.map"
msgstr ""

# ae7e2557b0724e17ad3abe559fceca6c
#: ../../../en/tutorial/example1-7.txt:7
msgid "Example 1.7"
msgstr ""

# 0fe87a02c39d4643afffd2dcd58171e8
#: ../../../en/tutorial/example1-7.txt:10
msgid "Adding OGC WMS Layers"
msgstr ""

# 96716356bc1c40089704532cb8fd24de
#: ../../../en/tutorial/example1-7.txt:14
msgid ""
"Another exciting feature of MapServer is its ability to use layers from "
"other map servers. In this case, a MapServer application becomes a WMS (or "
"WFS) client. MapServer can also share (or serve up) the layers in the "
"mapfile to other map servers. This makes an application a WMS (or WFS) "
"server. What is WMS or WFS? These are \"web-based interoperability service\""
" specifications published by the Open Geospatial Consortium (OGC). WMS "
"stands for Web Map Service and WFS for Web Feature Service. The difference "
"between these two specifications, in simple terms, is that WMS uses web "
"raster formats (PNG, GIF, JPEG) to share layers while WFS uses GML, the "
"Geography Markup Language. A third OGC interoperability specification is the"
" Web Coverage Services specification or WCS.  MapServer supports WCS at the "
"server level only. To find more information about WMS, WFS, and WCS go the "
"the `OGC's web site <http://www.opengeospatial.org>`_ and look for the `OGC "
"Implementation Specifications "
"<http://www.opengeospatial.org/specs/?page=specs>`_ or `OGC Abstract "
"Specifications <http://www.opengeospatial.org/specs/?page=abstract>`_. The "
"MapServer web site also has :ref:`documentation <documentation>` and `WIKI "
"pages <https://github.com/mapserver/mapserver/wiki>`_ for these "
"specifications."
msgstr ""

# 9e6bb1eac9fc44ca8019957c501229d4
#: ../../../en/tutorial/example1-7.txt:32
msgid "This example shows you how to add a WMS layer in your mapfile."
msgstr ""

# d559e5591aef438aaec5129d41b5321d
# 5d5b0209b97b4edb8b295ca4cb3f3e89
#: ../../../en/tutorial/example1-7.txt:35
#: ../../../en/tutorial/example1-8.txt:19
msgid "The MapFile"
msgstr ""

# 02793739aa5a4deaab6584cc590971ce
#: ../../../en/tutorial/example1-7.txt:37
msgid ""
"This is what the mapfile looks like: :ref:`Example1-7.map <example1-7-map>`"
msgstr ""

# ffd77c4ab5b147aea91b05cc44726928
#: ../../../en/tutorial/example1-7.txt:40
msgid "LAYER Object and WMS Parameters"
msgstr ""

# 9122e8054ab34c11a9a7d2ee5d50bc75
#: ../../../en/tutorial/example1-7.txt:42
msgid "Let's have a look at the WMS layer:"
msgstr ""

# 0fdc0fdf2680456e9a5fe54c40a65baf
#: ../../../en/tutorial/example1-7.txt:45
msgid "**LAYER # MODIS WMS map from JPL**"
msgstr ""

# 11c16f79e3e346a5a3d758233d4eef5c
#: ../../../en/tutorial/example1-7.txt:45
msgid "Marks the start of the WMS LAYER object."
msgstr ""

# 66ad4e38de8a408090a37320bffa1a18
#: ../../../en/tutorial/example1-7.txt:48
msgid "**NAME modis_jpl**"
msgstr ""

# 1acf5d4f6fbd4d018bb2ddbbf721a61e
#: ../../../en/tutorial/example1-7.txt:48
msgid "The LAYER identifier."
msgstr ""

# 8b105824dd164562bd19b3f6bb21cec2
#: ../../../en/tutorial/example1-7.txt:51
msgid "Since this the WMS layer is an image, we use RASTER as LAYER TYPE."
msgstr ""

# 471c2f2dc13e4579879ed95e0ed08fb2
#: ../../../en/tutorial/example1-7.txt:54
msgid "**OFFSITE 0 0 0**"
msgstr ""

# abe7c116517b4ea2a86a541324502849
#: ../../../en/tutorial/example1-7.txt:54
msgid "Ignore the black background color"
msgstr ""

# 2e5ce301021543c5ad9af5018f1d9d44
#: ../../../en/tutorial/example1-7.txt:57
msgid "**STATUS OFF**"
msgstr ""

# 35f20456a16c4ce8903194e6cd849607
#: ../../../en/tutorial/example1-7.txt:57
msgid "Turn this layer off by default."
msgstr ""

# 4aef4da42b194f2395d1be06efe0968d
#: ../../../en/tutorial/example1-7.txt:67
msgid "**CONNECTIONTYPE WMS**"
msgstr ""

# 27928779b81f4969b9bb832345c0596e
#: ../../../en/tutorial/example1-7.txt:60
msgid "The type of LAYER connection to use. The default is LOCAL."
msgstr ""

# 932cba6c8b764542aa91645b559f9d4b
#: ../../../en/tutorial/example1-7.txt:64
msgid ""
"If we have to be explicit, we would add CONNECTIONTYPE LOCAL to all othe "
"vector and raster layers in our mapfile. Instead we only define connection "
"types that are external. WMS is an external data layer, coming from another "
"map server."
msgstr ""

# 4032f3506e9d425f9b4b22144960e538
#: ../../../en/tutorial/example1-7.txt:73
msgid "**CONNECTION \"http://mapus.jpl.nasa.gov/wms.cgi?\"**"
msgstr ""

# a1ad7cb8f6484bb48f2ef03abb563514
#: ../../../en/tutorial/example1-7.txt:70
msgid ""
"The connection string that allows us to *get* the data from another server. "
"In the case of WMS connections, this is a URL.  If we were using a PostGIS "
"database, it would be an SQL statement.  Please note that the string has to "
"be in a single line in your mapfile."
msgstr ""

# d4190171f8c64828883f444ebc33bc4d
#: ../../../en/tutorial/example1-7.txt:79
msgid "**METADATA**"
msgstr ""

# 8d5b1941415b4e37a9a8e8fc90fbc2e2
#: ../../../en/tutorial/example1-7.txt:76
msgid ""
"marks the beginning of the METADATA object for our WMS layer. MapServer uses"
" the parameters defined within this object along with the CONNECTION "
"parameter above to form a valid WMS request to the WMS server."
msgstr ""

# a0b59da2f81440d0a654908eb5d5e462
#: ../../../en/tutorial/example1-7.txt:85
msgid "**\"wms_srs\" \"epsg:4326\"**"
msgstr ""

# 8562c199e05f4d2da497d3718bd665b5
#: ../../../en/tutorial/example1-7.txt:82
msgid ""
"The WMS projection.  Sometimes the WMS server supports more than one "
"projection.  If this is the case you might want to request the map in your "
"output projection (epsg:2163).  Unfortunately, the JPL server doesn't "
"support this projection."
msgstr ""

# 623b00bcbbee4dfca9a5e53f227820b1
#: ../../../en/tutorial/example1-7.txt:88
msgid "**\"wms_name\" \"modis\"**"
msgstr ""

# 5c615eed36654794bed1b5dcda927f39
#: ../../../en/tutorial/example1-7.txt:88
msgid "The WMS layer name. This is like adding the parameter \"layers=modis\"."
msgstr ""

# c4c1305d4d834283a27782412d6eda96
#: ../../../en/tutorial/example1-7.txt:92
msgid "**\"wms_server_version\" \"1.1.1\"**"
msgstr ""

# 7a1fef791245498881675350cb162882
#: ../../../en/tutorial/example1-7.txt:91
msgid ""
"The WMS version the server complies to.  For more options, see "
":ref:`ogc_support`."
msgstr ""

# 413b81f56c7a4ee0ac231d1637cfe191
#: ../../../en/tutorial/example1-7.txt:96
msgid "**\"wms_format\" \"image/jpeg\"**"
msgstr ""

# ce8422617b374aa1b2e8a697c9c33648
#: ../../../en/tutorial/example1-7.txt:95
msgid ""
"The image format we expect to be receiving from the WMS server. You can try "
"replacing the value with *image/png* or something else."
msgstr ""

# 420652ad2f484669ad2190d2f5bc5dd8
#: ../../../en/tutorial/example1-7.txt:99
msgid "**END**"
msgstr ""

# 3d77b3b56f794274ae51d73ad429d0c9
#: ../../../en/tutorial/example1-7.txt:99
msgid "marks the end of the METADATA object"
msgstr ""

# 790ccb6732374b379d8f70f93914ab41
#: ../../../en/tutorial/example1-7.txt:101
msgid ""
"To know more about adding WMS layers to your applications, please visit the "
":ref:`MapServer WMS Client Howto <wms_client>`."
msgstr ""

# b955509e5a7447679ba4dc8ed24598aa
#: ../../../en/tutorial/example1-7.txt:105
msgid "WEB Object Parameters"
msgstr ""

# 515aa41d4af64c49a2b9c292dd48c70c
#: ../../../en/tutorial/example1-7.txt:107
msgid ""
"In addition to adding the WMS layer object, there's also a new object under "
"MAP. This is the WEB object. Within the WEB object are two parameters:"
msgstr ""

# 6dfbc547196242ebb9d7f6d6011afb27
#: ../../../en/tutorial/example1-7.txt:114
msgid "**IMAGEPATH '/data/tmp/'**"
msgstr ""

# 257ef4d96e5b4deeb33a6c1f8581b39a
#: ../../../en/tutorial/example1-7.txt:110
msgid ""
"The absolute local path to a web accessible temporary directory. The user "
"running the web server processes should be able to write to this directory. "
"Make sure that the path includes a slash (/) at the end. (Your IMAGEPATH "
"might look something like this: \"/home/apache/htdocs/tmp/\" or "
"\"C:/Inetpub/wwwroot/tmp/\".)"
msgstr ""

# eafd58dae5ee4edfa2296522f0ddcd12
#: ../../../en/tutorial/example1-7.txt:120
msgid "**IMAGEURL '/tmp/'**"
msgstr ""

# 8394270e9f32456ea29f13561aa98c6a
#: ../../../en/tutorial/example1-7.txt:117
msgid ""
"This is how IMAGEPATH will appear relative to the web server's root "
"directory. If we have to type the full URL for this, it will be "
"\"http://terrasip.gis.umn.edu/tmp/\". Make sure that the path includes a "
"slash (/) at the end."
msgstr ""

# 0b0e43c9a59741a9a0a0e5f300b89245
#: ../../../en/tutorial/example1-7.txt:124
msgid ""
"Finally, within the MAP object, I added a new parameter: NAME. This is the "
"identifier for the MAP object. MapServer uses this as prefix to all images "
"it creates and dumps to the *tmp* directory.  It's not needed at this point "
"but it also doesn't hurt to have it."
msgstr ""

# 504c366e2c7845de816a3a4c815defca
#: ../../../en/tutorial/example1-7.txt:129
msgid ""
"If you would like to share your data layers to other map servers, you will "
"need to add METADATA objects within your MAP object and within each of the "
"LAYER objects you would like to share. All the WMS layers that you added "
"from another server will automatically be cascaded and will also become "
"available to others. To know more about how to make your MapServer "
"application become a WMS server, please read the :ref:`MapServer WMS Server "
"HowTo <wms_server>`.  Documentation also exists for configuring MapServer "
"applications to support the WFS standard, both as a :ref:`server "
"<wfs_server>` and as a :ref:`client <wfs_client>`."
msgstr ""

# 7ac2fd836c6149b7a96df235b8a10020
#: ../../../en/tutorial/example1-7.txt:142
msgid ""
":ref:`Back to Example 1.6 <example1-6>` | :ref:`Proceed to Example 1.8 "
"<example1-8>`"
msgstr ""

# e172ce736c9f49dca7d5fca8a40447ea
#: ../../../en/tutorial/example1-7-map.txt:6
msgid "Example1-7.map"
msgstr ""

# 55b5dd63bf5b4e1cbc03c6e34508d677
#: ../../../en/tutorial/example1-8.txt:7
msgid "Example 1.8"
msgstr ""

# c6a055fb9a7b4c9baf2c3bf27df1dc0d
#: ../../../en/tutorial/example1-8.txt:10
msgid "Changing the Map's Output Format"
msgstr ""

# 4cb2de7635964909bbb8f8077a615375
#: ../../../en/tutorial/example1-8.txt:14
msgid ""
"Depending on the format you choose, the image may not display on your "
"browser. If the link fails to display on your browser, right click on the "
"graphic above and save the link as whatever format you specified on your "
"mapfile."
msgstr ""

# 99ab97e7add6479486e97d3e3cc463a4
#: ../../../en/tutorial/example1-8.txt:21
msgid "Here's the mapfile: :ref:`Example1-8.map <example1-8-map>`"
msgstr ""

# a5bfb74419d24b26ade38ff7b4785c39
#: ../../../en/tutorial/example1-8.txt:24
msgid "OUTPUTFORMAT Object"
msgstr ""

# a754a64b1fbe4554ac62b387176cbeef
#: ../../../en/tutorial/example1-8.txt:26
msgid ""
"Our mapfile now contains a new object, OUTPUTFORMAT. This object is defined "
"within the MAP object and is used in conjunction with the IMAGETYPE keyword."
"  Depending on the libraries you compiled with MapServer, you can have "
"several output format choices.  The AGG library provides PNG, PNG8 and JPEG;"
" The GD library provides GIF; the GDAL library, a source for many of "
"MapServer's input formats, can also provide output to PNG, JPEG, "
"TIFF/GeoTIFF, and other raster formats; the Cairo library provides PDF, PNG "
"and SVG output.  Have a look at the OUTPUTFORMAT object and experiment by "
"changing the IMAGETYPE keyword on you mapfile. The NAME of your OUTPUT "
"format should be used as your IMAGETYPE value ex: IMAGETYPE png or IMAGETYPE"
" png24)."
msgstr ""

# 0f2ebeeb027740a3b4128299511f0935
#: ../../../en/tutorial/example1-8.txt:38
msgid ""
"Please consult the :ref:`OUTPUTFORMAT object reference <outputformat>`."
msgstr ""

# 37cbd3fa77eb442d82a3cbb3eab6aaac
#: ../../../en/tutorial/example1-8.txt:42
msgid ""
":ref:`Back to Example 1.7 <example1-7>` | `Proceed to Example 1.9 "
"<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example1-9.map&layer=states&layer=modis>`_"
msgstr ""

# 03d0cc800a2a4634a0ca5b02966d753e
#: ../../../en/tutorial/example1-8-map.txt:6
msgid "Example1-8.map"
msgstr ""

# c3744a79f2be4f90b29a81dba4ccdd0b
#: ../../../en/tutorial/index.txt:8
msgid "MapServer Tutorial"
msgstr ""

# de4dff68a90d4a9f80bacf559360812b
#: ../../../en/tutorial/index.txt:10
msgid "Pericles S. Nacionales"
msgstr ""

# 9887ad00420a43878a0f55d51957de41
#: ../../../en/tutorial/index.txt:11
msgid "pnaciona at gmail.com"
msgstr ""

# 5d8147d5623a41e98ab8fc5538c93024
#: ../../../en/tutorial/index.txt:12
msgid "Jeff McKenna"
msgstr ""

# a780bc320eb34c8f98b35ceaca925cdd
#: ../../../en/tutorial/index.txt:13
msgid "jmckenna at gatewaygeomatics.com"
msgstr ""

# ef374df0496b4e0689bea1150e3ade3e
#: ../../../en/tutorial/index.txt:14
msgid "2010-04-07"
msgstr ""

# 9b6c2cd05fd640e8ad98e21da55268f9
#: ../../../en/tutorial/index.txt:16
msgid ""
"This tutorial was designed to give new users a quick (relatively speaking) "
"introduction to the concepts behind MapServer. It is arranged into four "
"sections with each section having one or more examples and increasing in "
"complexity.  Users can jump to any section at any time although it is "
"recommended that absolute beginners work on the first three sections "
"sequentially."
msgstr ""

# 270d99fe01344687802ae914df7c9b1b
#: ../../../en/tutorial/index.txt:23
msgid ""
"Section one focuses on basic MapServer configuration concepts such as layer "
"and class ordering, using vector and raster data, projections and labeling."
"  Section two provides examples on how to use HTML templates to create a "
"simple interface for an interactive web mapping application. Section three "
"introduces the use of HTML templates to provide a \"query\" interface. "
"Finally, section four introduces some advanced user interface concepts."
msgstr ""

# 9f19c6aaaff54140831c4e3095ef48b5
#: ../../../en/tutorial/index.txt:42
msgid ":ref:`Begin tutorial <tutorial_background>`"
msgstr ""

# 192c756147594a769f9b7c16312011a4
#: ../../../en/tutorial/index.txt:1
msgid "Tutorial"
msgstr ""

# aad7393a0922453b9dda715f278eef9c
#: ../../../en/tutorial/section1.txt:4
msgid "Section 1: Static Maps and the MapFile"
msgstr ""

# 39f6c8cebc8d4f618a1e27efd5b769e5
#: ../../../en/tutorial/section1.txt:6
msgid ""
"Take a Shapefile dataset. Any Shapefile dataset.  We can use MapServer to "
"display that Shapefile dataset in a web browser. Look..."
msgstr ""

# feb5e3ffd79f4b86a93555cb8e59d23b
#: ../../../en/tutorial/section1.txt:10
msgid ":ref:`Example 1.1 - A map with a single layer <example1-1>`"
msgstr ""

# a16e028706bc4d4fb239803d1c838635
#: ../../../en/tutorial/section1.txt:12
msgid ""
"We can display the same Shapefile dataset repeatedly. We can display the "
"polygon attributes in one LAYER and the line attributes in another..."
msgstr ""

# bcc8b039389c4f33aa42186204a3a49d
#: ../../../en/tutorial/section1.txt:16
msgid ":ref:`Example 1.2 - A map with two layers <example1-2>`"
msgstr ""

# b28614bf174a4a87a285f2ddbcc50d63
#: ../../../en/tutorial/section1.txt:18
msgid ""
"And we can select which parts of the Shapefile dataset to display. We do "
"this using the CLASS object..."
msgstr ""

# 43f7944fdceb4411a61e38667a3626fe
#: ../../../en/tutorial/section1.txt:21
msgid ":ref:`Example 1.3 - Using classes to make a \"useful\" map <example1-3>`"
msgstr ""

# 6c0f455f47d64beda3195b9484f5ae7b
#: ../../../en/tutorial/section1.txt:23
msgid "We can also label our maps..."
msgstr ""

# 1f28a9c4911c42fea6701188871678c1
#: ../../../en/tutorial/section1.txt:25
msgid ":ref:`Example 1.4 - Labeling layers and label layers <example1-4>`"
msgstr ""

# 4237577586d841e68c9c75c688db1b70
#: ../../../en/tutorial/section1.txt:27
msgid ""
"Or add raster data such as satellite images, aerial photographs, or shaded "
"reliefs..."
msgstr ""

# 1489ed9b83b74203ad8980e472a6eba4
#: ../../../en/tutorial/section1.txt:30
msgid ":ref:`Example 1.5 - Adding a raster layer <example1-5>`"
msgstr ""

# 041f477956ba44fbbb387f0b16cd8175
#: ../../../en/tutorial/section1.txt:32
msgid ""
"We can reproject our data from just about any projection to just about "
"any... Yeah, check it out!"
msgstr ""

# 45913ab6a8914d2781aa0e775d923459
#: ../../../en/tutorial/section1.txt:35
msgid ":ref:`Example 1.6 - Projection/Reprojection <example1-6>`"
msgstr ""

# 24f4ebc7b3494dacac84c29a6ff7a4ab
#: ../../../en/tutorial/section1.txt:37
msgid ""
"And we can use layers from other map servers on the Internet (for example "
"WMS servers)..."
msgstr ""

# a5207dd584ae41b9965aaf2cc85189f7
#: ../../../en/tutorial/section1.txt:40
msgid ":ref:`Example 1.7 - Adding a WMS layer <example1-7>`"
msgstr ""

# 739fbc63f9064ab19e51b98508da1f29
#: ../../../en/tutorial/section1.txt:42
msgid "MapServer can output to various formats such as PDF and GeoTIFF."
msgstr ""

# 6c46e25880a54586ad86b44eb59afa2e
#: ../../../en/tutorial/section1.txt:44
msgid ":ref:`Example 1.8 - A different output format <example1-8>`"
msgstr ""

# 62ee0ab3a1aa4673b1420b8f3146a51f
#: ../../../en/tutorial/section1.txt:46
msgid ""
"MapServer not only generates static maps, it can also create interactive "
"maps..."
msgstr ""

# 14ccc97081264f7f9910589757c5c6c4
#: ../../../en/tutorial/section1.txt:49
msgid ""
"`Example 1.9 - The difference between map mode and browse mode "
"<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example1-9.map&layer=states&layer=modis>`_"
msgstr ""

# 8c8c10e8401b4270b791f40de59c7964
#: ../../../en/tutorial/section1.txt:53
msgid ""
":ref:`Back to Tutorial home <tutorial>` | :ref:`Proceed to Section 2 "
"<tutorial_section2>`"
msgstr ""

# 92ae33204b514423881862b275e89fd5
#: ../../../en/tutorial/section2.txt:4
msgid "Section 2: CGI variables and the User Interface"
msgstr ""

# 22645363b0154c25ad4569c15c475a1d
#: ../../../en/tutorial/section2.txt:6
msgid ""
"So far we have only looked at the mapfile when creating maps. In creating "
"web mapping applications, it is usually our intention to make maps that can "
"be changed by the user (of the application) interactively. That is, a user "
"should be able to change the content of (or the information in) the map. To "
"accomplish this interactivity, we use the MapServer HTML templates."
msgstr ""

# ecc46f1015f24103846915b7805f6ef2
#: ../../../en/tutorial/section2.txt:14
msgid "HTML Templates"
msgstr ""

# 01211de29d5c41a1855f1a5d514dbc34
#: ../../../en/tutorial/section2.txt:16
msgid ""
"A MapServer HTML template is essentially an HTML file with a few MapServer "
"specific tags.  These tags are the MapServer CGI variables and are enclosed "
"in square brackets \"[]\".  When the MapServer CGI program processes an "
"application, it first parses the query string and the mapfile, and produces "
"the necessary output. Some of this output will need to be written to the "
"HTML template file which you would have to also specify in the mapfile using"
" the web template keyword (or in a separate HTML initialization file). The "
"CGI program will replace all the variables in the HTML template with the "
"proper value before sending it back to the web browser. If you are to "
"directly view an HTML template in a web browser, there won't be any maps "
"rendered and you will instead get blank images and other junk."
msgstr ""

# 51b49040ff6b47a8acd00c1d5ccb83dd
#: ../../../en/tutorial/section2.txt:30
msgid "Variables"
msgstr ""

# 53d1437f328f4002adc3421c292a935a
#: ../../../en/tutorial/section2.txt:32
msgid ""
"MapServer provides several variables for web mapping: the \"img\" variable "
"which you've seen in Example 1.9 is but one example. There area few core CGI"
" variables originally designed as part of the mapping interface but "
"practically all the mapfile parameters can be defined as variables. The "
"definitive reference to the MapServer  CGI variables can be found :ref:`here"
" <cgi>`."
msgstr ""

# 4d36950a924a4b449abecc8bd452a434
#: ../../../en/tutorial/section2.txt:39
msgid ""
"We can also define our own variables, which MapServer will pass along to our"
" application.  For example, we can create a variable called \"root\" to "
"represent the root directory of this tutorial, the value for \"root\" will "
"then be \"/tutorial\". When the MapServer CGI program processes our HTML "
"template, it will replace every instance of he \"[root]\" tag with "
"\"/tutorial\". You will see this in action for each of the following "
"examples."
msgstr ""

# e8817074d5864e6bb30ba816ec21b1a0
#: ../../../en/tutorial/section2.txt:48
msgid "Examples"
msgstr ""

# e6065571cf5f46cf947c4e6e7ed3f763
#: ../../../en/tutorial/section2.txt:50
msgid "So, let's build an interactive interface for our application..."
msgstr ""

# a4aeba057c5c4179a0fc2d8b09fd8ccf
#: ../../../en/tutorial/section2.txt:52
msgid ""
"Users of a web mapping application should be able to pan and zoom on the "
"map: `Example 2.1 - Pan and Zoom Controls <http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-1.html>`_"
msgstr ""

# b44201918bf142afbb9b03249ab00635
#: ../../../en/tutorial/section2.txt:55
msgid ""
"They also should be able to turn on and off layers on a map: `Example 2.2 - "
"Layer Control <http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-2.html>`_"
msgstr ""

# 0e6b724f67e44f0a995e1dfcbd197347
#: ../../../en/tutorial/section2.txt:58
msgid ""
"A map should always include a scalebar. `Example 2.3 - Adding a Scalebar "
"<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-3.html>`_"
msgstr ""

# 56aabd32126a4ab189532065eafc8392
#: ../../../en/tutorial/section2.txt:61
msgid ""
"If users are to navigate through the map, a reference map should be "
"provided: `Example 2.4 - Adding a Reference Map <http://demo.mapserver.org"
"/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-4.html>`_"
msgstr ""

# 0c87942939434477bd63236fe5e13b1f
#: ../../../en/tutorial/section2.txt:64
msgid ""
"The map should include a legend. `Example 2.5- Adding a Legend "
"<http://demo.mapserver.org/cgi-"
"bin/mapserv?map=/osgeo/mapserver/tutorial/htdocs/example2.map&layer=states&zoom=0&mode=browse&root=/tutorial&program"
"=/cgi-bin/mapserv&map_web=template+example2-5.html>`_"
msgstr ""

# 5345bb81ef1e4a4f8705b02692d5793f
#: ../../../en/tutorial/section2.txt:69
msgid ""
":ref:`Back to Section 1 index <tutorial_section1>` | :ref:`Proceed to "
"Section 3 <tutorial_section3>`"
msgstr ""

# 9cab270346a44bb4b8618ded4743edf6
#: ../../../en/tutorial/section3.txt:4
msgid "Section 3: Query and more about HTML Templates"
msgstr ""

# 9a09bd7fce334cb3a529a462d5edce3e
#: ../../../en/tutorial/section3.txt:6
msgid ""
"To learn more about query and HTML templates with MapServer, see examples "
"3.1 to 3.4 in the `Tutorial Viewer "
"<http://demo.mapserver.org/tutorial/section3.html>`_."
msgstr ""

# bef2d78b5f6b43a49769296233673712
#: ../../../en/tutorial/section3.txt:13
msgid ""
":ref:`Back to Section 2 index <tutorial_section2>` | :ref:`Proceed to "
"Section 4 <tutorial_section4>`"
msgstr ""

# 068cff71815149e3829d0c4e77bece17
#: ../../../en/tutorial/section4.txt:4
msgid "Section 4: Advanced User Interfaces"
msgstr ""

# 5d858338ba3d4ae487040db08735d2dd
#: ../../../en/tutorial/section4.txt:6
msgid ""
"To learn more about advanced navigation such as pan and rubber-band zoom "
"with Javascript and MapServer CGI, see examples 4.1 to 4.4 in the `Tutorial "
"Viewer <http://demo.mapserver.org/tutorial/section4.html>`_."
msgstr ""

# 9202f2df1cf541a48641083af82c0880
#: ../../../en/tutorial/section4.txt:13
msgid ""
":ref:`Back to Section 3 index <tutorial_section3>` | :ref:`Tutorial home "
"<tutorial>`"
msgstr ""
