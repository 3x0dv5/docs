.. _documentation_development:

*****************************************************************************
Guide de développement de la documentation
*****************************************************************************

:Author:  Howard Butler
:Contact: hobu.inc at gmail.com
:Author:  Jeff McKenna
:Contact: jmckenna at gatewaygeomatics.com
:Last Updated: 2013-06-20

.. contents:: Table of Contents
    :depth: 2
    :backlinks: top

Background
----------

La structure actuelle du processus de documentation de MapServer est pour les 
développeurs afin de maintenir la documentation au format reStructuredText, et 
soumettre leurs changements via des *pull request* :ref:`git` ; vous devez 
d'abords créer un `compte personnel gratuit <https://github.com/plans/>`_ sur 
GitHub. Le générateur de documentation `Sphinx`_ est utilisé pour convertir 
les fichiers reStructuredText en html et le site web en ligne est automatiquement 
mis à jour toutes les deux heures.


Remarques sur GitHub
---------------------

* Les fichiers de documentation sont stockés dans le sous projet /docs sur GitHub : https://github.com/mapserver/docs
* Envoyez vos *pull requests* sur la branche la plus récente (comme la branche branch-6-2), 
  pas sur master.
* Lisez `les guides d'aide <https://help.github.com/articles/set-up-git/>`_ de GitHub  
  pour installer Git en local
* Commandes utiles de git :

  * cloner une branche en local :
   
    ::
   
      git clone -b branch-6-2 git@github.com:mapserver/docs.git mapserver-docs-git-branch-6-2
      
  * mettre à jour les fichiers locaux :
  
    ::
    
      git pull
      
  * ajouter un fichier au dépôt (il est nécessaire de commiter après cela) :
  
    ::
    
      git add <file>
      
  * commiter le fichier dans le dépôt :
  
    ::
    
      git commit -m "my message" <files>  

Guide général de rédaction
--------------------------

* MapServer au lieu de mapserver, map server, Map Server, mapServer ou
  map Server.
* MapScript au lieu de mapscript, Mapscript ou map script.
* PostGIS au lieu de postgis.
* HowTo au lieu de howto ou HOWTO.
* Les adresse email doivent être manuellement protégé contre le spam :

  ::

      hobu.inc at gmail.com instead of hobu.inc@gmail.com

Guides de référence du reStructuredText
----------------------------------------

* `Le reStructuredText rapidement`_

Formattage reStructuredText
---------------------------

* Le text doit avoir une longueur de 80 colonnes, comme le code source. 
* Pas de ``.. sectnum::`` dans les directives de contenu
* Tous les liens externes doivent être placé en bas du document, sous le 
  titre :

  ::

      .. #### rST Link Section ####
* Inclure toujours les lignes :Revision: et :Date:  en haut de votre 
  document, comme ceci :

  ::

      :Revision: $Revision$
      :Date: $Date$

Installer et utiliser la génération de rst vers html avec Sphinx
-----------------------------------------------------------------

.. note::
   
    À partir du 1er juin 2010 le site MapServer nécessite Sphinx 1.0.  Vous pouvez trouver 
    les versions des paquets Sphinx `ici <http://pypi.python.org/pypi?%3Aaction=index>`__,
    puis installer la version exacte comme ceci :
        
    ::
        
        easy_install Sphinx==1.0.7


**Sur Windows :**

#. installer `Python 2.X`_
#. télécharger `setuptools`_
#. assurer vous que le répertoire 'C:/Python2X/Scripts' est dans votre path
#. exécuter la commande suivante :

   ::

       easy_install Sphinx

   ...vous devez voir le message : "Finished processing dependencies for Sphinx"

   .. note::
   
      Assurez vous d'installer Sphinx 1.0 ou plus récent. Voir la remarque au dessus.
      
#. inside the /docs directory, execute:

   ::

       make html

   or

   ::

       make latex

   la sortie HTML sera écrite dans le sous-répertoire build/html.

**Sous Linux :**

#. assurez cous d'avoir les paquets Python dev et setuptools d'installés.
   Sous Ubuntu:

   ::

       sudo apt-get install python-dev
       sudo apt-get install python-setuptools

#. installer sphinx en utilisant easy_install:

   ::

       sudo easy_install Sphinx
       
   .. note::
    
      Assurez vous d'avoir installer Sphinx 1.0 ou plus récent.  Voir la note ci-dessus.       

#. pour compiler la doc, à partir du répertoire /docs de MapServer, lancez :

   ::

       make html

   ou

   ::

       make latex

   la sortie HTML sera écrit dans le sous-répertoire build/html.

.. note::

    S'il y a plus d'une traduction, les commandes ci-dessus compilera toutes 
    les traductions.


**Sous OS X :**

#. installer sphinx en utilisant easy_install:

   ::

       sudo easy_install Sphinx
       
   .. note::
   
      Assurez vous d'avoir installer Sphinx 1.0 ou plus récent.  Voir la note ci-dessus. 

#. installer MacTex à partir de http://www.tug.org/mactex/2009/ si vous voulez compiler les pdf

#. pour compiler la doc, à partir du répertoire /docs de MapServer, lancez :

   ::

       make html

   ou

   ::

       make latex

   la sortie HTML sera écrite dans le sous-répertoire build/html.

.. note::

    S'il y a plus d'une traduction, les commandes ci-dessus compilera toutes 
    les traductions.

Comment les traductions sont elles gérées ?
--------------------------------------------


* Toutes les traductions sont organisées en sous-répertoire dans le répertoire 
  /docs de MapServer
* Les répertoires sont nommés en utilisant `les codes des pays ISO3166-1 alpha-2`_, 
  qui correspondront également à l'icône des drapeaux.
* Les traductions sont basées sur la doc anglaise.
* La structure des répertoires et les noms des fichiers ne doivent pas être 
  modifiés, ils sont utilisés pour générer les liens entre les différentes 
  traductions.

.. note::

    Pour démarrer une nouvelle traduction, copiez les répertoires images et les 
    autres à partir du répertoire docs/en vers docs/<lang>, où <lang> est l'un des 
    codes de pays. Vous devez aussi copier les fichiers docs/en/documentation.txt 
    et docs/en/index.txt dans votre répertoire <lang> (le processus de compilation 
    a besoin de ces fichiers ... vous êtes libre de les éditer comme vous le 
    désirez dans votre propre langue).

* Seulement les fichiers traduits sont laissés dans les répertoires <lang> et le 
  dépôt.
* Le script de build (Makefile et make.bat) ont une option (init) pour préparer 
  les répertoires <lang>. Cela signifie que chaque fichier anglais non traduit 
  est copié dans le répertoire <lang> cible. Vous n'avez pas besoin de faire cela 
  pour compiler les fichiers html en local. Si vous faîtes cela, vous devez 
  nettoyer vos répertoires.
* Pour garder les traductions en synchronistation avec la doc anglaise, les 
  traducteurs peuvent suivre les commits du répertoire.

.. note::

    Une manière de monitorer les modifications est de s'inscrire au flux RSS 
    via Github :
    dans le répertoire docs, cliquez sur l'onglet "Commits" et trouvez le lien 
    d'inscription pour ces modifications, par exemple :
    voir "Commit History" sur https://github.com/mapserver/docs/commits/branch-6-2

* vous devez définir quelles langues sont disponibles en définissant la variable 
  TRANSLATIONS dans le Makefile ou make.bat:

   ::

      TRANSLATIONS     = en de

Le script de build compilera alors les sous-répertoires *en* et *de*. S'ils ne sont 
pas accessible, un message d'erreur sera renvoyé.


Référence des Labels
----------------------

.. include:: ../include/labels.inc


Regénérer la reference des labels
..................................

Vous pouvez générer la référence des labels en lançant : 

::

    make labels

à partir du répertoire docs de la même manière que lorsque vous compiler 
les versions html ou latex.

.. #### rST Link Section ####

.. _`Sphinx`: http://sphinx-doc.org/
.. _`Le reStructuredText rapidement`: http://docutils.sourceforge.net/docs/user/rst/quickref.html
.. _`setuptools`: http://pypi.python.org/pypi/setuptools#windows
.. _`Python 2.X`: http://www.python.org/
.. _`les codes des pays ISO3166-1 alpha-2`: http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
